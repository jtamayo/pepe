diff -urNw dt-a/daytrader-h2-datasource/pom.xml dt-e/daytrader-h2-datasource/pom.xml
--- daytrader-h2-datasource/pom.xml	1970-01-01 10:00:00.000000000 +1000
+++ daytrader-h2-datasource/pom.xml	2009-10-22 16:39:16.000000000 +1100
@@ -0,0 +1,118 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+    Licensed to the Apache Software Foundation (ASF) under one or more
+    contributor license agreements.  See the NOTICE file distributed with
+    this work for additional information regarding copyright ownership.
+    The ASF licenses this file to You under the Apache License, Version 2.0
+    (the "License"); you may not use this file except in compliance with
+    the License.  You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+-->
+
+<!-- $Rev: 723004 $ $Date: 2008-12-04 05:31:10 +1100 (Thu, 04 Dec 2008) $ -->
+<project>
+    <parent>
+        <artifactId>daytrader</artifactId>
+        <groupId>org.apache.geronimo.daytrader</groupId>
+        <version>2.2-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+    <groupId>org.apache.geronimo.daytrader</groupId>
+    <artifactId>daytrader-h2-datasource</artifactId>
+    <packaging>car</packaging>
+    <name>Daytrader :: H2 DataSource</name>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.tranql</groupId>
+            <artifactId>tranql-connector-h2-xa</artifactId>
+            <type>rar</type>
+            <version>1.4</version>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.apache.geronimo.framework</groupId>
+            <artifactId>geronimo-gbean-deployer</artifactId>
+            <type>car</type>
+            <version>${geronimoVersion}</version>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.apache.geronimo.configs</groupId>
+            <artifactId>j2ee-deployer</artifactId>
+            <type>car</type>
+            <version>${geronimoVersion}</version>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.apache.geronimo.configs</groupId>
+            <artifactId>connector-deployer</artifactId>
+            <type>car</type>
+            <version>${geronimoVersion}</version>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>com.h2database</groupId>
+            <artifactId>h2</artifactId>
+            <version>1.2.121</version>
+            <type>jar</type>
+        </dependency>
+    </dependencies>
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.apache.geronimo.buildsupport</groupId>
+                <artifactId>car-maven-plugin</artifactId>
+                <!-- Install as extention to allow 'car' packaging to be used. -->
+                <extensions>true</extensions>
+                <configuration>
+                    <archive>
+                        <!-- Do not include META-INF/maven to avoid long file problems on windows -->
+                        <addMavenDescriptor>false</addMavenDescriptor>
+                    </archive>
+                    <osiApproved>true</osiApproved>
+                    <useMavenDependencies>
+                        <value>true</value>
+                        <includeVersion>true</includeVersion>
+                    </useMavenDependencies>
+                    <deploymentConfigs>
+                        <deploymentConfig>${gbeanDeployer}</deploymentConfig>
+                        <deploymentConfig>${j2eeDeployer}</deploymentConfig>
+                        <deploymentConfig>${connectorDeployer}</deploymentConfig>
+                    </deploymentConfigs>
+                    <module>
+                        <groupId>org.tranql</groupId>
+                        <artifactId>tranql-connector-h2-xa</artifactId>
+                        <type>rar</type>
+                    </module>
+                    <commonInstance>
+                        <plugin-artifact>
+                            <geronimo-version>${geronimoVersion}</geronimo-version>
+                            <jvm-version>1.5</jvm-version>
+                            <jvm-version>1.6</jvm-version>
+                            <source-repository>~/.m2/repository/</source-repository>
+                            <source-repository>http://repo1.maven.org/maven2/</source-repository>
+                        </plugin-artifact>
+                    </commonInstance>
+                    <instance>
+                        <plugin-artifact>
+                            <artifact-alias key="org.apache.geronimo.daytrader/daytrader-derby-database/${version}/car">org.apache.geronimo.daytrader/daytrader-h2-database/${version}/car</artifact-alias>
+                            <!-- The following doesn't work with c-m-p in 2.1.3
+                            <obsoletes>org.apache.geronimo.daytrader/daytrader//car</obsoletes>
+                            <obsoletes>org.apache.geronimo.daytrader/daytrader-derby-datasource//car</obsoletes>
+                            <obsoletes>org.apache.geronimo.daytrader/daytrader-h2-datasource//car</obsoletes>
+                            -->
+                        </plugin-artifact>
+                    </instance>
+                </configuration>
+            </plugin>
+        </plugins>
+    </build>
+</project>
diff -urNw dt-a/daytrader-h2-datasource/src/main/plan/plan.xml dt-e/daytrader-h2-datasource/src/main/plan/plan.xml
--- daytrader-h2-datasource/src/main/plan/plan.xml	1970-01-01 10:00:00.000000000 +1000
+++ daytrader-h2-datasource/src/main/plan/plan.xml	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,66 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+    Licensed to the Apache Software Foundation (ASF) under one or more
+    contributor license agreements.  See the NOTICE file distributed with
+    this work for additional information regarding copyright ownership.
+    The ASF licenses this file to You under the Apache License, Version 2.0
+    (the "License"); you may not use this file except in compliance with
+    the License.  You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+-->
+
+<!-- $Rev: 660735 $ $Date: 2008-05-28 07:54:57 +1000 (Wed, 28 May 2008) $ -->
+
+<connector xmlns="http://geronimo.apache.org/xml/ns/j2ee/connector-1.2">
+    <resourceadapter>
+        <outbound-resourceadapter>
+            <connection-definition>
+                <connectionfactory-interface>javax.sql.DataSource</connectionfactory-interface>
+                <connectiondefinition-instance>
+                    <name>jdbc/TradeDataSource</name>
+                    <config-property-setting name="Password">password</config-property-setting>
+                    <config-property-setting name="UserName">user</config-property-setting>
+                    <config-property-setting name="ConnectionURL">jdbc:h2:mem:trade;MVCC=true</config-property-setting>
+                    <connectionmanager>
+                        <xa-transaction>
+                            <transaction-caching/>
+                        </xa-transaction>
+                        <single-pool>
+                            <max-size>16</max-size>
+                            <min-size>0</min-size>
+                            <match-one/>
+                        </single-pool>
+                    </connectionmanager>
+                </connectiondefinition-instance>
+            </connection-definition>
+        </outbound-resourceadapter>
+    </resourceadapter>
+    <resourceadapter>
+        <outbound-resourceadapter>
+            <connection-definition>
+                <connectionfactory-interface>javax.sql.DataSource</connectionfactory-interface>
+                <connectiondefinition-instance>
+                    <name>jdbc/NoTxTradeDataSource</name>
+                    <config-property-setting name="Password">password</config-property-setting>
+                    <config-property-setting name="UserName">user</config-property-setting>
+                    <config-property-setting name="ConnectionURL">jdbc:h2:mem:trade;MVCC=true</config-property-setting>
+                    <connectionmanager>
+                        <no-transaction/>
+                        <single-pool>
+                            <max-size>16</max-size>
+                            <min-size>0</min-size>
+                            <match-one/>
+                        </single-pool>
+                    </connectionmanager>
+                </connectiondefinition-instance>
+            </connection-definition>
+        </outbound-resourceadapter>
+    </resourceadapter>
+</connector>
diff -urNw dt-a/daytrader-jetty/pom.xml dt-e/daytrader-jetty/pom.xml
--- daytrader-jetty/pom.xml	2009-10-13 15:17:48.000000000 +1100
+++ daytrader-jetty/pom.xml	2009-10-22 15:20:20.000000000 +1100
@@ -40,7 +40,7 @@
         </dependency>
         <dependency>
             <groupId>org.apache.geronimo.daytrader</groupId>
-            <artifactId>daytrader-derby-datasource</artifactId>
+            <artifactId>daytrader-h2-datasource</artifactId>
             <version>${version}</version>
             <type>car</type>
         </dependency>
@@ -195,6 +195,97 @@
                     </instance>
                 </configuration>
             </plugin>
+
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-antrun-plugin</artifactId>
+                <executions>
+                    <execution>
+                        <id>install</id>
+                        <phase>install</phase>
+                        <goals>
+                            <goal>run</goal>
+                        </goals>
+                        <configuration>
+                            <tasks>
+                                <echo>Copying manually generated geronimo-plugin.xml files for app daytrader ws client</echo>
+                                <copy todir="${project.build.directory}/repository/org/apache/geronimo/daytrader/daytrader-ws-client/${version}/daytrader-ws-client-${version}.car/META-INF"
+                                    failonerror="false" overwrite="true">
+                                    <fileset dir="${basedir}/../plans/wsclient" includes="geronimo-plugin.xml"/>
+                                </copy>
+
+                                <echo>Copying manually generated geronimo-plugin.xml files for daytrader dacapo ws client</echo>
+                                <copy todir="${project.build.directory}/repository/org/apache/geronimo/daytrader/daytrader-dacapo/${version}/daytrader-dacapo-${version}.car/META-INF"
+                                    failonerror="false" overwrite="true">
+                                    <fileset dir="${basedir}/../plans/dacapo" includes="geronimo-plugin.xml"/>
+                                </copy>
+
+                                <echo>Copying manually generated geronimo-plugin.xml files for app daytrader streamer client</echo>
+                                <copy todir="${project.build.directory}/repository/org/apache/geronimo/daytrader/daytrader-streamer-client/${version}/daytrader-streamer-client-${version}.car/META-INF"
+                                    failonerror="false" overwrite="true">
+                                    <fileset dir="${basedir}/../plans/streamerclient" includes="geronimo-plugin.xml"/>
+                                </copy>
+
+                                <echo>Pack the daytrader ws client car file and install onto local repo</echo>
+                                <jar destfile="${project.build.directory}/daytrader-ws-client-${version}.car"
+                                    basedir="${project.build.directory}/repository/org/apache/geronimo/daytrader/daytrader-ws-client/${version}/daytrader-ws-client-${version}.car"/>
+                                
+                                <condition property="mvn.exe" value="mvn.bat" else="mvn">
+                                    <os family="windows"/>
+                                </condition>
+                                <exec executable="${mvn.exe}">
+                                    <arg value="install:install-file"/>
+                                    <arg value="-Dfile=${project.build.directory}/daytrader-ws-client-${version}.car"/>
+                                    <arg value="-DgroupId=org.apache.geronimo.daytrader"/>
+                                    <arg value="-DartifactId=daytrader-ws-client"/>
+                                    <arg value="-Dversion=${version}"/>
+                                    <arg value="-Dpackaging=car"/>
+                                    <arg value="-DgeneratePom=true"/>
+                                    <arg value="-DcreateChecksum=true"/>
+                                </exec>
+                                
+                                <echo>Pack the daytrader dacapo ws client car file and install onto local repo</echo>
+                                <jar destfile="${project.build.directory}/daytrader-dacapo-${version}.car"
+                                    basedir="${project.build.directory}/repository/org/apache/geronimo/daytrader/daytrader-dacapo/${version}/daytrader-dacapo-${version}.car"/>
+                                
+                                <condition property="mvn.exe" value="mvn.bat" else="mvn">
+                                    <os family="windows"/>
+                                </condition>
+                                <exec executable="${mvn.exe}">
+                                    <arg value="install:install-file"/>
+                                    <arg value="-Dfile=${project.build.directory}/daytrader-dacapo-${version}.car"/>
+                                    <arg value="-DgroupId=org.apache.geronimo.daytrader"/>
+                                    <arg value="-DartifactId=daytrader-dacapo"/>
+                                    <arg value="-Dversion=${version}"/>
+                                    <arg value="-Dpackaging=car"/>
+                                    <arg value="-DgeneratePom=true"/>
+                                    <arg value="-DcreateChecksum=true"/>
+                                </exec>
+                                
+                                <echo>Pack the daytrader streamer client car file and install onto local repo</echo>
+                                <jar destfile="${project.build.directory}/daytrader-streamer-client-${version}.car"
+                                    basedir="${project.build.directory}/repository/org/apache/geronimo/daytrader/daytrader-streamer-client/${version}/daytrader-streamer-client-${version}.car"/>
+                                
+
+                                <condition property="mvn.exe" value="mvn.bat" else="mvn">
+                                    <os family="windows"/>
+                                </condition>
+                                <exec executable="${mvn.exe}">
+                                    <arg value="install:install-file"/>
+                                    <arg value="-Dfile=${project.build.directory}/daytrader-streamer-client-${version}.car"/>
+                                    <arg value="-DgroupId=org.apache.geronimo.daytrader"/>
+                                    <arg value="-DartifactId=daytrader-streamer-client"/>
+                                    <arg value="-Dversion=${version}"/>
+                                    <arg value="-Dpackaging=car"/>
+                                    <arg value="-DgeneratePom=true"/>
+                                    <arg value="-DcreateChecksum=true"/>
+                                </exec>
+
+                            </tasks>
+                        </configuration>
+                    </execution>
+                </executions>
+            </plugin>
         </plugins>
     </build>
     <profiles>
diff -urNw dt-a/daytrader-jetty/src/main/plan/plan.xml dt-e/daytrader-jetty/src/main/plan/plan.xml
--- daytrader-jetty/src/main/plan/plan.xml	2009-10-13 15:17:48.000000000 +1100
+++ daytrader-jetty/src/main/plan/plan.xml	2009-10-22 15:20:20.000000000 +1100
@@ -179,4 +179,26 @@
         </application-client>
     </module>
 
+    <module>
+        <java>dacapo.jar</java>
+        <application-client xmlns="http://geronimo.apache.org/xml/ns/j2ee/application-client-2.0">
+            <client-environment xmlns="http://geronimo.apache.org/xml/ns/deployment-1.2">
+                <moduleId>
+                    <groupId>org.apache.geronimo.daytrader</groupId>
+                    <artifactId>daytrader-dacapo</artifactId>
+                    <version>2.2-SNAPSHOT</version>
+                    <type>car</type>
+                </moduleId>
+            </client-environment>
+            <server-environment xmlns="http://geronimo.apache.org/xml/ns/deployment-1.2">
+                <moduleId>
+                    <groupId>org.apache.geronimo.daytrader</groupId>
+                    <artifactId>daytrader-dacapo-server</artifactId>
+                    <version>2.2-SNAPSHOT</version>
+                    <type>car</type>
+                </moduleId>
+            </server-environment>
+        </application-client>
+    </module>
+
 </application>
diff -urNw dt-a/daytrader-tomcat/pom.xml dt-e/daytrader-tomcat/pom.xml
--- daytrader-tomcat/pom.xml	2009-10-13 15:17:40.000000000 +1100
+++ daytrader-tomcat/pom.xml	2009-10-22 15:20:20.000000000 +1100
@@ -39,7 +39,7 @@
         </dependency>
         <dependency>
             <groupId>org.apache.geronimo.daytrader</groupId>
-            <artifactId>daytrader-derby-datasource</artifactId>
+            <artifactId>daytrader-h2-datasource</artifactId>
             <version>${version}</version>
             <type>car</type>
         </dependency>
diff -urNw dt-a/modules/dacapo/LICENSE dt-e/modules/dacapo/LICENSE
--- modules/dacapo/LICENSE	1970-01-01 10:00:00.000000000 +1000
+++ modules/dacapo/LICENSE	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,203 @@
+
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets "[]"
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same "printed page" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright [yyyy] [name of copyright owner]
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+
diff -urNw dt-a/modules/dacapo/NOTICE dt-e/modules/dacapo/NOTICE
--- modules/dacapo/NOTICE	1970-01-01 10:00:00.000000000 +1000
+++ modules/dacapo/NOTICE	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,9 @@
+Apache Geronimo 
+Copyright 2003-2009 The Apache Software Foundation
+
+This product includes software developed by
+The Apache Software Foundation (http://www.apache.org/).
+
+Portions of this software were developed at IBM and donated to the 
+ASF under the Apache 2.0 license.  The former work was referred to 
+as Trade 6.
diff -urNw dt-a/modules/dacapo/pom.xml dt-e/modules/dacapo/pom.xml
--- modules/dacapo/pom.xml	1970-01-01 10:00:00.000000000 +1000
+++ modules/dacapo/pom.xml	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,135 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+    Licensed to the Apache Software Foundation (ASF) under one or more
+    contributor license agreements.  See the NOTICE file distributed with
+    this work for additional information regarding copyright ownership.
+    The ASF licenses this file to You under the Apache License, Version 2.0
+    (the "License"); you may not use this file except in compliance with
+    the License.  You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+-->
+
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
+                                   http://maven.apache.org/maven-v4_0_0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+    <parent>
+        <groupId>org.apache.geronimo.daytrader</groupId>
+        <artifactId>daytrader</artifactId>
+        <version>2.2-SNAPSHOT</version>
+    </parent>
+    <artifactId>daytrader-dacapo</artifactId>
+    <name>DayTrader :: DaCapo Workload</name>
+    <packaging>jar</packaging>
+    <description>Client demonstrating Web Services</description>
+    <scm>
+        <connection>scm:svn:http://svn.apache.org/repos/asf/geronimo/daytrader/trunk/modules/dacapo</connection>
+        <developerConnection>
+            scm:svn:http://svn.apache.org/repos/asf/geronimo/daytrader/trunk/modules/dacapo</developerConnection>
+        <url>http://svn.apache.org/viewcvs.cgi/geronimo/daytrader/trunk/modules/dacapo</url>
+    </scm>
+    <dependencies>
+        <dependency>
+            <groupId>org.apache.geronimo.daytrader</groupId>
+            <artifactId>daytrader-ejb</artifactId>
+            <version>${pom.version}</version>
+            <scope>provided</scope>
+            <type>ejb</type>
+        </dependency>
+         <dependency>
+            <groupId>org.apache.geronimo.daytrader</groupId>
+            <artifactId>daytrader-wsappclient</artifactId>
+            <version>${pom.version}</version>
+            <scope>compile</scope>
+        </dependency>
+                <dependency>
+            <groupId>org.apache.geronimo.specs</groupId>
+            <artifactId>geronimo-jms_1.1_spec</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.apache.geronimo.specs</groupId>
+            <artifactId>geronimo-servlet_2.5_spec</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.apache.geronimo.specs</groupId>
+            <artifactId>geronimo-jsp_2.1_spec</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>jstl</groupId>
+            <artifactId>jstl</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.apache.geronimo.specs</groupId>
+            <artifactId>geronimo-jpa_3.0_spec</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.apache.geronimo.specs</groupId>
+            <artifactId>geronimo-ejb_3.0_spec</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.apache.geronimo.specs</groupId>
+            <artifactId>geronimo-jta_1.1_spec</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+    		<groupId>org.apache.geronimo.specs</groupId>
+    		<artifactId>geronimo-annotation_1.0_spec</artifactId>
+    		<scope>provided</scope>
+		</dependency>
+    </dependencies>
+    <build>
+        <plugins>
+            <plugin>
+                <artifactId>maven-jar-plugin</artifactId>
+                <configuration>
+                    <!-- Caveat: The wsappclient module currently has a cyclic dependency on the EJB module. Thus we are forced
+            to include a manual class-path entry pointing to the EJB module. When this is fixed
+            remove the manifestEntries section below and this comment. -->
+                    <archive>
+                     <!--   <manifestEntries>
+                            <class-path>wsappclient.jar dt-ejb.jar</class-path>
+                        </manifestEntries> -->
+                        <manifestEntries>
+                            <class-path>wsappclient.jar dt-ejb.jar</class-path>
+                        </manifestEntries>
+                        <manifest>
+                           <main-class>org.apache.geronimo.samples.daytrader.dacapoclient.DaCapoClient</main-class>
+                        </manifest>
+                    </archive>
+                </configuration>
+            </plugin>
+            <!-- Caveat: Need to be replaced with axis plugin by Jesse
+            <plugin>
+                <groupId>org.codehaus.mojo</groupId>
+                <artifactId>wsdl2java-maven-plugin</artifactId>
+                <configuration>
+                    <packageSpace>org.apache.geronimo.samples.daytrader.client.dacapows</packageSpace>
+                    <serverSide>true</serverSide>
+                </configuration>
+                <executions>
+                    <execution>
+                        <phase>generate-sources</phase>
+                        <goals>
+	                    <goal>generate</goal>
+  	                </goals>
+	            </execution>
+	        </executions>
+            </plugin>
+            -->
+        </plugins>
+    </build>
+</project>
diff -urNw dt-a/modules/dacapo/src/main/java/org/apache/geronimo/samples/daytrader/dacapoclient/DaCapoClient.java dt-e/modules/dacapo/src/main/java/org/apache/geronimo/samples/daytrader/dacapoclient/DaCapoClient.java
--- modules/dacapo/src/main/java/org/apache/geronimo/samples/daytrader/dacapoclient/DaCapoClient.java	1970-01-01 10:00:00.000000000 +1000
+++ modules/dacapo/src/main/java/org/apache/geronimo/samples/daytrader/dacapoclient/DaCapoClient.java	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,63 @@
+/**
+ *  Licensed to the Apache Software Foundation (ASF) under one or more
+ *  contributor license agreements.  See the NOTICE file distributed with
+ *  this work for additional information regarding copyright ownership.
+ *  The ASF licenses this file to You under the Apache License, Version 2.0
+ *  (the "License"); you may not use this file except in compliance with
+ *  the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
+package org.apache.geronimo.samples.daytrader.dacapoclient;
+
+//import org.apache.geronimo.samples.daytrader.*;
+import org.apache.geronimo.samples.daytrader.dacapo.DaCapoRunner;
+import org.apache.geronimo.samples.daytrader.dacapo.DaCapoTrader;
+import org.apache.geronimo.samples.daytrader.soap.TradeWebSoapProxy;
+
+public class DaCapoClient {
+  int completed;
+
+	public static void main(String[] args) {
+		boolean initialize = false;
+		boolean beans = false;
+		int numThreads = 64;
+		String size = "medium";
+		
+		try {
+	    for (int i = 0; i < args.length; i++) {
+	      if ("-t".equals(args[i])) {
+	        numThreads = Integer.parseInt(args[++i]);
+	      } else if ("-i".equals(args[i])) {
+	      	initialize = true;
+	      } else if ("-s".equals(args[i])) {
+	      	size = args[++i];
+	      } else if ("-b".equals(args[i])) {
+	      	beans = true;
+	      }
+			}
+
+	    if (initialize) {
+	    	DaCapoTrader.initializeTrade(size);
+	    } else {
+  			if (beans) {
+  				/* run workload on the server side */
+  				TradeWebSoapProxy trade = new TradeWebSoapProxy();
+  				trade.runDaCapoTrade(size, numThreads, false);
+  			} else { 
+  				/* run workload on the client side */
+  				DaCapoRunner.runDaCapoTrade(size, numThreads, true);
+  			}
+	    }
+		} catch (Exception e) {
+			System.err.println("Caught an unexpected exception!");
+			e.printStackTrace();
+		}
+	}
+}
\ No newline at end of file
diff -urNw dt-a/modules/dacapo/src/main/resources/LICENSE dt-e/modules/dacapo/src/main/resources/LICENSE
--- modules/dacapo/src/main/resources/LICENSE	1970-01-01 10:00:00.000000000 +1000
+++ modules/dacapo/src/main/resources/LICENSE	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,203 @@
+
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets "[]"
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same "printed page" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright [yyyy] [name of copyright owner]
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+
diff -urNw dt-a/modules/dacapo/src/main/resources/META-INF/application-client.xml dt-e/modules/dacapo/src/main/resources/META-INF/application-client.xml
--- modules/dacapo/src/main/resources/META-INF/application-client.xml	1970-01-01 10:00:00.000000000 +1000
+++ modules/dacapo/src/main/resources/META-INF/application-client.xml	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+   Licensed to the Apache Software Foundation (ASF) under one or more
+   contributor license agreements.  See the NOTICE file distributed with
+   this work for additional information regarding copyright ownership.
+   The ASF licenses this file to You under the Apache License, Version 2.0
+   (the "License"); you may not use this file except in compliance with
+   the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+-->
+<application-client version="1.4"
+	xmlns="http://java.sun.com/xml/ns/j2ee"
+	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/application-client_1_4.xsd">
+	<service-ref>
+		<description>WSDL Service Trade</description>
+		<service-ref-name>service/Trade</service-ref-name>
+		<service-interface>
+			org.apache.geronimo.samples.daytrader.client.ws.Trade
+		</service-interface>
+		<wsdl-file>META-INF/wsdl/TradeServices.wsdl</wsdl-file>
+		<jaxrpc-mapping-file>
+			META-INF/TradeServices_mapping.xml
+		</jaxrpc-mapping-file>
+		<service-qname
+			xmlns:pfx="http://daytrader.samples.geronimo.apache.org">
+			pfx:Trade
+		</service-qname>
+		<port-component-ref>
+			<service-endpoint-interface>
+				org.apache.geronimo.samples.daytrader.client.ws.TradeWSServices
+			</service-endpoint-interface>
+		</port-component-ref>
+	</service-ref>
+</application-client>
diff -urNw dt-a/modules/dacapo/src/main/resources/META-INF/LICENSE dt-e/modules/dacapo/src/main/resources/META-INF/LICENSE
--- modules/dacapo/src/main/resources/META-INF/LICENSE	1970-01-01 10:00:00.000000000 +1000
+++ modules/dacapo/src/main/resources/META-INF/LICENSE	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,203 @@
+
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets "[]"
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same "printed page" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright [yyyy] [name of copyright owner]
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+
diff -urNw dt-a/modules/dacapo/src/main/resources/META-INF/MANIFEST.MF dt-e/modules/dacapo/src/main/resources/META-INF/MANIFEST.MF
--- modules/dacapo/src/main/resources/META-INF/MANIFEST.MF	1970-01-01 10:00:00.000000000 +1000
+++ modules/dacapo/src/main/resources/META-INF/MANIFEST.MF	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,6 @@
+Manifest-Version: 1.0
+Class-Path: ejb.jar
+Created-By: 1.4.2_08 (Sun Microsystems Inc.)
+Ant-Version: Apache Ant 1.5.4 
+Main-Class: org.apache.geronimo.samples.daytrader.dacapoclient.DaCapoClient
+
diff -urNw dt-a/modules/dacapo/src/main/resources/META-INF/NOTICE dt-e/modules/dacapo/src/main/resources/META-INF/NOTICE
--- modules/dacapo/src/main/resources/META-INF/NOTICE	1970-01-01 10:00:00.000000000 +1000
+++ modules/dacapo/src/main/resources/META-INF/NOTICE	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,9 @@
+Apache Geronimo 
+Copyright 2003-2009 The Apache Software Foundation
+
+This product includes software developed by
+The Apache Software Foundation (http://www.apache.org/).
+
+Portions of this software were developed at IBM and donated to the 
+ASF under the Apache 2.0 license.  The former work was referred to 
+as Trade 6.
diff -urNw dt-a/modules/dacapo/src/main/resources/META-INF/TradeServices_mapping.xml dt-e/modules/dacapo/src/main/resources/META-INF/TradeServices_mapping.xml
--- modules/dacapo/src/main/resources/META-INF/TradeServices_mapping.xml	1970-01-01 10:00:00.000000000 +1000
+++ modules/dacapo/src/main/resources/META-INF/TradeServices_mapping.xml	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,1036 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+   Licensed to the Apache Software Foundation (ASF) under one or more
+   contributor license agreements.  See the NOTICE file distributed with
+   this work for additional information regarding copyright ownership.
+   The ASF licenses this file to You under the Apache License, Version 2.0
+   (the "License"); you may not use this file except in compliance with
+   the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+-->
+<java-wsdl-mapping version="1.1" xmlns="http://java.sun.com/xml/ns/j2ee"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://www.ibm.com/webservices/xsd/j2ee_jaxrpc_mapping_1_1.xsd">
+    <package-mapping>
+        <package-type>org.apache.geronimo.samples.daytrader.client.ws</package-type>
+        <namespaceURI>http://daytrader.samples.geronimo.apache.org</namespaceURI>
+    </package-mapping>
+    <java-xml-type-mapping>
+        <java-type>org.apache.geronimo.samples.daytrader.client.ws.QuoteDataBean[]</java-type>
+        <anonymous-type-qname>http://daytrader.samples.geronimo.apache.org:QuoteDataBean[0,unbounded]</anonymous-type-qname>
+        <qname-scope>complexType</qname-scope>
+    </java-xml-type-mapping>
+<!--    <java-xml-type-mapping>
+        <java-type>double</java-type>
+        <root-type-qname xmlns:rtq="http://www.w3.org/2001/XMLSchema">rtq:double</root-type-qname>
+        <qname-scope>simpleType</qname-scope>
+    </java-xml-type-mapping>  -->
+    <java-xml-type-mapping>
+        <java-type>org.apache.geronimo.samples.daytrader.client.ws.OrderDataBean</java-type>
+        <root-type-qname xmlns:rtq="http://daytrader.samples.geronimo.apache.org">rtq:OrderDataBean</root-type-qname>
+        <qname-scope>complexType</qname-scope>
+        <variable-mapping>
+            <java-variable-name>orderID</java-variable-name>
+            <xml-element-name>orderID</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>orderType</java-variable-name>
+            <xml-element-name>orderType</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>orderStatus</java-variable-name>
+            <xml-element-name>orderStatus</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>openDate</java-variable-name>
+            <xml-element-name>openDate</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>completionDate</java-variable-name>
+            <xml-element-name>completionDate</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>quantity</java-variable-name>
+            <xml-element-name>quantity</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>price</java-variable-name>
+            <xml-element-name>price</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>orderFee</java-variable-name>
+            <xml-element-name>orderFee</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>symbol</java-variable-name>
+            <xml-element-name>symbol</xml-element-name>
+        </variable-mapping>
+    </java-xml-type-mapping>
+<!--    <java-xml-type-mapping>
+        <java-type>java.math.BigDecimal</java-type>
+        <root-type-qname xmlns:rtq="http://www.w3.org/2001/XMLSchema">rtq:decimal</root-type-qname>
+        <qname-scope>simpleType</qname-scope>
+    </java-xml-type-mapping>  -->
+<!--    <java-xml-type-mapping>
+        <java-type>org.apache.geronimo.samples.daytrader.client.ws.OrderDataBean[]</java-type>
+        <root-type-qname xmlns:rtq="http://daytrader.samples.geronimo.apache.org">rtq:ArrayOfOrderDataBean</root-type-qname>
+        <qname-scope>complexType</qname-scope>
+        <variable-mapping>
+            <java-variable-name>orderDataBean</java-variable-name>
+            <xml-element-name>OrderDataBean</xml-element-name>
+        </variable-mapping>
+    </java-xml-type-mapping> -->
+<!--    <java-xml-type-mapping>
+        <java-type>java.util.Calendar</java-type>
+        <root-type-qname xmlns:rtq="http://www.w3.org/2001/XMLSchema">rtq:dateTime</root-type-qname>
+        <qname-scope>simpleType</qname-scope>
+    </java-xml-type-mapping> -->
+    <java-xml-type-mapping>
+        <java-type>org.apache.geronimo.samples.daytrader.client.ws.AccountProfileDataBean</java-type>
+        <root-type-qname xmlns:rtq="http://daytrader.samples.geronimo.apache.org">rtq:AccountProfileDataBean</root-type-qname>
+        <qname-scope>complexType</qname-scope>
+        <variable-mapping>
+            <java-variable-name>userID</java-variable-name>
+            <xml-element-name>userID</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>password</java-variable-name>
+            <xml-element-name>password</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>fullName</java-variable-name>
+            <xml-element-name>fullName</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>address</java-variable-name>
+            <xml-element-name>address</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>email</java-variable-name>
+            <xml-element-name>email</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>creditCard</java-variable-name>
+            <xml-element-name>creditCard</xml-element-name>
+        </variable-mapping>
+    </java-xml-type-mapping>
+    <java-xml-type-mapping>
+        <java-type>org.apache.geronimo.samples.daytrader.client.ws.AccountDataBean</java-type>
+        <root-type-qname xmlns:rtq="http://daytrader.samples.geronimo.apache.org">rtq:AccountDataBean</root-type-qname>
+        <qname-scope>complexType</qname-scope>
+        <variable-mapping>
+            <java-variable-name>accountID</java-variable-name>
+            <xml-element-name>accountID</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>loginCount</java-variable-name>
+            <xml-element-name>loginCount</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>logoutCount</java-variable-name>
+            <xml-element-name>logoutCount</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>lastLogin</java-variable-name>
+            <xml-element-name>lastLogin</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>creationDate</java-variable-name>
+            <xml-element-name>creationDate</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>balance</java-variable-name>
+            <xml-element-name>balance</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>openBalance</java-variable-name>
+            <xml-element-name>openBalance</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>profileID</java-variable-name>
+            <xml-element-name>profileID</xml-element-name>
+        </variable-mapping>
+    </java-xml-type-mapping>
+    <java-xml-type-mapping>
+        <java-type>org.apache.geronimo.samples.daytrader.client.ws.RunStatsDataBean</java-type>
+        <root-type-qname xmlns:rtq="http://daytrader.samples.geronimo.apache.org">rtq:RunStatsDataBean</root-type-qname>
+        <qname-scope>complexType</qname-scope>
+        <variable-mapping>
+            <java-variable-name>tradeUserCount</java-variable-name>
+            <xml-element-name>tradeUserCount</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>newUserCount</java-variable-name>
+            <xml-element-name>newUserCount</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>sumLoginCount</java-variable-name>
+            <xml-element-name>sumLoginCount</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>sumLogoutCount</java-variable-name>
+            <xml-element-name>sumLogoutCount</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>holdingCount</java-variable-name>
+            <xml-element-name>holdingCount</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>buyOrderCount</java-variable-name>
+            <xml-element-name>buyOrderCount</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>sellOrderCount</java-variable-name>
+            <xml-element-name>sellOrderCount</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>cancelledOrderCount</java-variable-name>
+            <xml-element-name>cancelledOrderCount</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>openOrderCount</java-variable-name>
+            <xml-element-name>openOrderCount</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>deletedOrderCount</java-variable-name>
+            <xml-element-name>deletedOrderCount</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>orderCount</java-variable-name>
+            <xml-element-name>orderCount</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>tradeStockCount</java-variable-name>
+            <xml-element-name>tradeStockCount</xml-element-name>
+        </variable-mapping>
+    </java-xml-type-mapping>
+    <java-xml-type-mapping>
+        <java-type>org.apache.geronimo.samples.daytrader.client.ws.HoldingDataBean[]</java-type>
+        <anonymous-type-qname>http://daytrader.samples.geronimo.apache.org:HoldingDataBean[0,unbounded]</anonymous-type-qname>
+        <qname-scope>complexType</qname-scope>
+    </java-xml-type-mapping>
+<!--    <java-xml-type-mapping>
+        <java-type>java.lang.String</java-type>
+        <root-type-qname xmlns:rtq="http://www.w3.org/2001/XMLSchema">rtq:string</root-type-qname>
+        <qname-scope>simpleType</qname-scope>
+    </java-xml-type-mapping>  -->
+<!--    <java-xml-type-mapping>
+        <java-type>org.apache.geronimo.samples.daytrader.client.ws.HoldingDataBean[]</java-type>
+        <root-type-qname xmlns:rtq="http://daytrader.samples.geronimo.apache.org">rtq:ArrayOfHoldingDataBean</root-type-qname>
+        <qname-scope>complexType</qname-scope>
+        <variable-mapping>
+            <java-variable-name>holdingDataBean</java-variable-name>
+            <xml-element-name>HoldingDataBean</xml-element-name>
+        </variable-mapping>
+    </java-xml-type-mapping> -->
+    <java-xml-type-mapping>
+        <java-type>org.apache.geronimo.samples.daytrader.client.ws.QuoteDataBean</java-type>
+        <root-type-qname xmlns:rtq="http://daytrader.samples.geronimo.apache.org">rtq:QuoteDataBean</root-type-qname>
+        <qname-scope>complexType</qname-scope>
+        <variable-mapping>
+            <java-variable-name>symbol</java-variable-name>
+            <xml-element-name>symbol</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>companyName</java-variable-name>
+            <xml-element-name>companyName</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>price</java-variable-name>
+            <xml-element-name>price</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>open</java-variable-name>
+            <xml-element-name>open</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>low</java-variable-name>
+            <xml-element-name>low</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>high</java-variable-name>
+            <xml-element-name>high</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>change</java-variable-name>
+            <xml-element-name>change</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>volume</java-variable-name>
+            <xml-element-name>volume</xml-element-name>
+        </variable-mapping>
+    </java-xml-type-mapping>
+    <java-xml-type-mapping>
+        <java-type>org.apache.geronimo.samples.daytrader.client.ws.MarketSummaryDataBeanWS</java-type>
+        <root-type-qname xmlns:rtq="http://daytrader.samples.geronimo.apache.org">rtq:MarketSummaryDataBeanWS</root-type-qname>
+        <qname-scope>complexType</qname-scope>
+        <variable-mapping>
+            <java-variable-name>TSIA</java-variable-name>
+            <xml-element-name>TSIA</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>openTSIA</java-variable-name>
+            <xml-element-name>openTSIA</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>volume</java-variable-name>
+            <xml-element-name>volume</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>topGainers</java-variable-name>
+            <xml-element-name>topGainers</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>topLosers</java-variable-name>
+            <xml-element-name>topLosers</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>summaryDate</java-variable-name>
+            <xml-element-name>summaryDate</xml-element-name>
+        </variable-mapping>
+    </java-xml-type-mapping>
+    <java-xml-type-mapping>
+        <java-type>org.apache.geronimo.samples.daytrader.client.ws.HoldingDataBean</java-type>
+        <root-type-qname xmlns:rtq="http://daytrader.samples.geronimo.apache.org">rtq:HoldingDataBean</root-type-qname>
+        <qname-scope>complexType</qname-scope>
+        <variable-mapping>
+            <java-variable-name>holdingID</java-variable-name>
+            <xml-element-name>holdingID</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>quantity</java-variable-name>
+            <xml-element-name>quantity</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>purchasePrice</java-variable-name>
+            <xml-element-name>purchasePrice</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>purchaseDate</java-variable-name>
+            <xml-element-name>purchaseDate</xml-element-name>
+        </variable-mapping>
+        <variable-mapping>
+            <java-variable-name>quoteID</java-variable-name>
+            <xml-element-name>quoteID</xml-element-name>
+        </variable-mapping>
+    </java-xml-type-mapping>
+<!--    <java-xml-type-mapping>
+        <java-type>int</java-type>
+        <root-type-qname xmlns:rtq="http://www.w3.org/2001/XMLSchema">rtq:int</root-type-qname>
+        <qname-scope>simpleType</qname-scope>
+    </java-xml-type-mapping>   -->
+<!--     <java-xml-type-mapping>
+        <java-type>org.apache.geronimo.samples.daytrader.client.ws.QuoteDataBean[]</java-type>
+        <root-type-qname xmlns:rtq="http://daytrader.samples.geronimo.apache.org">rtq:ArrayOfQuoteDataBean</root-type-qname>
+        <qname-scope>complexType</qname-scope>
+        <variable-mapping>
+            <java-variable-name>quoteDataBean</java-variable-name>
+            <xml-element-name>QuoteDataBean</xml-element-name>
+        </variable-mapping>
+    </java-xml-type-mapping>  -->
+<!--     <java-xml-type-mapping>
+        <java-type>boolean</java-type>
+        <root-type-qname xmlns:rtq="http://www.w3.org/2001/XMLSchema">rtq:boolean</root-type-qname>
+        <qname-scope>simpleType</qname-scope>
+    </java-xml-type-mapping>  -->
+    <java-xml-type-mapping>
+        <java-type>org.apache.geronimo.samples.daytrader.client.ws.OrderDataBean[]</java-type>
+        <anonymous-type-qname>http://daytrader.samples.geronimo.apache.org:OrderDataBean[0,unbounded]</anonymous-type-qname>
+        <qname-scope>complexType</qname-scope>
+    </java-xml-type-mapping>
+    <java-xml-type-mapping>
+        <java-type>org.apache.geronimo.samples.daytrader.client.ws.QuoteDataBean[]</java-type>
+        <anonymous-type-qname>http://daytrader.samples.geronimo.apache.org:ArrayOfQuoteDataBean&gt;QuoteDataBean[0,unbounded]</anonymous-type-qname>
+        <qname-scope>complexType</qname-scope>
+    </java-xml-type-mapping>
+    <java-xml-type-mapping>
+        <java-type>org.apache.geronimo.samples.daytrader.client.ws.HoldingDataBean[]</java-type>
+        <anonymous-type-qname>http://daytrader.samples.geronimo.apache.org:ArrayOfHoldingDataBean&gt;HoldingDataBean[0,unbounded]</anonymous-type-qname>
+        <qname-scope>complexType</qname-scope>
+    </java-xml-type-mapping>
+    <java-xml-type-mapping>
+        <java-type>org.apache.geronimo.samples.daytrader.client.ws.OrderDataBean[]</java-type>
+        <anonymous-type-qname>http://daytrader.samples.geronimo.apache.org:ArrayOfOrderDataBean&gt;OrderDataBean[0,unbounded]</anonymous-type-qname>
+        <qname-scope>complexType</qname-scope>
+    </java-xml-type-mapping>
+    <service-interface-mapping>
+        <service-interface>org.apache.geronimo.samples.daytrader.client.ws.Trade</service-interface>
+        <wsdl-service-name xmlns:sim="http://daytrader.samples.geronimo.apache.org">sim:Trade</wsdl-service-name>
+        <port-mapping>
+            <port-name>TradeWSServices</port-name>
+            <java-port-name>TradeWSServices</java-port-name>
+        </port-mapping>
+    </service-interface-mapping>
+    <service-endpoint-interface-mapping>
+        <service-endpoint-interface>org.apache.geronimo.samples.daytrader.client.ws.TradeWSServices</service-endpoint-interface>
+        <wsdl-port-type xmlns:seimwpt="http://daytrader.samples.geronimo.apache.org">seimwpt:TradeWSServices</wsdl-port-type>
+        <wsdl-binding xmlns:seimwb="http://daytrader.samples.geronimo.apache.org">seimwb:TradeWSServicesSoapBinding</wsdl-binding>
+        <service-endpoint-method-mapping>
+            <java-method-name>getHoldings</java-method-name>
+            <wsdl-operation>getHoldings</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:getHoldingsRequest</wsdl-message>
+                    <wsdl-message-part-name>userID</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>org.apache.geronimo.samples.daytrader.client.ws.HoldingDataBean[]</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:getHoldingsResponse</wsdl-message>
+                <wsdl-message-part-name>getHoldingsReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>updateAccountProfile</java-method-name>
+            <wsdl-operation>updateAccountProfile</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>org.apache.geronimo.samples.daytrader.client.ws.AccountProfileDataBean</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:updateAccountProfileRequest</wsdl-message>
+                    <wsdl-message-part-name>profileData</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>org.apache.geronimo.samples.daytrader.client.ws.AccountProfileDataBean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:updateAccountProfileResponse</wsdl-message>
+                <wsdl-message-part-name>updateAccountProfileReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>getMarketSummary</java-method-name>
+            <wsdl-operation>getMarketSummary</wsdl-operation>
+            <wrapped-element/>
+            <wsdl-return-value-mapping>
+                <method-return-value>org.apache.geronimo.samples.daytrader.client.ws.MarketSummaryDataBeanWS</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:getMarketSummaryResponse</wsdl-message>
+                <wsdl-message-part-name>getMarketSummaryReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>updateQuotePriceVolume</java-method-name>
+            <wsdl-operation>updateQuotePriceVolume</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:updateQuotePriceVolumeRequest</wsdl-message>
+                    <wsdl-message-part-name>symbol</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>1</param-position>
+                <param-type>java.math.BigDecimal</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:updateQuotePriceVolumeRequest</wsdl-message>
+                    <wsdl-message-part-name>newPrice</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>2</param-position>
+                <param-type>double</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:updateQuotePriceVolumeRequest</wsdl-message>
+                    <wsdl-message-part-name>sharesTraded</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>org.apache.geronimo.samples.daytrader.client.ws.QuoteDataBean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:updateQuotePriceVolumeResponse</wsdl-message>
+                <wsdl-message-part-name>updateQuotePriceVolumeReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>register</java-method-name>
+            <wsdl-operation>register</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:registerRequest</wsdl-message>
+                    <wsdl-message-part-name>userID</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>1</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:registerRequest</wsdl-message>
+                    <wsdl-message-part-name>password</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>2</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:registerRequest</wsdl-message>
+                    <wsdl-message-part-name>fullname</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>3</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:registerRequest</wsdl-message>
+                    <wsdl-message-part-name>address</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>4</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:registerRequest</wsdl-message>
+                    <wsdl-message-part-name>email</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>5</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:registerRequest</wsdl-message>
+                    <wsdl-message-part-name>creditcard</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>6</param-position>
+                <param-type>java.math.BigDecimal</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:registerRequest</wsdl-message>
+                    <wsdl-message-part-name>openBalance</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>org.apache.geronimo.samples.daytrader.client.ws.AccountDataBean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:registerResponse</wsdl-message>
+                <wsdl-message-part-name>registerReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>getHolding</java-method-name>
+            <wsdl-operation>getHolding</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.Integer</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:getHoldingRequest</wsdl-message>
+                    <wsdl-message-part-name>holdingID</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>org.apache.geronimo.samples.daytrader.client.ws.HoldingDataBean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:getHoldingResponse</wsdl-message>
+                <wsdl-message-part-name>getHoldingReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>getOrders</java-method-name>
+            <wsdl-operation>getOrders</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:getOrdersRequest</wsdl-message>
+                    <wsdl-message-part-name>userID</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>org.apache.geronimo.samples.daytrader.client.ws.OrderDataBean[]</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:getOrdersResponse</wsdl-message>
+                <wsdl-message-part-name>getOrdersReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>queueOrder</java-method-name>
+            <wsdl-operation>queueOrder</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.Integer</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:queueOrderRequest</wsdl-message>
+                    <wsdl-message-part-name>orderID</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>1</param-position>
+                <param-type>boolean</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:queueOrderRequest</wsdl-message>
+                    <wsdl-message-part-name>twoPhase</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>void</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:queueOrderResponse</wsdl-message>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>cancelOrder</java-method-name>
+            <wsdl-operation>cancelOrder</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.Integer</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:cancelOrderRequest</wsdl-message>
+                    <wsdl-message-part-name>orderID</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>1</param-position>
+                <param-type>boolean</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:cancelOrderRequest</wsdl-message>
+                    <wsdl-message-part-name>twoPhase</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>void</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:cancelOrderResponse</wsdl-message>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>getAccountData</java-method-name>
+            <wsdl-operation>getAccountData</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:getAccountDataRequest</wsdl-message>
+                    <wsdl-message-part-name>userID</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>org.apache.geronimo.samples.daytrader.client.ws.AccountDataBean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:getAccountDataResponse</wsdl-message>
+                <wsdl-message-part-name>getAccountDataReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>sell</java-method-name>
+            <wsdl-operation>sell</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:sellRequest</wsdl-message>
+                    <wsdl-message-part-name>userID</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>1</param-position>
+                <param-type>java.lang.Integer</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:sellRequest</wsdl-message>
+                    <wsdl-message-part-name>holdingID</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>2</param-position>
+                <param-type>int</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:sellRequest</wsdl-message>
+                    <wsdl-message-part-name>orderProcessingMode</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>org.apache.geronimo.samples.daytrader.client.ws.OrderDataBean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:sellResponse</wsdl-message>
+                <wsdl-message-part-name>sellReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>orderCompleted</java-method-name>
+            <wsdl-operation>orderCompleted</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:orderCompletedRequest</wsdl-message>
+                    <wsdl-message-part-name>userID</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>1</param-position>
+                <param-type>java.lang.Integer</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:orderCompletedRequest</wsdl-message>
+                    <wsdl-message-part-name>orderID</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>void</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:orderCompletedResponse</wsdl-message>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>getClosedOrders</java-method-name>
+            <wsdl-operation>getClosedOrders</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:getClosedOrdersRequest</wsdl-message>
+                    <wsdl-message-part-name>userID</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>org.apache.geronimo.samples.daytrader.client.ws.OrderDataBean[]</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:getClosedOrdersResponse</wsdl-message>
+                <wsdl-message-part-name>getClosedOrdersReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>logout</java-method-name>
+            <wsdl-operation>logout</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:logoutRequest</wsdl-message>
+                    <wsdl-message-part-name>userID</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>boolean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:logoutResponse</wsdl-message>
+		<wsdl-message-part-name>logoutReturn</wsdl-message-part-name>
+	    </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>resetTrade</java-method-name>
+            <wsdl-operation>resetTrade</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>boolean</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:resetTradeRequest</wsdl-message>
+                    <wsdl-message-part-name>deleteAll</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>org.apache.geronimo.samples.daytrader.client.ws.RunStatsDataBean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:resetTradeResponse</wsdl-message>
+                <wsdl-message-part-name>resetTradeReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>createQuote</java-method-name>
+            <wsdl-operation>createQuote</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:createQuoteRequest</wsdl-message>
+                    <wsdl-message-part-name>symbol</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>1</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:createQuoteRequest</wsdl-message>
+                    <wsdl-message-part-name>companyName</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>2</param-position>
+                <param-type>java.math.BigDecimal</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:createQuoteRequest</wsdl-message>
+                    <wsdl-message-part-name>price</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>org.apache.geronimo.samples.daytrader.client.ws.QuoteDataBean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:createQuoteResponse</wsdl-message>
+                <wsdl-message-part-name>createQuoteReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>buy</java-method-name>
+            <wsdl-operation>buy</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:buyRequest</wsdl-message>
+                    <wsdl-message-part-name>userID</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>1</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:buyRequest</wsdl-message>
+                    <wsdl-message-part-name>symbol</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>2</param-position>
+                <param-type>double</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:buyRequest</wsdl-message>
+                    <wsdl-message-part-name>quantity</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>3</param-position>
+                <param-type>int</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:buyRequest</wsdl-message>
+                    <wsdl-message-part-name>orderProcessingMode</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>org.apache.geronimo.samples.daytrader.client.ws.OrderDataBean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:buyResponse</wsdl-message>
+                <wsdl-message-part-name>buyReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>getAllQuotes</java-method-name>
+            <wsdl-operation>getAllQuotes</wsdl-operation>
+            <wrapped-element/>
+            <wsdl-return-value-mapping>
+                <method-return-value>org.apache.geronimo.samples.daytrader.client.ws.QuoteDataBean[]</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:getAllQuotesResponse</wsdl-message>
+                <wsdl-message-part-name>getAllQuotesReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>login</java-method-name>
+            <wsdl-operation>login</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:loginRequest</wsdl-message>
+                    <wsdl-message-part-name>userID</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>1</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:loginRequest</wsdl-message>
+                    <wsdl-message-part-name>password</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>org.apache.geronimo.samples.daytrader.client.ws.AccountDataBean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:loginResponse</wsdl-message>
+                <wsdl-message-part-name>loginReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>getAccountProfileData</java-method-name>
+            <wsdl-operation>getAccountProfileData</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:getAccountProfileDataRequest</wsdl-message>
+                    <wsdl-message-part-name>userID</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>org.apache.geronimo.samples.daytrader.client.ws.AccountProfileDataBean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:getAccountProfileDataResponse</wsdl-message>
+                <wsdl-message-part-name>getAccountProfileDataReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>getQuote</java-method-name>
+            <wsdl-operation>getQuote</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:getQuoteRequest</wsdl-message>
+                    <wsdl-message-part-name>symbol</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>org.apache.geronimo.samples.daytrader.client.ws.QuoteDataBean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:getQuoteResponse</wsdl-message>
+                <wsdl-message-part-name>getQuoteReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>completeOrder</java-method-name>
+            <wsdl-operation>completeOrder</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.Integer</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:completeOrderRequest</wsdl-message>
+                    <wsdl-message-part-name>orderID</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>1</param-position>
+                <param-type>boolean</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:completeOrderRequest</wsdl-message>
+                    <wsdl-message-part-name>twoPhase</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>org.apache.geronimo.samples.daytrader.client.ws.OrderDataBean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:completeOrderResponse</wsdl-message>
+                <wsdl-message-part-name>completeOrderReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>runDaCapoTrade</java-method-name>
+            <wsdl-operation>runDaCapoTrade</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:runDaCapoTradeRequest</wsdl-message>
+                    <wsdl-message-part-name>size</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>1</param-position>
+                <param-type>int</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:runDaCapoTradeRequest</wsdl-message>
+                    <wsdl-message-part-name>threads</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>2</param-position>
+                <param-type>boolean</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:runDaCapoTradeRequest</wsdl-message>
+                    <wsdl-message-part-name>soap</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>boolean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:runDaCapoTradeResponse</wsdl-message>
+		<wsdl-message-part-name>runDaCapoTradeReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>initializeDaCapo</java-method-name>
+            <wsdl-operation>initializeDaCapo</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:initializeDaCapoRequest</wsdl-message>
+                    <wsdl-message-part-name>size</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>boolean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:initializeDaCapoResponse</wsdl-message>
+		<wsdl-message-part-name>initializeDaCapoReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>resetDaCapo</java-method-name>
+            <wsdl-operation>resetDaCapo</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:resetDaCapoRequest</wsdl-message>
+                    <wsdl-message-part-name>size</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>1</param-position>
+                <param-type>int</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:resetDaCapoRequest</wsdl-message>
+                    <wsdl-message-part-name>threads</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>boolean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:resetDaCapoResponse</wsdl-message>
+		<wsdl-message-part-name>resetDaCapoReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+    </service-endpoint-interface-mapping>
+</java-wsdl-mapping>
diff -urNw dt-a/modules/dacapo/src/main/resources/META-INF/wsdl/TradeServices.wsdl dt-e/modules/dacapo/src/main/resources/META-INF/wsdl/TradeServices.wsdl
--- modules/dacapo/src/main/resources/META-INF/wsdl/TradeServices.wsdl	1970-01-01 10:00:00.000000000 +1000
+++ modules/dacapo/src/main/resources/META-INF/wsdl/TradeServices.wsdl	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,1629 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+   Licensed to the Apache Software Foundation (ASF) under one or more
+   contributor license agreements.  See the NOTICE file distributed with
+   this work for additional information regarding copyright ownership.
+   The ASF licenses this file to You under the Apache License, Version 2.0
+   (the "License"); you may not use this file except in compliance with
+   the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+-->
+<wsdl:definitions
+	targetNamespace="http://daytrader.samples.geronimo.apache.org"
+	xmlns:impl="http://daytrader.samples.geronimo.apache.org"
+	xmlns:intf="http://daytrader.samples.geronimo.apache.org"
+	xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
+	xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/"
+	xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="">
+	<wsdl:types>
+		<schema elementFormDefault="qualified"
+			targetNamespace="http://daytrader.samples.geronimo.apache.org"
+			xmlns="http://www.w3.org/2001/XMLSchema"
+			xmlns:impl="http://daytrader.samples.geronimo.apache.org"
+			xmlns:intf="http://daytrader.samples.geronimo.apache.org"
+			xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
+			xmlns:xsd="http://www.w3.org/2001/XMLSchema">
+			<element name="getMarketSummary">
+				<complexType>
+					<sequence />
+				</complexType>
+			</element>
+			<complexType name="MarketSummaryDataBeanWS">
+				<sequence>
+					<element name="TSIA" nillable="true"
+						type="xsd:decimal" />
+					<element name="openTSIA" nillable="true"
+						type="xsd:decimal" />
+					<element name="volume" type="xsd:double" />
+					<element name="topGainers" nillable="true"
+						type="impl:ArrayOfQuoteDataBean" />
+					<element name="topLosers" nillable="true"
+						type="impl:ArrayOfQuoteDataBean" />
+					<element name="summaryDate" nillable="true"
+						type="xsd:dateTime" />
+				</sequence>
+			</complexType>
+			<complexType name="QuoteDataBean">
+				<sequence>
+					<element name="symbol" nillable="true"
+						type="xsd:string" />
+					<element name="companyName" nillable="true"
+						type="xsd:string" />
+					<element name="price" nillable="true"
+						type="xsd:decimal" />
+					<element name="open" nillable="true"
+						type="xsd:decimal" />
+					<element name="low" nillable="true"
+						type="xsd:decimal" />
+					<element name="high" nillable="true"
+						type="xsd:decimal" />
+					<element name="change" type="xsd:double" />
+					<element name="volume" type="xsd:double" />
+				</sequence>
+			</complexType>
+			<complexType name="ArrayOfQuoteDataBean">
+				<sequence>
+					<element maxOccurs="unbounded" minOccurs="0"
+						name="QuoteDataBean" nillable="true" type="impl:QuoteDataBean" />
+				</sequence>
+			</complexType>
+			<element name="getMarketSummaryResponse">
+				<complexType>
+					<sequence>
+						<element name="getMarketSummaryReturn"
+							nillable="true" type="impl:MarketSummaryDataBeanWS" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="buy">
+				<complexType>
+					<sequence>
+						<element name="userID" nillable="true"
+							type="xsd:string" />
+						<element name="symbol" nillable="true"
+							type="xsd:string" />
+						<element name="quantity" type="xsd:double" />
+						<element name="orderProcessingMode"
+							type="xsd:int" />
+					</sequence>
+				</complexType>
+			</element>
+			<complexType name="OrderDataBean">
+				<sequence>
+					<element name="orderID" nillable="true"
+						type="xsd:int" />
+					<element name="orderType" nillable="true"
+						type="xsd:string" />
+					<element name="orderStatus" nillable="true"
+						type="xsd:string" />
+					<element name="openDate" nillable="true"
+						type="xsd:dateTime" />
+					<element name="completionDate" nillable="true"
+						type="xsd:dateTime" />
+					<element name="quantity" type="xsd:double" />
+					<element name="price" nillable="true"
+						type="xsd:decimal" />
+					<element name="orderFee" nillable="true"
+						type="xsd:decimal" />
+					<element name="symbol" nillable="true"
+						type="xsd:string" />
+				</sequence>
+			</complexType>
+			<element name="buyResponse">
+				<complexType>
+					<sequence>
+						<element name="buyReturn" nillable="true"
+							type="impl:OrderDataBean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="sell">
+				<complexType>
+					<sequence>
+						<element name="userID" nillable="true"
+							type="xsd:string" />
+						<element name="holdingID" nillable="true"
+							type="xsd:int" />
+						<element name="orderProcessingMode"
+							type="xsd:int" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="sellResponse">
+				<complexType>
+					<sequence>
+						<element name="sellReturn" nillable="true"
+							type="impl:OrderDataBean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="queueOrder">
+				<complexType>
+					<sequence>
+						<element name="orderID" nillable="true"
+							type="xsd:int" />
+						<element name="twoPhase" type="xsd:boolean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="queueOrderResponse">
+				<complexType>
+					<sequence />
+				</complexType>
+			</element>
+			<element name="completeOrder">
+				<complexType>
+					<sequence>
+						<element name="orderID" nillable="true"
+							type="xsd:int" />
+						<element name="twoPhase" type="xsd:boolean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="completeOrderResponse">
+				<complexType>
+					<sequence>
+						<element name="completeOrderReturn"
+							nillable="true" type="impl:OrderDataBean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="cancelOrder">
+				<complexType>
+					<sequence>
+						<element name="orderID" nillable="true"
+							type="xsd:int" />
+						<element name="twoPhase" type="xsd:boolean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="cancelOrderResponse">
+				<complexType>
+					<sequence />
+				</complexType>
+			</element>
+			<element name="orderCompleted">
+				<complexType>
+					<sequence>
+						<element name="userID" nillable="true"
+							type="xsd:string" />
+						<element name="orderID" nillable="true"
+							type="xsd:int" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="orderCompletedResponse">
+				<complexType>
+					<sequence />
+				</complexType>
+			</element>
+			<element name="getOrders">
+				<complexType>
+					<sequence>
+						<element name="userID" nillable="true"
+							type="xsd:string" />
+					</sequence>
+				</complexType>
+			</element>
+			<complexType name="ArrayOfOrderDataBean">
+				<sequence>
+					<element maxOccurs="unbounded" minOccurs="0"
+						name="OrderDataBean" nillable="true" type="impl:OrderDataBean" />
+				</sequence>
+			</complexType>
+			<element name="getOrdersResponse">
+				<complexType>
+					<sequence>
+						<element name="getOrdersReturn" nillable="true"
+							type="impl:ArrayOfOrderDataBean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="getClosedOrders">
+				<complexType>
+					<sequence>
+						<element name="userID" nillable="true"
+							type="xsd:string" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="getClosedOrdersResponse">
+				<complexType>
+					<sequence>
+						<element name="getClosedOrdersReturn"
+							nillable="true" type="impl:ArrayOfOrderDataBean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="createQuote">
+				<complexType>
+					<sequence>
+						<element name="symbol" nillable="true"
+							type="xsd:string" />
+						<element name="companyName" nillable="true"
+							type="xsd:string" />
+						<element name="price" nillable="true"
+							type="xsd:decimal" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="createQuoteResponse">
+				<complexType>
+					<sequence>
+						<element name="createQuoteReturn"
+							nillable="true" type="impl:QuoteDataBean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="getQuote">
+				<complexType>
+					<sequence>
+						<element name="symbol" nillable="true"
+							type="xsd:string" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="getQuoteResponse">
+				<complexType>
+					<sequence>
+						<element name="getQuoteReturn" nillable="true"
+							type="impl:QuoteDataBean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="getAllQuotes">
+				<complexType>
+					<sequence />
+				</complexType>
+			</element>
+			<element name="getAllQuotesResponse">
+				<complexType>
+					<sequence>
+						<element name="getAllQuotesReturn"
+							nillable="true" type="impl:ArrayOfQuoteDataBean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="updateQuotePriceVolume">
+				<complexType>
+					<sequence>
+						<element name="symbol" nillable="true"
+							type="xsd:string" />
+						<element name="newPrice" nillable="true"
+							type="xsd:decimal" />
+						<element name="sharesTraded" type="xsd:double" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="updateQuotePriceVolumeResponse">
+				<complexType>
+					<sequence>
+						<element name="updateQuotePriceVolumeReturn"
+							nillable="true" type="impl:QuoteDataBean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="getHoldings">
+				<complexType>
+					<sequence>
+						<element name="userID" nillable="true"
+							type="xsd:string" />
+					</sequence>
+				</complexType>
+			</element>
+			<complexType name="HoldingDataBean">
+				<sequence>
+					<element name="holdingID" nillable="true"
+						type="xsd:int" />
+					<element name="quantity" type="xsd:double" />
+					<element name="purchasePrice" nillable="true"
+						type="xsd:decimal" />
+					<element name="purchaseDate" nillable="true"
+						type="xsd:dateTime" />
+					<element name="quoteID" nillable="true"
+						type="xsd:string" />
+				</sequence>
+			</complexType>
+			<complexType name="ArrayOfHoldingDataBean">
+				<sequence>
+					<element maxOccurs="unbounded" minOccurs="0"
+						name="HoldingDataBean" nillable="true"
+						type="impl:HoldingDataBean" />
+				</sequence>
+			</complexType>
+			<element name="getHoldingsResponse">
+				<complexType>
+					<sequence>
+						<element name="getHoldingsReturn"
+							nillable="true" type="impl:ArrayOfHoldingDataBean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="getHolding">
+				<complexType>
+					<sequence>
+						<element name="holdingID" nillable="true"
+							type="xsd:int" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="getHoldingResponse">
+				<complexType>
+					<sequence>
+						<element name="getHoldingReturn" nillable="true"
+							type="impl:HoldingDataBean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="getAccountData">
+				<complexType>
+					<sequence>
+						<element name="userID" nillable="true"
+							type="xsd:string" />
+					</sequence>
+				</complexType>
+			</element>
+			<complexType name="AccountDataBean">
+				<sequence>
+					<element name="accountID" nillable="true"
+						type="xsd:int" />
+					<element name="loginCount" type="xsd:int" />
+					<element name="logoutCount" type="xsd:int" />
+					<element name="lastLogin" nillable="true"
+						type="xsd:dateTime" />
+					<element name="creationDate" nillable="true"
+						type="xsd:dateTime" />
+					<element name="balance" nillable="true"
+						type="xsd:decimal" />
+					<element name="openBalance" nillable="true"
+						type="xsd:decimal" />
+					<element name="profileID" nillable="true"
+						type="xsd:string" />
+				</sequence>
+			</complexType>
+			<element name="getAccountDataResponse">
+				<complexType>
+					<sequence>
+						<element name="getAccountDataReturn"
+							nillable="true" type="impl:AccountDataBean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="getAccountProfileData">
+				<complexType>
+					<sequence>
+						<element name="userID" nillable="true"
+							type="xsd:string" />
+					</sequence>
+				</complexType>
+			</element>
+			<complexType name="AccountProfileDataBean">
+				<sequence>
+					<element name="userID" nillable="true"
+						type="xsd:string" />
+					<element name="password" nillable="true"
+						type="xsd:string" />
+					<element name="fullName" nillable="true"
+						type="xsd:string" />
+					<element name="address" nillable="true"
+						type="xsd:string" />
+					<element name="email" nillable="true"
+						type="xsd:string" />
+					<element name="creditCard" nillable="true"
+						type="xsd:string" />
+				</sequence>
+			</complexType>
+			<element name="getAccountProfileDataResponse">
+				<complexType>
+					<sequence>
+						<element name="getAccountProfileDataReturn"
+							nillable="true" type="impl:AccountProfileDataBean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="updateAccountProfile">
+				<complexType>
+					<sequence>
+						<element name="profileData" nillable="true"
+							type="impl:AccountProfileDataBean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="updateAccountProfileResponse">
+				<complexType>
+					<sequence>
+						<element name="updateAccountProfileReturn"
+							nillable="true" type="impl:AccountProfileDataBean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="login">
+				<complexType>
+					<sequence>
+						<element name="userID" nillable="true"
+							type="xsd:string" />
+						<element name="password" nillable="true"
+							type="xsd:string" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="loginResponse">
+				<complexType>
+					<sequence>
+						<element name="loginReturn" nillable="true"
+							type="impl:AccountDataBean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="logout">
+				<complexType>
+					<sequence>
+						<element name="userID" nillable="true"
+							type="xsd:string" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="logoutResponse">
+				<complexType>
+				  <sequence>
+				    <element name="logoutReturn" nillable="true"
+					     type="xsd:boolean" />
+				  </sequence>
+				</complexType>
+			</element>
+			<element name="register">
+				<complexType>
+					<sequence>
+						<element name="userID" nillable="true"
+							type="xsd:string" />
+						<element name="password" nillable="true"
+							type="xsd:string" />
+						<element name="fullname" nillable="true"
+							type="xsd:string" />
+						<element name="address" nillable="true"
+							type="xsd:string" />
+						<element name="email" nillable="true"
+							type="xsd:string" />
+						<element name="creditcard" nillable="true"
+							type="xsd:string" />
+						<element name="openBalance" nillable="true"
+							type="xsd:decimal" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="registerResponse">
+				<complexType>
+					<sequence>
+						<element name="registerReturn" nillable="true"
+							type="impl:AccountDataBean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="resetTrade">
+				<complexType>
+					<sequence>
+						<element name="deleteAll" type="xsd:boolean" />
+					</sequence>
+				</complexType>
+			</element>
+			<complexType name="RunStatsDataBean">
+				<sequence>
+					<element name="tradeUserCount" type="xsd:int" />
+					<element name="newUserCount" type="xsd:int" />
+					<element name="sumLoginCount" type="xsd:int" />
+					<element name="sumLogoutCount" type="xsd:int" />
+					<element name="holdingCount" type="xsd:int" />
+					<element name="buyOrderCount" type="xsd:int" />
+					<element name="sellOrderCount" type="xsd:int" />
+					<element name="cancelledOrderCount" type="xsd:int" />
+					<element name="openOrderCount" type="xsd:int" />
+					<element name="deletedOrderCount" type="xsd:int" />
+					<element name="orderCount" type="xsd:int" />
+					<element name="tradeStockCount" type="xsd:int" />
+				</sequence>
+			</complexType>
+			<element name="resetTradeResponse">
+				<complexType>
+					<sequence>
+						<element name="resetTradeReturn" nillable="true"
+							type="impl:RunStatsDataBean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="runDaCapoTrade">
+				<complexType>
+					<sequence>
+						<element name="size" nillable="true"
+							type="xsd:string" />
+						<element name="threads" nillable="true"
+							type="xsd:int" />
+						<element name="soap" nillable="true"
+							type="xsd:boolean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="runDaCapoTradeResponse">
+				<complexType>
+					<sequence>
+						<element name="runDaCapoTradeReturn" nillable="true"
+							type="xsd:boolean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="initializeDaCapo">
+				<complexType>
+					<sequence>
+						<element name="size" nillable="true"
+							type="xsd:string" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="initializeDaCapoResponse">
+				<complexType>
+					<sequence>
+						<element name="initializeDaCapoReturn" nillable="true"
+							type="xsd:boolean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="resetDaCapo">
+				<complexType>
+					<sequence>
+						<element name="size" nillable="true"
+							type="xsd:string" />
+						<element name="threads" nillable="true"
+							type="xsd:int" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="resetDaCapoResponse">
+				<complexType>
+					<sequence>
+						<element name="resetDaCapoReturn" nillable="true"
+							type="xsd:boolean" />
+					</sequence>
+				</complexType>
+			</element>
+			
+		</schema>
+	</wsdl:types>
+
+	<wsdl:message name="createQuoteRequest">
+
+		<wsdl:part element="impl:createQuote" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="loginRequest">
+
+		<wsdl:part element="impl:login" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="createQuoteResponse">
+
+		<wsdl:part element="impl:createQuoteResponse" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="buyResponse">
+
+		<wsdl:part element="impl:buyResponse" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="buyRequest">
+
+		<wsdl:part element="impl:buy" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="cancelOrderRequest">
+
+		<wsdl:part element="impl:cancelOrder" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="sellResponse">
+
+		<wsdl:part element="impl:sellResponse" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="queueOrderResponse">
+
+		<wsdl:part element="impl:queueOrderResponse" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="updateAccountProfileResponse">
+
+		<wsdl:part element="impl:updateAccountProfileResponse"
+			name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="registerResponse">
+
+		<wsdl:part element="impl:registerResponse" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="getClosedOrdersResponse">
+
+		<wsdl:part element="impl:getClosedOrdersResponse"
+			name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="resetTradeRequest">
+
+		<wsdl:part element="impl:resetTrade" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="orderCompletedRequest">
+
+		<wsdl:part element="impl:orderCompleted" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="getOrdersResponse">
+
+		<wsdl:part element="impl:getOrdersResponse" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="orderCompletedResponse">
+
+		<wsdl:part element="impl:orderCompletedResponse"
+			name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="getHoldingsResponse">
+
+		<wsdl:part element="impl:getHoldingsResponse" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="logoutRequest">
+
+		<wsdl:part element="impl:logout" name="parameters" />
+
+	</wsdl:message>
+	
+	<wsdl:message name="runDaCapoTradeRequest">
+
+		<wsdl:part element="impl:runDaCapoTrade" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="initializeDaCapoRequest">
+
+		<wsdl:part element="impl:initializeDaCapo" name="parameters" />
+
+	</wsdl:message>
+	
+	<wsdl:message name="resetDaCapoRequest">
+
+		<wsdl:part element="impl:resetDaCapo" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="getAllQuotesResponse">
+
+		<wsdl:part element="impl:getAllQuotesResponse"
+			name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="getAccountProfileDataResponse">
+
+		<wsdl:part element="impl:getAccountProfileDataResponse"
+			name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="updateAccountProfileRequest">
+
+		<wsdl:part element="impl:updateAccountProfile"
+			name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="getOrdersRequest">
+
+		<wsdl:part element="impl:getOrders" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="getHoldingsRequest">
+
+		<wsdl:part element="impl:getHoldings" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="getClosedOrdersRequest">
+
+		<wsdl:part element="impl:getClosedOrders" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="getMarketSummaryResponse">
+
+		<wsdl:part element="impl:getMarketSummaryResponse"
+			name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="registerRequest">
+
+		<wsdl:part element="impl:register" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="loginResponse">
+
+		<wsdl:part element="impl:loginResponse" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="queueOrderRequest">
+
+		<wsdl:part element="impl:queueOrder" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="getHoldingResponse">
+
+		<wsdl:part element="impl:getHoldingResponse" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="sellRequest">
+
+		<wsdl:part element="impl:sell" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="updateQuotePriceVolumeRequest">
+
+		<wsdl:part element="impl:updateQuotePriceVolume"
+			name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="getAccountDataRequest">
+
+		<wsdl:part element="impl:getAccountData" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="getAccountProfileDataRequest">
+
+		<wsdl:part element="impl:getAccountProfileData"
+			name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="resetTradeResponse">
+
+		<wsdl:part element="impl:resetTradeResponse" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="updateQuotePriceVolumeResponse">
+
+		<wsdl:part element="impl:updateQuotePriceVolumeResponse"
+			name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="cancelOrderResponse">
+
+		<wsdl:part element="impl:cancelOrderResponse" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="getHoldingRequest">
+
+		<wsdl:part element="impl:getHolding" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="getMarketSummaryRequest">
+
+		<wsdl:part element="impl:getMarketSummary" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="getQuoteRequest">
+
+		<wsdl:part element="impl:getQuote" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="logoutResponse">
+
+		<wsdl:part element="impl:logoutResponse" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="runDaCapoTradeResponse">
+
+		<wsdl:part element="impl:runDaCapoTradeResponse" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="initializeDaCapoResponse">
+
+		<wsdl:part element="impl:initializeDaCapoResponse" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="resetDaCapoResponse">
+
+		<wsdl:part element="impl:resetDaCapoResponse" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="getAllQuotesRequest">
+
+		<wsdl:part element="impl:getAllQuotes" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="getQuoteResponse">
+
+		<wsdl:part element="impl:getQuoteResponse" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="getAccountDataResponse">
+
+		<wsdl:part element="impl:getAccountDataResponse"
+			name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="completeOrderResponse">
+
+		<wsdl:part element="impl:completeOrderResponse"
+			name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="completeOrderRequest">
+
+		<wsdl:part element="impl:completeOrder" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:portType name="TradeWSServices">
+
+		<wsdl:operation name="getMarketSummary">
+
+			<wsdl:input message="impl:getMarketSummaryRequest"
+				name="getMarketSummaryRequest" />
+
+			<wsdl:output message="impl:getMarketSummaryResponse"
+				name="getMarketSummaryResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="buy">
+
+			<wsdl:input message="impl:buyRequest" name="buyRequest" />
+
+			<wsdl:output message="impl:buyResponse" name="buyResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="sell">
+
+			<wsdl:input message="impl:sellRequest" name="sellRequest" />
+
+			<wsdl:output message="impl:sellResponse"
+				name="sellResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="queueOrder">
+
+			<wsdl:input message="impl:queueOrderRequest"
+				name="queueOrderRequest" />
+
+			<wsdl:output message="impl:queueOrderResponse"
+				name="queueOrderResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="completeOrder">
+
+			<wsdl:input message="impl:completeOrderRequest"
+				name="completeOrderRequest" />
+
+			<wsdl:output message="impl:completeOrderResponse"
+				name="completeOrderResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="cancelOrder">
+
+			<wsdl:input message="impl:cancelOrderRequest"
+				name="cancelOrderRequest" />
+
+			<wsdl:output message="impl:cancelOrderResponse"
+				name="cancelOrderResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="orderCompleted">
+
+			<wsdl:input message="impl:orderCompletedRequest"
+				name="orderCompletedRequest" />
+
+			<wsdl:output message="impl:orderCompletedResponse"
+				name="orderCompletedResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="getOrders">
+
+			<wsdl:input message="impl:getOrdersRequest"
+				name="getOrdersRequest" />
+
+			<wsdl:output message="impl:getOrdersResponse"
+				name="getOrdersResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="getClosedOrders">
+
+			<wsdl:input message="impl:getClosedOrdersRequest"
+				name="getClosedOrdersRequest" />
+
+			<wsdl:output message="impl:getClosedOrdersResponse"
+				name="getClosedOrdersResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="createQuote">
+
+			<wsdl:input message="impl:createQuoteRequest"
+				name="createQuoteRequest" />
+
+			<wsdl:output message="impl:createQuoteResponse"
+				name="createQuoteResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="getQuote">
+
+			<wsdl:input message="impl:getQuoteRequest"
+				name="getQuoteRequest" />
+
+			<wsdl:output message="impl:getQuoteResponse"
+				name="getQuoteResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="getAllQuotes">
+
+			<wsdl:input message="impl:getAllQuotesRequest"
+				name="getAllQuotesRequest" />
+
+			<wsdl:output message="impl:getAllQuotesResponse"
+				name="getAllQuotesResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="updateQuotePriceVolume">
+
+			<wsdl:input message="impl:updateQuotePriceVolumeRequest"
+				name="updateQuotePriceVolumeRequest" />
+
+			<wsdl:output message="impl:updateQuotePriceVolumeResponse"
+				name="updateQuotePriceVolumeResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="getHoldings">
+
+			<wsdl:input message="impl:getHoldingsRequest"
+				name="getHoldingsRequest" />
+
+			<wsdl:output message="impl:getHoldingsResponse"
+				name="getHoldingsResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="getHolding">
+
+			<wsdl:input message="impl:getHoldingRequest"
+				name="getHoldingRequest" />
+
+			<wsdl:output message="impl:getHoldingResponse"
+				name="getHoldingResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="getAccountData">
+
+			<wsdl:input message="impl:getAccountDataRequest"
+				name="getAccountDataRequest" />
+
+			<wsdl:output message="impl:getAccountDataResponse"
+				name="getAccountDataResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="getAccountProfileData">
+
+			<wsdl:input message="impl:getAccountProfileDataRequest"
+				name="getAccountProfileDataRequest" />
+
+			<wsdl:output message="impl:getAccountProfileDataResponse"
+				name="getAccountProfileDataResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="updateAccountProfile">
+
+			<wsdl:input message="impl:updateAccountProfileRequest"
+				name="updateAccountProfileRequest" />
+
+			<wsdl:output message="impl:updateAccountProfileResponse"
+				name="updateAccountProfileResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="login">
+
+			<wsdl:input message="impl:loginRequest" name="loginRequest" />
+
+			<wsdl:output message="impl:loginResponse"
+				name="loginResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="logout">
+
+			<wsdl:input message="impl:logoutRequest"
+				name="logoutRequest" />
+
+			<wsdl:output message="impl:logoutResponse"
+				name="logoutResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="register">
+
+			<wsdl:input message="impl:registerRequest"
+				name="registerRequest" />
+
+			<wsdl:output message="impl:registerResponse"
+				name="registerResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="resetTrade">
+
+			<wsdl:input message="impl:resetTradeRequest"
+				name="resetTradeRequest" />
+
+			<wsdl:output message="impl:resetTradeResponse"
+				name="resetTradeResponse" />
+
+		</wsdl:operation>
+		
+		<wsdl:operation name="runDaCapoTrade">
+
+			<wsdl:input message="impl:runDaCapoTradeRequest"
+				name="runDaCapoTradeRequest" />
+
+			<wsdl:output message="impl:runDaCapoTradeResponse"
+				name="runDaCapoTradeResponse" />
+
+		</wsdl:operation>
+		
+		<wsdl:operation name="initializeDaCapo">
+
+			<wsdl:input message="impl:initializeDaCapoRequest"
+				name="initializeDaCapoRequest" />
+
+			<wsdl:output message="impl:initializeDaCapoResponse"
+				name="initializeDaCapoResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="resetDaCapo">
+
+			<wsdl:input message="impl:resetDaCapoRequest"
+				name="resetDaCapoRequest" />
+
+			<wsdl:output message="impl:resetDaCapoResponse"
+				name="resetDaCapoResponse" />
+
+		</wsdl:operation>
+		
+	</wsdl:portType>
+
+	<wsdl:binding name="TradeWSServicesSoapBinding"
+		type="impl:TradeWSServices">
+
+		<wsdlsoap:binding style="document"
+			transport="http://schemas.xmlsoap.org/soap/http" />
+
+		<wsdl:operation name="getMarketSummary">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="getMarketSummaryRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="getMarketSummaryResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="buy">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="buyRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="buyResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="sell">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="sellRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="sellResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="queueOrder">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="queueOrderRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="queueOrderResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="completeOrder">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="completeOrderRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="completeOrderResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="cancelOrder">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="cancelOrderRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="cancelOrderResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="orderCompleted">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="orderCompletedRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="orderCompletedResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="getOrders">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="getOrdersRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="getOrdersResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="getClosedOrders">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="getClosedOrdersRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="getClosedOrdersResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="createQuote">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="createQuoteRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="createQuoteResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="getQuote">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="getQuoteRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="getQuoteResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="getAllQuotes">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="getAllQuotesRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="getAllQuotesResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="updateQuotePriceVolume">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="updateQuotePriceVolumeRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="updateQuotePriceVolumeResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="getHoldings">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="getHoldingsRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="getHoldingsResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="getHolding">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="getHoldingRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="getHoldingResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="getAccountData">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="getAccountDataRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="getAccountDataResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="getAccountProfileData">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="getAccountProfileDataRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="getAccountProfileDataResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="updateAccountProfile">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="updateAccountProfileRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="updateAccountProfileResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="login">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="loginRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="loginResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="logout">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="logoutRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="logoutResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="register">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="registerRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="registerResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="resetTrade">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="resetTradeRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="resetTradeResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="runDaCapoTrade">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="runDaCapoTradeRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="runDaCapoTradeResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="initializeDaCapo">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="initializeDaCapoRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="initializeDaCapoResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="resetDaCapo">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="resetDaCapoRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="resetDaCapoResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+	</wsdl:binding>
+
+	<wsdl:service name="Trade">
+
+		<wsdl:port binding="impl:TradeWSServicesSoapBinding"
+			name="TradeWSServices">
+
+			<wsdlsoap:address
+				location="http://localhost:8080/daytrader/services/TradeWSServices" />
+
+		</wsdl:port>
+
+	</wsdl:service>
+
+</wsdl:definitions>
diff -urNw dt-a/modules/dacapo/src/main/resources/NOTICE dt-e/modules/dacapo/src/main/resources/NOTICE
--- modules/dacapo/src/main/resources/NOTICE	1970-01-01 10:00:00.000000000 +1000
+++ modules/dacapo/src/main/resources/NOTICE	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,9 @@
+Apache Geronimo 
+Copyright 2003-2009 The Apache Software Foundation
+
+This product includes software developed by
+The Apache Software Foundation (http://www.apache.org/).
+
+Portions of this software were developed at IBM and donated to the 
+ASF under the Apache 2.0 license.  The former work was referred to 
+as Trade 6.
diff -urNw dt-a/modules/ear/pom.xml dt-e/modules/ear/pom.xml
--- modules/ear/pom.xml	2009-10-13 15:17:44.000000000 +1100
+++ modules/ear/pom.xml	2009-10-22 15:20:20.000000000 +1100
@@ -58,6 +58,11 @@
             <artifactId>daytrader-wsappclient</artifactId>
             <version>${version}</version>
         </dependency>
+        <dependency>
+            <groupId>org.apache.geronimo.daytrader</groupId>
+            <artifactId>daytrader-dacapo</artifactId>
+            <version>${version}</version>
+        </dependency>
     </dependencies>
     <build>
         <plugins>
@@ -93,6 +98,12 @@
                             <bundleFileName>wsappclient.jar</bundleFileName>
                             <includeInApplicationXml>true</includeInApplicationXml>
                         </javaModule>
+                        <javaModule>
+                            <groupId>org.apache.geronimo.daytrader</groupId>
+                            <artifactId>daytrader-dacapo</artifactId>
+                            <bundleFileName>dacapo.jar</bundleFileName>
+                            <includeInApplicationXml>true</includeInApplicationXml>
+                        </javaModule>
                     </modules>
                     <!--
                     HACK: Include legal muck from maven-remote-resources-plugin
diff -urNw dt-a/modules/ejb/pom.xml dt-e/modules/ejb/pom.xml
--- modules/ejb/pom.xml	2009-10-13 15:17:42.000000000 +1100
+++ modules/ejb/pom.xml	2009-10-22 15:20:20.000000000 +1100
@@ -173,6 +173,17 @@
                     </archive>
                 </configuration>
             </plugin>
+            <plugin>
+                <artifactId>maven-ejb-plugin</artifactId>
+                <configuration>
+                    <generateClient>true</generateClient>
+                    <archive>
+                        <manifestEntries>
+                            <Class-Path>dacapo.jar</Class-Path>
+                        </manifestEntries>
+                    </archive>
+                </configuration>
+            </plugin>
         </plugins>
     </build>
 </project>
diff -urNw dt-a/modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/dacapo/DaCapoDBBuilder.java dt-e/modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/dacapo/DaCapoDBBuilder.java
--- modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/dacapo/DaCapoDBBuilder.java	1970-01-01 10:00:00.000000000 +1000
+++ modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/dacapo/DaCapoDBBuilder.java	2009-10-22 17:38:45.000000000 +1100
@@ -0,0 +1,332 @@
+package org.apache.geronimo.samples.daytrader.dacapo;
+
+import java.io.InputStreamReader;
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.net.URL;
+import java.util.ArrayList;
+
+import org.apache.geronimo.samples.daytrader.AccountDataBean;
+import org.apache.geronimo.samples.daytrader.OrderDataBean;
+import org.apache.geronimo.samples.daytrader.QuoteDataBean;
+import org.apache.geronimo.samples.daytrader.TradeConfig;
+import org.apache.geronimo.samples.daytrader.util.Log;
+import org.apache.geronimo.samples.daytrader.direct.TradeDirect;
+
+public class DaCapoDBBuilder extends Thread {
+
+	static final boolean VERBOSE = false;
+	
+	static int numBuilders;
+	static int threadCount = 0;
+	static int userCount = 0;
+	static String[] users = null;
+	static String[] stocks = null;
+	private static final int MAX_TX_ATTEMPTS = 5;
+
+	int units;
+	int ordinal;
+	TradeDirect trade;
+	
+	public static void create(TradeDirect trade, int numThreads, String size) {
+		try	{
+			createDB(trade);
+			users = readStrings("users.txt", size);
+			stocks = readStrings("stocks.txt", size);
+		} catch (Exception e) {
+			System.err.println("Could not create database: "+e.toString());
+			e.printStackTrace();
+		}
+	}
+	
+	private static void resetDataBase(TradeDirect trade) {
+		try	{
+			trade.resetTrade(true);
+		} catch (Exception e) {
+			System.err.println("Could not reset database: "+e.toString());
+			e.printStackTrace();
+		}
+	}
+
+	synchronized private static int getOrdinal(TradeDirect trade) {
+		int ordinal = threadCount++;
+		if (VERBOSE) System.err.println("Thread "+ordinal+" resetting!");
+		if (ordinal == 0) {
+			System.out.println("Resetting database and populating with "+stocks.length+" stocks...");
+			resetDataBase(trade);
+			populateStocks(trade);
+			System.out.println("Populating database with "+users.length+" users...");
+			if (VERBOSE) System.err.println("done with global reset!");
+		}
+		return ordinal;
+	}
+
+	
+	public static boolean reset(TradeDirect trade, String size, int threads) {
+		int ordinal = getOrdinal(trade);
+		populateUsers(trade, ordinal, threads);
+		if (ordinal == threads - 1) {
+			threadCount = 0; // all done
+	//		userCount = 0;
+		}
+		return true;
+	}
+	
+	private static void populateStocks(TradeDirect trade) {
+		for (int i = 0; i < stocks.length; i++) {
+			String s = stocks[i];
+			s = s.trim();
+			if ((s.length() != 0) && (s.charAt(0) != '#')) { // Empty lines or lines starting with "#" are ignored
+				String[] str = s.split("\t");
+				String symbol = str[0];
+				String company = str[1];
+				java.math.BigDecimal quote = new java.math.BigDecimal(str[2]);
+				for (int j = 0; j < MAX_TX_ATTEMPTS; j++) {
+					try {
+						QuoteDataBean quoteData =	trade.createQuote(symbol, company, quote);
+						break;
+					} catch (Exception e) {
+						if (j == MAX_TX_ATTEMPTS - 1) {
+							System.err.println("Error adding quote: "+e.toString());
+							e.printStackTrace();
+							return;
+						}
+					}
+				}
+				if (VERBOSE && i % 100 == 0) {
+					System.err.print("["+symbol+"|"+company+"|"+quote+"]");
+				}
+			}
+		}
+		if (VERBOSE) System.err.println("Hooray, added "+stocks.length+" stocks.");
+	}
+
+	private static void populateUsers(TradeDirect trade, int ordinal, int threads) {
+		String user;
+		while ((user = getNextUser(users, ordinal, threads)) != null) {
+			addUser(trade, user);
+		}
+	}
+	
+	private static int getNumStrings(URL inputFile, String size, boolean stocks) {
+		int rtn = 0;
+		try {
+			BufferedReader br = new BufferedReader(new InputStreamReader(inputFile.openStream()));
+			if (stocks) {
+				String s;
+				while ((s = br.readLine()) != null)  {
+					s = s.trim();
+					if ((s.length() != 0) && (s.charAt(0) != '#')) { // Empty lines or lines starting with "#" are ignored
+						rtn++;
+					}
+				}
+			} else {
+				rtn = parseUserHeader(br.readLine().trim(), size);
+			}
+		} catch (Exception e) {
+			System.err.println("Caught exception while trying to establish size of input file: "+e.toString());
+			e.printStackTrace();
+			System.exit(-1);			
+		}
+		return rtn;
+	}
+	
+	private static String[] readStrings(String fileName, String size) {
+		URL inputFile = null;
+		try {
+			inputFile = getURL(fileName); 
+			if (inputFile == null) {
+				String msg = "DaCapoDBBuilder: user input file doesnt exist at path "+ fileName +" , please provide the file and retry";
+				Log.error(msg);
+				System.err.println(msg);
+				return null;
+			}
+
+			int numStrings = getNumStrings(inputFile, size, fileName.equalsIgnoreCase("stocks.txt"));		
+			if (numStrings == 0) {
+				String msg = "DaCapoDBBuilder: can't determine the number of users for size \""+size+"\" in input file "+ fileName +" , please provide the file and retry";
+				Log.error(msg);
+				System.err.println(msg);
+				return null;
+			}
+
+			String[] strings = new String[numStrings];
+			String s;
+			int i = 0;
+			BufferedReader br = new BufferedReader(new InputStreamReader(inputFile.openStream()));
+			while (i < numStrings && (s = br.readLine().trim()) != null)  {
+				if ((s.length() != 0) && (s.charAt(0) != '#')){
+					strings[i] = s;
+					i++;
+				}
+			}
+			return strings;
+		} catch (Exception e) {
+			System.err.println("Caught exception while trying to read user stocks: "+e.toString());
+			e.printStackTrace();
+			System.exit(-1);
+		}
+		return null;
+	}
+	
+	private synchronized static String getNextUser(String[] users, int ordinal, int threads) {
+		int user = userCount++;
+		if (user < users.length) {
+			if (VERBOSE) System.err.println("Thread "+ordinal+" got user "+user+" of "+users.length+"!");
+			return users[user];
+		} else {
+			if (user == (users.length + threads - 1))
+				userCount = 0;
+			return null;
+		}
+	}	
+	
+	
+	private static void addUser(TradeDirect trade, String userString) {
+		String[] str = userString.split("\t");
+		String userid = str[0];
+		java.math.BigDecimal balance = new java.math.BigDecimal(str[1]);
+		String creditcard = str[2];
+		String email = str[3];
+		String password = str[4];
+		String name = str[5];
+		String address = str[6];
+		for (int i = 0; i < MAX_TX_ATTEMPTS; i++) {
+			try {
+				AccountDataBean accountData =	trade.register(userid, password, name, address, email, creditcard, balance);
+				break;
+			} catch (Exception e) {
+				if (i == MAX_TX_ATTEMPTS - 1) {
+					System.err.println("Error adding account: "+e.toString());
+					e.printStackTrace();
+					return;
+				}
+			}
+		}
+
+		String[] holdings = str[7].split(", ");
+		for (int h = 0; h < holdings.length; h++) {
+			String[] stock = holdings[h].split(" ");
+			String symbol = stock[0];
+			int quantity = Integer.parseInt(stock[1]);
+			for (int i = 0; i < MAX_TX_ATTEMPTS; i++) {
+				try {
+					OrderDataBean orderData = trade.buy(userid, symbol, quantity, TradeConfig.SYNCH);
+				} catch (Exception e) {
+					if (i == MAX_TX_ATTEMPTS - 1) {
+						System.err.println("Error adding holding: "+e.toString());
+						e.printStackTrace();
+						return;
+					}
+				}
+			}
+		}
+	}
+
+	
+	private static int parseUserHeader(String s, String size) {
+		int users = 0;
+		String[] header = s.split("\t");
+		for (int h = 0; h < header.length; h++) {
+			if (header[h].indexOf(size) != -1) {
+				try {
+					users = Integer.parseInt(header[h].substring(header[h].indexOf(": ")+2));
+				} catch (NumberFormatException e) {
+					String msg = "DaCapoDBBuilder: garbled size field in user header: "+header[h];
+					Log.error(msg);
+					System.err.println(msg);
+					return 0;						
+				}
+			}
+		}
+		return users;
+	}
+	
+	private static void createDB(TradeDirect trade) {
+		URL ddlFile = null;
+		Object[] sqlBuffer = null;
+		try {
+			String name = "DaCapoTable.ddl";
+			ddlFile = getURL(name);
+			if (ddlFile == null) {
+				String msg = "DaCapoDBBuilder: DDL file doesnt exist at path "+ name +" , please provide the file and retry";
+				Log.error(msg);
+				System.err.println(msg);
+				return;
+			}
+			try {
+				sqlBuffer = parseDDLToBuffer(ddlFile);
+			} catch (Exception e) {
+
+			}
+			try {
+				if (trade.recreateDBTables(sqlBuffer, null)) {
+					System.err.println("Successfully created tables");
+				}
+			} catch (Exception e) {
+				String msg = "Unable to drop and recreate DayTrader Db Tables, please check for database consistency before continuing";
+				Log.error(msg);
+				System.err.println(msg);
+			}
+		} catch (Exception e) {
+			String msg = "DaCapoDBBuilder: Unable to create database";
+			Log.error(msg);
+			System.err.println(msg);
+		}
+	}
+
+	public DaCapoDBBuilder(int ordinal, int units) {
+		this.ordinal = ordinal;
+		this.units = units;
+		this.trade = new TradeDirect();
+	}
+
+	public static Object[] parseDDLToBuffer(URL ddlFile) throws Exception	{
+		BufferedReader br = null;
+		ArrayList sqlBuffer = new ArrayList(30); //initial capacity 30 assuming we have 30 ddl-sql statements to read
+
+		try {
+			if (Log.doTrace()) Log.traceEnter("TradeBuildDB:parseDDLToBuffer - " + ddlFile);
+
+			br = new BufferedReader(new InputStreamReader(ddlFile.openStream()));
+			String s;
+			String sql = new String();
+			while ((s = br.readLine()) != null)  {
+				s = s.trim();
+				if ((s.length() != 0) && (s.charAt(0) != '#')) { // Empty lines or lines starting with "#" are ignored
+					sql = sql +" "+ s;
+					if (s.endsWith(";")) { // reached end of sql statement
+						sql = sql.replace(';', ' '); //remove the semicolon
+						//System.out.println (sql);
+						sqlBuffer.add(sql);
+						sql = "";
+					}
+				}
+			}
+		} catch (IOException ex) {
+			Log.error("DaCapoDBBuilder:parseDDLToBuffer Exeception during open/read of File: " + ddlFile, ex);
+			throw ex;
+		}	finally	{
+			if (br != null) {
+				try {
+					br.close();
+				} catch (IOException ex) {
+					Log.error("TradeBuildDB:parseDDLToBuffer Failed to close BufferedReader", ex);
+				}
+			}
+		}
+		return sqlBuffer.toArray();
+	}
+
+  /**
+   * Translate a resource name into a URL.
+   *
+   * @param fn
+   * @return
+   */
+  public static URL getURL(String fn) {
+    ClassLoader cl = DaCapoDBBuilder.class.getClassLoader();
+    URL resource = cl.getResource(fn);
+    return resource;
+  }
+}
diff -urNw dt-a/modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/dacapo/DaCapoRunner.java dt-e/modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/dacapo/DaCapoRunner.java
--- modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/dacapo/DaCapoRunner.java	1970-01-01 10:00:00.000000000 +1000
+++ modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/dacapo/DaCapoRunner.java	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,67 @@
+/**
+ *  Licensed to the Apache Software Foundation (ASF) under one or more
+ *  contributor license agreements.  See the NOTICE file distributed with
+ *  this work for additional information regarding copyright ownership.
+ *  The ASF licenses this file to You under the Apache License, Version 2.0
+ *  (the "License"); you may not use this file except in compliance with
+ *  the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
+package org.apache.geronimo.samples.daytrader.dacapo;
+
+import org.apache.geronimo.samples.daytrader.dacapo.DaCapoTrader;
+
+public class DaCapoRunner {
+	
+  private static final boolean VERBOSE = false;
+  
+  static int completed[] = new int[2];
+  static int tradeSessions = 0;
+  
+	public static void runDaCapoTrade(String size, int numThreads, boolean soap) {
+		startTraders(size, numThreads, soap);
+		wait(numThreads);
+	}
+	
+	private static void startTraders(String size, int numThreads, boolean soap) {
+
+		DaCapoTrader[] traders = new DaCapoTrader[numThreads];
+		for (int i = 0; i < numThreads; i++) {
+			try {
+				traders[i] = new DaCapoTrader(soap, completed, i, numThreads, size);
+				traders[i].setName("DaCapo Thread " + i);
+				if (i == 0) {
+					tradeSessions = traders[i].loadWorkload(size);
+					DaCapoTrader.setSessionStride(tradeSessions, numThreads);
+				}
+			} catch (Exception e) {
+				System.err.println("Caught exception!: "+e.toString());
+			}
+		}
+		if (tradeSessions > 0) {
+			completed[0] = 0;
+			for (int i = 0; i < numThreads; i++)
+				traders[i].start();
+		}
+	}
+
+	private static void wait(int numTraders) {
+		synchronized(completed) {
+			while (completed[0] != (tradeSessions+numTraders)) {
+				try {
+					completed.wait();
+					if (VERBOSE) System.err.println("Completed: "+completed[0]+"/"+tradeSessions);
+				} catch (InterruptedException e) {
+					System.out.println("Caught exception while waiting "+ e.toString());					
+				}
+			}
+		}
+	}
+}
\ No newline at end of file
diff -urNw dt-a/modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/dacapo/DaCapoTrader.java dt-e/modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/dacapo/DaCapoTrader.java
--- modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/dacapo/DaCapoTrader.java	1970-01-01 10:00:00.000000000 +1000
+++ modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/dacapo/DaCapoTrader.java	2009-10-22 22:14:20.000000000 +1100
@@ -0,0 +1,609 @@
+package org.apache.geronimo.samples.daytrader.dacapo;
+
+import java.io.BufferedReader;
+import java.io.InputStreamReader;
+import java.net.URL;
+import java.util.Collection;
+import java.util.Iterator;
+
+import org.apache.geronimo.samples.daytrader.*;
+import org.apache.geronimo.samples.daytrader.direct.TradeDirect;
+import org.apache.geronimo.samples.daytrader.soap.TradeWebSoapProxy;
+import org.apache.geronimo.samples.daytrader.util.Log;
+
+public class DaCapoTrader extends Thread {
+
+  private static final boolean VERBOSE = false;
+
+  static final int MAX_INITIALIZATION_WAIT_CYCLES = 120;
+  static final int PAUSE_MS = 1000;
+  static final int MIN_WORK_PARTITIONING_FACTOR = 4;  // higher -> better load balancing but more contention on session table
+
+  private int[] consumed;
+  private static String[] tradeSessions;
+  private int threads;
+  private String size;
+  private TradeServices trade = null;
+  private static final int MAX_TRANSACTION_RETRIES = 5;
+  private static final int OP_H = 0, OP_P = 1, OP_Q = 2, OP_B = 3, OP_S = 4, OP_U = 5, OP_R = 6, OP_L = 7, OP_O = 8, OP_NQ = 9;
+  private static final String[]OP_NAMES      = {"Home", "Portfolio", "Quote", "Buy", "Sell", "Update", "Register", "Login", "Logout", "Nested Quote"};
+  private static final int[] MAX_OP_ATTEMPTS = {     5,           5,       5,     5,      5,        5,          5,       5,        5,             5};
+  private static int[] opCount = new int[OP_NAMES.length];
+  private int[] localOpCount = new int[OP_NAMES.length];
+  private boolean soap;
+  private static int sessionStride = 1;
+  private int sessionIndex = -1;
+  private int sessionBound = -1;
+  private int threadID = -1;
+  
+  public DaCapoTrader() {}
+  
+  public DaCapoTrader(boolean soap, int[] completed, int ordinal, int threads, String size) {
+    try {
+      this.consumed = completed;
+      this.threads = threads;
+      this.size = size;
+      this.soap = soap;
+      this.threadID = ordinal;
+      try {
+        if (VERBOSE) System.err.println("["+threadID+"] Creating Trade Action");
+        if (soap) 
+          trade = new TradeWebSoapProxy();
+        else
+          trade = new TradeDirect();
+        if (VERBOSE) System.err.println("["+threadID+"] Created Trade Action");
+      } catch (Exception e) {
+        e.printStackTrace();
+      }
+    } catch (Exception e) {
+      System.out.println("Caught exception while creating trader "+ e.toString());  
+      e.printStackTrace();
+    }
+  }
+  
+  private void reset() {
+    try {
+      trade.resetDaCapo(size, threads);
+    } catch (Exception e) {
+      System.err.println("Caught exception while resetting DaCapo workload: "+e.toString());
+      e.printStackTrace();
+    }
+    int ordinal;
+    synchronized(consumed) {
+      ordinal = consumed[1]++;
+      for (int i = 0; i < OP_NAMES.length; i++) localOpCount[i] = 0;  // reset local count
+      
+      /* last to finish does some cleanup and announcements */
+      if (consumed[1] == threads) { 
+        for (int i = 0; i < OP_NAMES.length; i++) opCount[i] = 0;     // reset global count
+        consumed[1] = 0;
+        System.out.println("Finished repopulating database");
+        System.out.println("Running "+tradeSessions.length+" trade sessions "+(soap ? "from client via soap" : "directly on server"));
+      }
+      
+      if (VERBOSE) System.err.println("["+threadID+"] reached barrier: "+ordinal);
+      consumed.notify();
+    }
+    synchronized(consumed) {
+      while(consumed[1] != 0) {
+        try {
+          consumed.wait();
+          if (VERBOSE) System.err.println("["+threadID+"] Completed: "+consumed[1]);
+        } catch (InterruptedException e) {
+          System.err.println("Caught exception while waiting: "+e.toString());
+          e.printStackTrace();
+        }
+      }
+    }
+    if (VERBOSE) System.err.println("["+threadID+"] completed reset(), thread "+ordinal);
+  }
+  
+  public void run() {
+    reset();
+    if (VERBOSE) System.err.println("["+threadID+"] starting trading");
+    String tradeSession;
+    
+    while((tradeSession = getNextTradeSession()) != null) {
+      runTradeSession(tradeSession);
+    }
+  }
+  
+  
+  private boolean increaseSessionBound() {
+    boolean available = false;
+    int alreadyConsumed = 0;
+    
+    synchronized(consumed) {
+      for (int i = 0; i < OP_NAMES.length; i++) opCount[i] += localOpCount[i];
+      alreadyConsumed = consumed[0];
+      int remaining = tradeSessions.length - consumed[0];
+      if (remaining > 0) {  // more work to do
+        sessionIndex = consumed[0];
+        consumed[0] += (remaining >= sessionStride) ? sessionStride : remaining;
+        sessionBound = consumed[0];
+        available = true;
+      } else {              // we're done
+        consumed[0]++;
+        if (alreadyConsumed  == tradeSessions.length + threads - 1)
+        printReport();
+      }
+      consumed.notify();
+    }
+
+    for (int i = 0; i < OP_NAMES.length; i++) localOpCount[i] = 0;
+    
+//    if (available && sessionBound % (50 * sessionStride) == 0)
+//      System.out.println(sessionBound+" trade sessions...");
+    return available;
+  }
+  
+  private String getNextTradeSession() {
+    if (sessionIndex < sessionBound || increaseSessionBound()) {
+      return tradeSessions[sessionIndex++];
+    } else {
+      return null;
+    }
+  }
+      
+
+  private void printReport() {
+    int total = 0;
+    int nested = opCount[OP_NQ];
+    for (int i = 0; i < OP_NAMES.length; i++) { 
+      total += opCount[i];
+    }
+    String dots = "........................";
+    System.out.println("Completed "+tradeSessions.length+" trade sessions comprising "+(total-nested)+" trader actions");
+    for (int i = 0; i < OP_NAMES.length; i++) {
+      if (i != OP_NQ)
+        System.out.format("\t"+OP_NAMES[i]+" "+dots.substring(OP_NAMES[i].length())+"%6d (%4.1f%%)%n",  opCount[i], 100*((float) opCount[i]/(total-nested)));
+    }
+    System.out.flush();
+  }
+  
+  public static void initializeTrade(final String size) {
+    Thread initializer = new Thread(new Runnable() {
+      public void run() {
+        TradeServices initTrade = new TradeWebSoapProxy();
+        if (VERBOSE) System.err.println("Initializing...");
+        for (int i = 0; i < MAX_INITIALIZATION_WAIT_CYCLES; i++) {
+          try {
+            initTrade.initializeDaCapo(size);
+             return;
+          } catch (Exception e) {
+            if (i == MAX_INITIALIZATION_WAIT_CYCLES - 1) {
+              System.err.println("Error initializing DaCapo: " + e.toString());
+              e.printStackTrace();
+              System.exit(0);
+            } else {
+              if (VERBOSE) System.err.println("Attempt " + i + " failed...");
+              try {
+                Thread.sleep(PAUSE_MS);
+              } catch (InterruptedException ie) {}
+            }
+          }
+        }
+      }});
+    initializer.start();
+    try {
+      initializer.join();
+    } catch (InterruptedException e) {
+      System.err.println("Error initializing DaCapo: " + e.toString());
+      e.printStackTrace();
+      System.exit(0);
+    }
+  }
+  
+  public static void setSessionStride(int numSessions, int numThreads) {
+    int idealStride = numSessions / (MIN_WORK_PARTITIONING_FACTOR * numThreads);
+    if (idealStride > sessionStride)
+      sessionStride = idealStride;
+  }
+  
+  public int loadWorkload(String size) {
+    try {
+      String fileName = "workload.txt";
+      URL workloadFile = getURL(fileName);
+      if (workloadFile == null) {
+        String msg = "DaCapoTrader: workload input file does not exist at path "+fileName+" , please provide the file and retry";
+        Log.error(msg);
+        System.err.println(msg);
+        return -1;
+      }
+      BufferedReader br = new BufferedReader(new InputStreamReader(workloadFile.openStream()));
+      
+      int numSessions = parseHeader(br.readLine().trim(), size);
+      
+      if (VERBOSE) System.err.println("["+threadID+"] Successfully read header.  Will load "+numSessions+" sessions");
+      tradeSessions = new String[numSessions];
+      
+      String s;
+      int i = 0;
+      while (i < numSessions && (s = br.readLine().trim()) != null) {
+        if ((s.length() != 0) && (s.charAt(0) != '#')) { // Empty lines or lines starting with "#" are ignored
+          tradeSessions[i++] = s;
+          if (VERBOSE) System.err.println("["+threadID+"] Loaded session: "+s);
+        }
+      }
+      if (i != numSessions) {
+        String msg = "DaCapoDBBuilder: could only read "+i+" of "+numSessions+" users from input file "+ fileName +" , please correct the file and retry";
+        Log.error(msg);
+        System.err.println(msg);
+        return -1;
+      }
+      return numSessions;
+    } catch (Exception e) {
+      String msg = "Unable to load workload: "+e;
+      Log.error(msg);
+      System.err.println(msg);
+      return -1;
+    }
+  }
+  
+  private static int parseHeader(String s, String size) {
+    int users = 0;
+    String[] header = s.split("\t");
+    for (int h = 0; h < header.length; h++) {
+      if (header[h].indexOf(size) != -1) {
+        try {
+          users = Integer.parseInt(header[h].substring(header[h].indexOf(": ")+2));
+        } catch (NumberFormatException e) {
+          String msg = "DaCapoDBTrader: garbled size field in user header: "+header[h];
+          Log.error(msg);
+          System.err.println(msg);
+          return 0;            
+        }
+      }
+    }
+    return users;
+  }
+
+  
+  private void runTradeSession(String session) {
+    String[] entries = session.split("\t");
+    if (VERBOSE) System.err.println("["+threadID+"] Session: "+entries.length+" --> "+session);
+    String uid = entries[0];
+    String passwd = entries[1];
+    doLogin(uid, passwd);
+    int tx = 2;
+    while (tx < entries.length) {
+      char op = entries[tx].charAt(0);
+      String request = (entries[tx].length() > 1) ? entries[tx].substring(2) : null;
+      switch (op) {
+      case 'h':
+        doHome(uid);
+        break;
+      case 'p':
+        doPortfolio(uid);
+        break;
+      case 'q':
+        doQuote(request);
+        break;
+      case 'b':
+        doBuy(uid, request);
+        break;
+      case 'u':
+        doUpdate(uid, request);
+        break;
+      case 'r':
+        uid = doRegister(uid, request);
+        if (uid == null) return;
+        break;
+      case 's':
+        doSell(uid, request);
+        break;
+      }
+      tx++;
+    }
+    doLogout(uid);
+  }
+  
+  private int doLogin(String uid, String password) {
+    for (int i = 0; i < MAX_OP_ATTEMPTS[OP_L]; i++) {
+      try {
+        if (VERBOSE) System.err.println("["+threadID+"] Logging in "+uid+"...");
+        AccountDataBean account = trade.login(uid, password);
+        int rtn = account.hashCode();
+        localOpCount[OP_L]++;
+        return rtn;
+      } catch (Exception e) {
+        if (VERBOSE || i == MAX_OP_ATTEMPTS[OP_L] - 1) {
+          System.out.println("Error logging in "+uid+": " + e.toString());
+          e.printStackTrace();
+        }
+      }
+    }
+    return 0;
+  }
+  
+  private int doLogout(String uid) {
+    for (int i = 0; i < MAX_OP_ATTEMPTS[OP_O]; i++) {
+      try {
+        if (VERBOSE) System.err.println("["+threadID+"] Logging out "+uid+"...");
+        trade.logout(uid);
+        localOpCount[OP_O]++;
+        return 1;
+      } catch (Exception e) {
+        if (VERBOSE || i == MAX_OP_ATTEMPTS[OP_O] - 1) {
+          System.out.println("Error logging out "+uid+": " + e.toString());
+          e.printStackTrace();
+        }
+      }
+    }
+    return 0;
+  }
+  
+  private int doHome(String uid) {
+    int rtn = 0;
+    for (int i = 0; i < MAX_OP_ATTEMPTS[OP_H]; i++) {
+      try {
+        rtn = 0;
+        if (VERBOSE) System.err.println("["+threadID+"] Getting home page for "+uid+"...");
+        AccountDataBean accountData = trade.getAccountData(uid);
+        rtn += accountData.hashCode();
+        if (VERBOSE) System.err.println("["+threadID+"] Account for "+uid+": "+accountData.toString());
+        Collection holdingDataBeans = trade.getHoldings(uid);
+        if (holdingDataBeans == null) {
+          System.err.println("User "+uid+" has no holdings.");
+        } else if (holdingDataBeans.size() > 0) {
+          Iterator it = holdingDataBeans.iterator();
+          HoldingDataBean holdingData = null;
+          while (it.hasNext()) {
+            holdingData = (HoldingDataBean) it.next();
+            if (holdingData == null && VERBOSE) {
+              System.err.println("Collection contained null holding!");
+            } else {
+              rtn += holdingData.hashCode();
+            }
+          }
+        }
+        localOpCount[OP_H]++;
+        return rtn;
+      } catch (Exception e) {
+        if (VERBOSE || i == MAX_OP_ATTEMPTS[OP_H] - 1) {
+          System.err.println("Error getting home page for user "+uid+": " + e.toString());
+          e.printStackTrace();
+        }
+      }
+    }
+    return rtn;
+  }
+  
+  private int doPortfolio(String uid) {
+    int rtn = 0;
+    int initNQCount = localOpCount[OP_NQ];
+    for (int i = 0; i < MAX_OP_ATTEMPTS[OP_P]; i++) {
+      try {
+        rtn = 0;
+        if (VERBOSE) System.err.println("["+threadID+"] Getting portfolio for "+uid+"...");
+        Collection holdingDataBeans = trade.getHoldings(uid);
+        rtn += holdingDataBeans.hashCode();
+        if (holdingDataBeans == null) {
+          System.err.println("User "+uid+" has no holdings.");
+        } else if (holdingDataBeans.size() > 0) {
+          Iterator it = holdingDataBeans.iterator();
+          HoldingDataBean holdingData = null;
+          while (it.hasNext()) {
+            holdingData = (HoldingDataBean) it.next();
+            if (holdingData == null) {
+              System.err.println("Collection contained null holding!");
+            } else {
+              rtn += doQuote(holdingData.getQuoteID(), true);
+            }
+          }
+        }
+        localOpCount[OP_P]++;
+        return rtn;
+      } catch (Exception e) {
+        localOpCount[OP_NQ] = initNQCount;  // don't count aborted ops
+        if (VERBOSE || i == MAX_OP_ATTEMPTS[OP_P] - 1) {
+          System.err.println("Error getting portfolio for "+uid+": " + e.toString());
+          e.printStackTrace();
+        }
+      }
+    }
+    return rtn;
+  }
+  
+  private int doQuote(String symbol) {
+    return doQuote(symbol, false);
+  }
+  
+  private int doQuote(String symbol, boolean nested) {
+    for (int i = 0; i < MAX_OP_ATTEMPTS[nested ? OP_NQ : OP_Q]; i++) {
+      try {
+        if (VERBOSE) System.err.println("["+threadID+"] Quoting "+symbol);
+        QuoteDataBean quote = trade.getQuote(symbol);
+        if (VERBOSE) System.err.println("["+threadID+"] Quote for "+symbol+" is "+quote.toString());
+        int rtn = quote.hashCode();
+        localOpCount[nested ? OP_NQ : OP_Q]++;
+        return rtn;
+      } catch (Exception e) {
+        if (VERBOSE || i == MAX_OP_ATTEMPTS[nested ? OP_NQ : OP_Q] - 1) {
+          System.err.println("Error getting quote of "+symbol+": " + e.toString());
+          e.printStackTrace();
+        }
+      }
+    }
+    return 0;
+  }
+  
+  private int doBuy(String uid, String request) {
+    String[] rq = request.split(" ");
+    String symbol = null;
+    int qty = 0;
+    try {
+      symbol = rq[0];
+      qty = Integer.parseInt(rq[1]);
+    } catch (Exception e){
+      System.err.println("Error parsing buy for "+uid+" (\""+request+"\"):" + e.toString());
+      e.printStackTrace();
+    }
+    if (VERBOSE) System.out.println("Buying "+qty+" "+symbol+" for "+uid);
+
+    for (int i = 0; i < MAX_OP_ATTEMPTS[OP_B]; i++) {
+      try {
+        OrderDataBean order = trade.buy(uid, symbol, qty, TradeConfig.SYNCH);
+        int rtn = order.hashCode();
+        localOpCount[OP_B]++;
+        return rtn;
+      } catch (Exception e) {
+        if (VERBOSE || i == MAX_OP_ATTEMPTS[OP_B] - 1) {
+          System.out.println("Error performing buy of "+request+" for "+uid+": " + e.toString());
+          e.printStackTrace();
+        }
+      }
+    }
+    return 0;
+  }
+
+  private int doSell(String uid, String request) {
+    String[] rq = request.split(" ");
+    String symbol = null;
+    int qty = 0;
+    try {
+      symbol = rq[0];
+      qty = Integer.parseInt(rq[1]);
+    } catch (Exception e){
+      System.err.println("Error parsing sell for "+uid+" (\""+request+"\"): " + e.toString());
+      e.printStackTrace();
+    }
+    if (VERBOSE) System.err.println("["+threadID+"] Selling "+request+" for "+uid);
+
+    Integer holdingID = getHoldingIDFromHoldings(uid, symbol, qty);
+    if (holdingID != null) {
+      for (int i = 0; i < MAX_OP_ATTEMPTS[OP_S]; i++) {
+        try {
+          OrderDataBean order = trade.sell(uid, holdingID, TradeConfig.SYNCH);
+          int rtn = order.hashCode();
+          localOpCount[OP_S]++;
+          return rtn;
+        } catch (Exception e) {
+          if (VERBOSE || i == MAX_OP_ATTEMPTS[OP_S] - 1) {
+            System.out.println("Error performing sell of "+request+" for "+uid+": " + e.toString());
+            e.printStackTrace();
+          }
+        }
+      }
+    } else {
+      System.err.println("Could not perform sell of "+symbol+" "+qty);
+    }
+    return 0;
+  }
+  
+  private Integer getHoldingIDFromHoldings(String uid, String symbol, int qty) {
+    for (int i = 0; i < MAX_TRANSACTION_RETRIES - 1; i++) {
+      try {
+        Collection holdingDataBeans = trade.getHoldings(uid);
+        if (holdingDataBeans != null && holdingDataBeans.size() > 0) {
+          Iterator it = holdingDataBeans.iterator();
+          HoldingDataBean holdingData = null;
+          while (it.hasNext()) {
+            holdingData = (HoldingDataBean) it.next();
+            if (holdingData != null && holdingData.getQuantity() == qty && holdingData.getQuoteID().equalsIgnoreCase(symbol)) {
+              return holdingData.getHoldingID();
+            }
+          }
+        }
+      } catch (Exception e) {
+        if (VERBOSE || i == MAX_TRANSACTION_RETRIES - 1) {
+          System.out.println("Error getting holdings: " + e.toString());
+          e.printStackTrace();
+        }
+      }
+    }
+    return null;
+  }
+  
+  private int doUpdate(String uid, String request) {
+    if (VERBOSE) System.err.println("["+threadID+"] Updating "+uid);
+    String passwd = null, name = null, address = null, email = null, ccard = null;
+    String[] details = request.split("\\|");
+    try {
+      passwd = details[2];
+      name = details[3];
+      address = details[4];
+      email = details[1];
+      ccard = details[0];
+    } catch (Exception e){
+      System.err.println("Error parsing update for "+uid+"(\""+request+"\")" + e.toString());
+      e.printStackTrace();
+    }
+    AccountProfileDataBean profile = new AccountProfileDataBean(uid, passwd, name, address, email, ccard);
+
+    for (int i = 0; i < MAX_OP_ATTEMPTS[OP_U] - 1; i++) {
+      try {
+        AccountProfileDataBean account = trade.updateAccountProfile(profile);
+        int rtn = account.hashCode();
+        localOpCount[OP_U]++;
+        return rtn;
+      } catch (Exception e) {
+        if (VERBOSE || i == MAX_OP_ATTEMPTS[OP_U]) {
+          System.out.println("Error updating profile: " + e.toString());
+          e.printStackTrace();
+        }
+      }
+    }
+    return 0;
+  }
+    
+  private String doRegister(String uid, String request) {
+    String newuid = null, passwd = null, name = null, address = null, email = null, ccard = null;
+    java.math.BigDecimal balance = null;
+    String[] details = request.split("\\|");
+    try {
+      newuid = details[0];
+      passwd = details[4];
+      name = details[5];
+      address = details[6];
+      email = details[3];
+      ccard = details[2];
+      balance = new java.math.BigDecimal(details[1]);
+    } catch (Exception e){
+      System.err.println("Error parsing register for "+uid+"(\""+request+"\")" + e.toString());
+      e.printStackTrace();
+    }    
+    if (VERBOSE) System.err.println("["+threadID+"] Registering " + newuid);
+
+    for (int i = 0; i < MAX_OP_ATTEMPTS[OP_O] - 1; i++) {
+      try {
+        trade.logout(uid);
+        localOpCount[OP_O]++;
+        break;
+      } catch (Exception e) {
+        if (VERBOSE || i == MAX_OP_ATTEMPTS[OP_O] - 1) {
+          System.out.println("Error logging out: " + e.toString());
+          e.printStackTrace();
+        }
+      }
+    }
+
+    for (int i = 0; i < MAX_OP_ATTEMPTS[OP_R] - 1; i++) {
+      try {
+        trade.register(newuid, passwd, name, address, email, ccard, balance);
+        localOpCount[OP_R]++;
+        break;
+      } catch (Exception e) {
+        if (VERBOSE || i == MAX_OP_ATTEMPTS[OP_R] - 1) {
+          System.out.println("Error registering new user: " + e.toString());
+          e.printStackTrace();
+        }
+      }
+    }
+    return newuid; // return new user id
+  }
+  
+    /**
+   * Translate a resource name into a URL.
+   *
+   * @param fn
+   * @return
+   */
+  public static URL getURL(String fn) {
+    ClassLoader cl = DaCapoTrader.class.getClassLoader();
+    URL resource = cl.getResource(fn);
+    if (VERBOSE) System.err.println("Util.getURL: returns "+resource);
+    return resource;
+  }
+  
+}
diff -urNw dt-a/modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/direct/TradeDirect.java dt-e/modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/direct/TradeDirect.java
--- modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/direct/TradeDirect.java	2009-10-13 15:17:41.000000000 +1100
+++ modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/direct/TradeDirect.java	2009-10-22 15:20:20.000000000 +1100
@@ -1975,6 +1975,27 @@
 
 	}
 
+	/**
+   * @see TradeServices#resetDaCapo(String)
+   */
+	public void runDaCapoTrade(String size, int threads, boolean soap) throws Exception {
+		org.apache.geronimo.samples.daytrader.dacapo.DaCapoRunner.runDaCapoTrade(size, threads, soap);
+	}
+	
+	/**
+   * @see TradeServices#initializeDaCapo(String)
+   */
+	public void initializeDaCapo(String size) throws Exception {
+		org.apache.geronimo.samples.daytrader.dacapo.DaCapoDBBuilder.create(this, 1, size);
+	}
+
+	/**
+   * @see TradeServices#resetDaCapo(String)
+   */
+	public boolean resetDaCapo(String size, int threads) throws Exception {
+		return org.apache.geronimo.samples.daytrader.dacapo.DaCapoDBBuilder.reset(this, size, threads);
+	}
+	
 	private void releaseConn(Connection conn) throws Exception {
 		try {
 			if (conn != null) {
@@ -2101,8 +2122,7 @@
 
 	private final static String updateAccountProfileSQL = "update accountprofileejb set "
 			+ "passwd = ?, fullname = ?, address = ?, email = ?, creditcard = ? "
-			+ "where userid = (select profile_userid from accountejb a "
-			+ "where a.profile_userid=?)";
+			+ "where userid = ?";
 
 	private final static String loginSQL = "update accountejb set lastLogin=?, logincount=logincount+1 "
 			+ "where profile_userid=?";
@@ -2114,17 +2134,14 @@
 
 	private static final String getAccountForUpdateSQL = "select * from accountejb a where a.accountid = ? for update";
 
-	private final static String getAccountProfileSQL = "select * from accountprofileejb ap where ap.userid = "
-			+ "(select profile_userid from accountejb a where a.profile_userid=?)";
+	private final static String getAccountProfileSQL = "select * from accountprofileejb ap where ap.userid = ?";
 
 	private final static String getAccountProfileForAccountSQL = "select * from accountprofileejb ap where ap.userid = "
 			+ "(select profile_userid from accountejb a where a.accountid=?)";
 
-	private static final String getAccountForUserSQL = "select * from accountejb a where a.profile_userid = "
-			+ "( select userid from accountprofileejb ap where ap.userid = ?)";
+	private static final String getAccountForUserSQL = "select * from accountejb a where a.profile_userid = ?";
 
-	private static final String getAccountForUserForUpdateSQL = "select * from accountejb a where a.profile_userid = "
-			+ "( select userid from accountprofileejb ap where ap.userid = ?) for update";
+	private static final String getAccountForUserForUpdateSQL = "select * from accountejb a where a.profile_userid = ?";
 
 	private static final String getHoldingSQL = "select * from holdingejb h where h.holdingid = ?";
 
diff -urNw dt-a/modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/ejb3/DirectSLSBBean.java dt-e/modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/ejb3/DirectSLSBBean.java
--- modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/ejb3/DirectSLSBBean.java	2009-10-13 15:17:40.000000000 +1100
+++ modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/ejb3/DirectSLSBBean.java	2009-10-22 15:20:20.000000000 +1100
@@ -128,4 +128,16 @@
 	public RunStatsDataBean resetTrade(boolean deleteAll) throws Exception {
 		return (new TradeDirect(false)).resetTrade(deleteAll);
 	}
+    
+  public void runDaCapoTrade(String size, int threads, boolean soap) throws Exception {
+    (new TradeDirect(true)).runDaCapoTrade(size, threads, soap);  	
+  }
+
+  public void initializeDaCapo(String size) throws Exception {
+  	(new TradeDirect(true)).initializeDaCapo(size);
+  }
+  
+  public boolean resetDaCapo(String size, int threads) throws Exception {
+  	return (new TradeDirect(true)).resetDaCapo(size, threads);
+  }
 }
diff -urNw dt-a/modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/ejb3/TradeSLSBBean.java dt-e/modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/ejb3/TradeSLSBBean.java
--- modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/ejb3/TradeSLSBBean.java	2009-10-13 15:17:40.000000000 +1100
+++ modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/ejb3/TradeSLSBBean.java	2009-10-22 15:20:20.000000000 +1100
@@ -615,6 +615,19 @@
         return new org.apache.geronimo.samples.daytrader.direct.TradeDirect(false).resetTrade(deleteAll);
     }
 
+    public void runDaCapoTrade(String size, int threads, boolean soap) {
+    	System.err.println("Hmmmmmmmmmmmmm...  haven't worked this bit out yet: "+size);
+    }
+    
+    public void initializeDaCapo(String size) {
+    	System.err.println("Hmmmmmmmmmmmmm...  haven't worked this bit out yet: "+size);
+    }
+    
+    public boolean resetDaCapo(String size, int threads) {
+    	System.err.println("Hmmmmmmmmmmmmm...  haven't worked this bit out yet: "+size);
+    	return false;
+    }
+
     private void publishQuotePriceChange(QuoteDataBean quote, BigDecimal oldPrice, BigDecimal changeFactor, double sharesTraded) {
         if (!TradeConfig.getPublishQuotePriceChange())
             return;
diff -urNw dt-a/modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/soap/TradeWebSoapProxy.java dt-e/modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/soap/TradeWebSoapProxy.java
--- modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/soap/TradeWebSoapProxy.java	2009-10-13 15:17:41.000000000 +1100
+++ modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/soap/TradeWebSoapProxy.java	2009-10-22 15:20:20.000000000 +1100
@@ -266,6 +266,27 @@
 		return convertQuoteDataBean(getTrade().updateQuotePriceVolume(symbol, newPrice, sharesTraded));		
 	}
 
+	/**
+   * @see TradeServices#runDaCapoTrade(String, int, boolean)
+   */
+	public void runDaCapoTrade(String size, int threads, boolean soap) throws Exception {
+		getTrade().runDaCapoTrade(size, threads, soap);
+	}
+	
+	/**
+    * @see TradeServices#initializeDaCapo(String)
+   */
+	public void initializeDaCapo(String size) throws Exception {
+		getTrade().initializeDaCapo(size);
+	}
+
+	/**
+  * @see TradeServices#resetDaCapo(String, int)
+   */
+	public boolean resetDaCapo(String size, int threads) throws Exception {
+		return getTrade().resetDaCapo(size, threads);
+	}
+	
 	private org.apache.geronimo.samples.daytrader.OrderDataBean convertOrderDataBean(org.apache.geronimo.samples.daytrader.client.ws.OrderDataBean bean) {
 		return new org.apache.geronimo.samples.daytrader.OrderDataBean(
 			bean.getOrderID(),
diff -urNw dt-a/modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/soap/TradeWSAction.java dt-e/modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/soap/TradeWSAction.java
--- modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/soap/TradeWSAction.java	2009-10-13 15:17:41.000000000 +1100
+++ modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/soap/TradeWSAction.java	2009-10-22 15:20:20.000000000 +1100
@@ -180,9 +180,10 @@
         }
 	}
 	
-	public void logout(String userID) throws RemoteException {
+	public boolean logout(String userID) throws RemoteException {
 		try {
             trade.logout(userID);
+            return true;
         } catch (Exception e) {
             throw new RemoteException("", e);
         }
@@ -204,4 +205,28 @@
         }                
 	}    
     
+	public boolean runDaCapoTrade(String size, int threads, boolean soap) throws RemoteException {
+		try {
+            trade.runDaCapoTrade(size, threads, soap);
+            return true;
+        } catch (Exception e) {
+            throw new RemoteException("", e);
+        }
+	}
+		public boolean initializeDaCapo(String size) throws RemoteException {
+		try {
+            trade.initializeDaCapo(size);
+            return true;
+        } catch (Exception e) {
+            throw new RemoteException("", e);
+        }
+	}
+	
+	public boolean resetDaCapo(String size, int threads) throws RemoteException {
+		try {
+            return trade.resetDaCapo(size, threads);
+        } catch (Exception e) {
+            throw new RemoteException("", e);
+        }
+	}
 }
diff -urNw dt-a/modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/TradeAction.java dt-e/modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/TradeAction.java
--- modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/TradeAction.java	2009-10-13 15:17:41.000000000 +1100
+++ modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/TradeAction.java	2009-10-22 15:20:20.000000000 +1100
@@ -531,4 +531,41 @@
         runStatsData = trade.resetTrade(deleteAll);
 		return runStatsData;
 	}
+    
+    
+    /**
+     * Initialize the database for DaCapo
+     *
+     * @param size the size of the workload
+     * @param threads the number of threads participating in the reset
+     */
+    public void runDaCapoTrade(String size, int threads, boolean soap) throws Exception {
+    	if (Log.doActionTrace())
+    		Log.trace("TradeAction:runDaCapoTrade", size);
+    	trade.runDaCapoTrade(size, threads, soap);
+    }
+    
+    /**
+     * Initialize the database for DaCapo
+     *
+     * @param size the size of the workload
+     */
+    public void initializeDaCapo(String size) throws Exception {
+    	if (Log.doActionTrace())
+    		Log.trace("TradeAction:initializeDaCapo", size);
+    	trade.initializeDaCapo(size);
+    }
+
+    
+    /**
+     * Initialize the database for DaCapo
+     *
+     * @param size the size of the workload
+     * @param threads the number of threads participating in the reset
+     */
+    public boolean resetDaCapo(String size, int threads) throws Exception {
+    	if (Log.doActionTrace())
+    		Log.trace("TradeAction:resetDaCapo", size);
+    	return trade.resetDaCapo(size, threads);
+    }
 }
diff -urNw dt-a/modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/TradeServices.java dt-e/modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/TradeServices.java
--- modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/TradeServices.java	2009-10-13 15:17:41.000000000 +1100
+++ modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/TradeServices.java	2009-10-22 15:20:20.000000000 +1100
@@ -272,5 +272,11 @@
  	 *  return statistics for this benchmark run
 	 */
     public RunStatsDataBean resetTrade(boolean deleteAll) throws Exception, RemoteException;
+    
+    public void runDaCapoTrade(String size, int threads, boolean soap) throws Exception, RemoteException;
+
+    public void initializeDaCapo(String size) throws Exception, RemoteException;
+
+    public boolean resetDaCapo(String size, int threads) throws Exception, RemoteException;
 }   
 
diff -urNw dt-a/modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/TradeWSServices.java dt-e/modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/TradeWSServices.java
--- modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/TradeWSServices.java	2009-10-13 15:17:41.000000000 +1100
+++ modules/ejb/src/main/java/org/apache/geronimo/samples/daytrader/TradeWSServices.java	2009-10-22 15:20:20.000000000 +1100
@@ -36,7 +36,10 @@
     public org.apache.geronimo.samples.daytrader.AccountProfileDataBean getAccountProfileData(java.lang.String userID) throws java.rmi.RemoteException;
     public org.apache.geronimo.samples.daytrader.AccountProfileDataBean updateAccountProfile(org.apache.geronimo.samples.daytrader.AccountProfileDataBean profileData) throws java.rmi.RemoteException;
     public org.apache.geronimo.samples.daytrader.AccountDataBean login(java.lang.String userID, java.lang.String password) throws java.rmi.RemoteException;
-    public void logout(java.lang.String userID) throws java.rmi.RemoteException;
+    public boolean logout(java.lang.String userID) throws java.rmi.RemoteException;
     public org.apache.geronimo.samples.daytrader.AccountDataBean register(java.lang.String userID, java.lang.String password, java.lang.String fullname, java.lang.String address, java.lang.String email, java.lang.String creditcard, java.math.BigDecimal openBalance) throws java.rmi.RemoteException;
     public org.apache.geronimo.samples.daytrader.RunStatsDataBean resetTrade(boolean deleteAll) throws java.rmi.RemoteException;
+    public boolean runDaCapoTrade(java.lang.String size, int threads, boolean soap) throws java.rmi.RemoteException;
+    public boolean initializeDaCapo(java.lang.String size) throws java.rmi.RemoteException;
+    public boolean resetDaCapo(java.lang.String size, int threads) throws java.rmi.RemoteException;
 }
diff -urNw dt-a/modules/ejb/src/main/resources/DaCapoTable.ddl dt-e/modules/ejb/src/main/resources/DaCapoTable.ddl
--- modules/ejb/src/main/resources/DaCapoTable.ddl	1970-01-01 10:00:00.000000000 +1000
+++ modules/ejb/src/main/resources/DaCapoTable.ddl	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,106 @@
+##    Licensed to the Apache Software Foundation (ASF) under one or more
+##    contributor license agreements.  See the NOTICE file distributed with
+##    this work for additional information regarding copyright ownership.
+##    The ASF licenses this file to You under the Apache License, Version 2.0
+##    (the "License"); you may not use this file except in compliance with
+##    the License.  You may obtain a copy of the License at
+##
+##       http://www.apache.org/licenses/LICENSE-2.0
+##
+##    Unless required by applicable law or agreed to in writing, software
+##    distributed under the License is distributed on an "AS IS" BASIS,
+##    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+##    See the License for the specific language governing permissions and
+##    limitations under the License.
+
+# Each SQL statement in this file should terminate with a semicolon (;)
+# Lines starting with the pound character (#) are considered as comments
+#DROP TABLE HOLDINGEJB;
+#DROP TABLE ACCOUNTPROFILEEJB;
+#DROP TABLE QUOTEEJB;
+#DROP TABLE KEYGENEJB;
+#DROP TABLE ACCOUNTEJB;
+#DROP TABLE ORDEREJB;
+#DROP TABLE OPENJPASEQ;
+
+create table OPENJPASEQ
+(ID SMALLINT NOT NULL PRIMARY KEY,
+SEQUENCE_VALUE BIGINT);
+
+CREATE TABLE HOLDINGEJB
+  (PURCHASEPRICE DECIMAL(14, 2),
+   HOLDINGID INTEGER NOT NULL,
+   QUANTITY DOUBLE NOT NULL,
+   PURCHASEDATE TIMESTAMP,
+   ACCOUNT_ACCOUNTID INTEGER,
+   QUOTE_SYMBOL VARCHAR(250));
+
+ALTER TABLE HOLDINGEJB
+  ADD CONSTRAINT PK_HOLDINGEJB PRIMARY KEY (HOLDINGID);
+
+CREATE TABLE ACCOUNTPROFILEEJB
+  (ADDRESS VARCHAR(250),
+   PASSWD VARCHAR(250),
+   USERID VARCHAR(250) NOT NULL,
+   EMAIL VARCHAR(250),
+   CREDITCARD VARCHAR(250),
+   FULLNAME VARCHAR(250));
+
+ALTER TABLE ACCOUNTPROFILEEJB
+  ADD CONSTRAINT PK_ACCOUNTPROFILE2 PRIMARY KEY (USERID);
+
+CREATE TABLE QUOTEEJB
+  (LOW DECIMAL(14, 2),
+   OPEN1 DECIMAL(14, 2),
+   VOLUME DOUBLE NOT NULL,
+   PRICE DECIMAL(14, 2),
+   HIGH DECIMAL(14, 2),
+   COMPANYNAME VARCHAR(250),
+   SYMBOL VARCHAR(250) NOT NULL,
+   CHANGE1 DOUBLE NOT NULL);
+
+ALTER TABLE QUOTEEJB
+  ADD CONSTRAINT PK_QUOTEEJB PRIMARY KEY (SYMBOL);
+
+CREATE TABLE KEYGENEJB
+  (KEYVAL INTEGER NOT NULL,
+   KEYNAME VARCHAR(250) NOT NULL);
+
+ALTER TABLE KEYGENEJB
+  ADD CONSTRAINT PK_KEYGENEJB PRIMARY KEY (KEYNAME);
+
+CREATE TABLE ACCOUNTEJB
+  (CREATIONDATE TIMESTAMP,
+   OPENBALANCE DECIMAL(14, 2),
+   LOGOUTCOUNT INTEGER NOT NULL,
+   BALANCE DECIMAL(14, 2),
+   ACCOUNTID INTEGER NOT NULL,
+   LASTLOGIN TIMESTAMP,
+   LOGINCOUNT INTEGER NOT NULL,
+   PROFILE_USERID VARCHAR(250));
+
+ALTER TABLE ACCOUNTEJB
+  ADD CONSTRAINT PK_ACCOUNTEJB PRIMARY KEY (ACCOUNTID);
+
+CREATE TABLE ORDEREJB
+  (ORDERFEE DECIMAL(14, 2),
+   COMPLETIONDATE TIMESTAMP,
+   ORDERTYPE VARCHAR(250),
+   ORDERSTATUS VARCHAR(250),
+   PRICE DECIMAL(14, 2),
+   QUANTITY DOUBLE NOT NULL,
+   OPENDATE TIMESTAMP,
+   ORDERID INTEGER NOT NULL,
+   ACCOUNT_ACCOUNTID INTEGER,
+   QUOTE_SYMBOL VARCHAR(250),
+   HOLDING_HOLDINGID INTEGER);
+
+ALTER TABLE ORDEREJB
+  ADD CONSTRAINT PK_ORDEREJB PRIMARY KEY (ORDERID);
+
+CREATE INDEX ACCOUNT_USERID ON ACCOUNTEJB(PROFILE_USERID);
+CREATE INDEX HOLDING_ACCOUNTID ON HOLDINGEJB(ACCOUNT_ACCOUNTID);
+CREATE INDEX ORDER_ACCOUNTID ON ORDEREJB(ACCOUNT_ACCOUNTID);
+CREATE INDEX ORDER_HOLDINGID ON ORDEREJB(HOLDING_HOLDINGID);
+CREATE INDEX CLOSED_ORDERS ON ORDEREJB(ACCOUNT_ACCOUNTID,ORDERSTATUS);
+
diff -urNw dt-a/modules/ejb/src/main/resources/META-INF/persistence.xml dt-e/modules/ejb/src/main/resources/META-INF/persistence.xml
--- modules/ejb/src/main/resources/META-INF/persistence.xml	2009-10-13 15:17:42.000000000 +1100
+++ modules/ejb/src/main/resources/META-INF/persistence.xml	2009-10-22 15:20:20.000000000 +1100
@@ -30,7 +30,7 @@
         <exclude-unlisted-classes>true</exclude-unlisted-classes>
         
         <properties>
-            <property name="openjpa.jdbc.DBDictionary" value="derby" /> 
+            <property name="openjpa.jdbc.DBDictionary" value="h2" /> 
             <property name="openjpa.BrokerImpl" value="non-finalizing" />
             <!-- To enable OpenJPA to generate foreign key constraints, comment out this line -->
             <!-- <property name="openjpa.jdbc.MappingDefaults" value="ForeignKeyDeleteAction=restrict,JoinForeignKeyDeleteAction=restrict"/> -->
diff -urNw dt-a/modules/json-proxy/src/main/java/org/apache/geronimo/samples/daytrader/TradeWSServices.java dt-e/modules/json-proxy/src/main/java/org/apache/geronimo/samples/daytrader/TradeWSServices.java
--- modules/json-proxy/src/main/java/org/apache/geronimo/samples/daytrader/TradeWSServices.java	2009-10-13 15:17:44.000000000 +1100
+++ modules/json-proxy/src/main/java/org/apache/geronimo/samples/daytrader/TradeWSServices.java	2009-10-22 15:20:20.000000000 +1100
@@ -45,7 +45,10 @@
     public org.apache.geronimo.samples.daytrader.AccountProfileDataBean getAccountProfileData(java.lang.String userID) throws java.rmi.RemoteException;
     public org.apache.geronimo.samples.daytrader.AccountProfileDataBean updateAccountProfile(org.apache.geronimo.samples.daytrader.AccountProfileDataBean profileData) throws java.rmi.RemoteException;
     public org.apache.geronimo.samples.daytrader.AccountDataBean login(java.lang.String userID, java.lang.String password) throws java.rmi.RemoteException;
-    public void logout(java.lang.String userID) throws java.rmi.RemoteException;
+    public boolean logout(java.lang.String userID) throws java.rmi.RemoteException;
     public org.apache.geronimo.samples.daytrader.AccountDataBean register(java.lang.String userID, java.lang.String password, java.lang.String fullname, java.lang.String address, java.lang.String email, java.lang.String creditcard, java.math.BigDecimal openBalance) throws java.rmi.RemoteException;
     public org.apache.geronimo.samples.daytrader.RunStatsDataBean resetTrade(boolean deleteAll) throws java.rmi.RemoteException;
+    public boolean runDaCapoTrade(java.lang.String size, int threads, boolean soap) throws java.rmi.RemoteException;
+    public boolean initializeDaCapo(java.lang.String size) throws java.rmi.RemoteException;
+    public boolean resetDaCapo(java.lang.String size, int threads) throws java.rmi.RemoteException;
 }
diff -urNw dt-a/modules/json-proxy/src/main/java/org/apache/geronimo/samples/daytrader/TradeWSServicesProxy.java dt-e/modules/json-proxy/src/main/java/org/apache/geronimo/samples/daytrader/TradeWSServicesProxy.java
--- modules/json-proxy/src/main/java/org/apache/geronimo/samples/daytrader/TradeWSServicesProxy.java	2009-10-13 15:17:44.000000000 +1100
+++ modules/json-proxy/src/main/java/org/apache/geronimo/samples/daytrader/TradeWSServicesProxy.java	2009-10-22 15:20:20.000000000 +1100
@@ -166,10 +166,10 @@
   return __tradeWSServices.login(userID, password);
 }
 
-public void logout(java.lang.String userID) throws java.rmi.RemoteException{
+public boolean logout(java.lang.String userID) throws java.rmi.RemoteException{
   if (__tradeWSServices == null)
     _initTradeWSServicesProxy();
-  __tradeWSServices.logout(userID);
+  return __tradeWSServices.logout(userID);
 }
 
 public org.apache.geronimo.samples.daytrader.AccountDataBean register(java.lang.String userID, java.lang.String password, java.lang.String fullname, java.lang.String address, java.lang.String email, java.lang.String creditcard, java.math.BigDecimal openBalance) throws java.rmi.RemoteException{
@@ -184,5 +184,21 @@
   return __tradeWSServices.resetTrade(deleteAll);
 }
 
+public boolean runDaCapoTrade(java.lang.String size, int threads, boolean soap) throws java.rmi.RemoteException{
+  if (__tradeWSServices == null)
+    _initTradeWSServicesProxy();
+  return __tradeWSServices.runDaCapoTrade(size, threads, soap);
+}
+
+public boolean initializeDaCapo(java.lang.String size) throws java.rmi.RemoteException{
+  if (__tradeWSServices == null)
+    _initTradeWSServicesProxy();
+  return __tradeWSServices.initializeDaCapo(size);
+}
 
+public boolean resetDaCapo(java.lang.String size, int threads) throws java.rmi.RemoteException{
+  if (__tradeWSServices == null)
+    _initTradeWSServicesProxy();
+  return __tradeWSServices.resetDaCapo(size, threads);
+}
 }
diff -urNw dt-a/modules/json-proxy/src/main/webapp/WEB-INF/TradeServicesClient_mapping.xml dt-e/modules/json-proxy/src/main/webapp/WEB-INF/TradeServicesClient_mapping.xml
--- modules/json-proxy/src/main/webapp/WEB-INF/TradeServicesClient_mapping.xml	2009-10-13 15:17:44.000000000 +1100
+++ modules/json-proxy/src/main/webapp/WEB-INF/TradeServicesClient_mapping.xml	2009-10-22 15:20:20.000000000 +1100
@@ -737,8 +737,9 @@
                 </wsdl-message-mapping>
             </method-param-parts-mapping>
             <wsdl-return-value-mapping>
-                <method-return-value>void</method-return-value>
+                <method-return-value>boolean</method-return-value>
                 <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:logoutResponse</wsdl-message>
+		<wsdl-message-part-name>logoutReturn</wsdl-message-part-name>
             </wsdl-return-value-mapping>
         </service-endpoint-method-mapping>
         <service-endpoint-method-mapping>
@@ -947,5 +948,89 @@
                 <wsdl-message-part-name>completeOrderReturn</wsdl-message-part-name>
             </wsdl-return-value-mapping>
         </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>runDaCapoTrade</java-method-name>
+            <wsdl-operation>runDaCapoTrade</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:runDaCapoTradeRequest</wsdl-message>
+                    <wsdl-message-part-name>size</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>1</param-position>
+                <param-type>int</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:runDaCapoTradeRequest</wsdl-message>
+                    <wsdl-message-part-name>threads</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>2</param-position>
+                <param-type>boolean</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:resetDaCapoRequest</wsdl-message>
+                    <wsdl-message-part-name>soap</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>boolean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:runDaCapoTradeResponse</wsdl-message>
+		<wsdl-message-part-name>runDaCapoTradeReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>initializeDaCapo</java-method-name>
+            <wsdl-operation>initializeDaCapo</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:initializeDaCapoRequest</wsdl-message>
+                    <wsdl-message-part-name>size</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>boolean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:initializeDaCapoResponse</wsdl-message>
+		<wsdl-message-part-name>initializeDaCapoReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>resetDaCapo</java-method-name>
+            <wsdl-operation>resetDaCapo</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:resetDaCapoRequest</wsdl-message>
+                    <wsdl-message-part-name>size</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>1</param-position>
+                <param-type>int</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:resetDaCapoRequest</wsdl-message>
+                    <wsdl-message-part-name>threads</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>boolean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:resetDaCapoResponse</wsdl-message>
+		<wsdl-message-part-name>resetDaCapoReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
     </service-endpoint-interface-mapping>
 </java-wsdl-mapping>
diff -urNw dt-a/modules/json-proxy/src/main/webapp/WEB-INF/wsdl/TradeServices.wsdl dt-e/modules/json-proxy/src/main/webapp/WEB-INF/wsdl/TradeServices.wsdl
--- modules/json-proxy/src/main/webapp/WEB-INF/wsdl/TradeServices.wsdl	2009-10-13 15:17:44.000000000 +1100
+++ modules/json-proxy/src/main/webapp/WEB-INF/wsdl/TradeServices.wsdl	2009-10-22 15:20:20.000000000 +1100
@@ -378,7 +378,10 @@
    </element>
    <element name="logoutResponse">
     <complexType>
-     <sequence/>
+      <sequence>
+	<element name="logoutReturn" nillable="true"
+		 type="xsd:boolean" />
+      </sequence>
     </complexType>
    </element>
    <element name="register">
@@ -431,6 +434,51 @@
      </sequence>
     </complexType>
    </element>
+   <element name="runDaCapoTrade">
+    <complexType>
+     <sequence>
+      <element name="size" nillable="true" type="xsd:string"/>
+      <element name="threads" nillable="true" type="xsd:int"/>
+      <element name="soap" nillable="true" type="xsd:boolean"/>
+     </sequence>
+    </complexType>
+   </element>
+   <element name="runDaCapoTradeResponse">
+    <complexType>
+     <sequence>
+      <element name="runDaCapoTradeReturn" nillable="true" type="xsd:boolean"/>
+     </sequence>
+    </complexType>
+   </element>
+   <element name="initializeDaCapo">
+    <complexType>
+     <sequence>
+      <element name="size" nillable="true" type="xsd:string"/>
+     </sequence>
+    </complexType>
+   </element>
+   <element name="initializeDaCapoResponse">
+    <complexType>
+     <sequence>
+      <element name="initializeDaCapoReturn" nillable="true" type="xsd:boolean"/>
+     </sequence>
+    </complexType>
+   </element>
+   <element name="resetDaCapo">
+    <complexType>
+     <sequence>
+      <element name="size" nillable="true" type="xsd:string"/>
+      <element name="threads" nillable="true" type="xsd:int"/>
+     </sequence>
+    </complexType>
+   </element>
+   <element name="resetDaCapoResponse">
+    <complexType>
+     <sequence>
+      <element name="resetDaCapoReturn" nillable="true" type="xsd:boolean"/>
+     </sequence>
+    </complexType>
+   </element>
   </schema>
  </wsdl:types>
 
@@ -536,6 +584,24 @@
 
    </wsdl:message>
 
+   <wsdl:message name="runDaCapoTradeRequest">
+
+      <wsdl:part element="impl:runDaCapoTrade" name="parameters"/>
+
+   </wsdl:message>
+
+   <wsdl:message name="initializeDaCapoRequest">
+
+      <wsdl:part element="impl:initializeDaCapo" name="parameters"/>
+
+   </wsdl:message>
+
+   <wsdl:message name="resetDaCapoRequest">
+
+      <wsdl:part element="impl:resetDaCapo" name="parameters"/>
+
+   </wsdl:message>
+
    <wsdl:message name="getAllQuotesResponse">
 
       <wsdl:part element="impl:getAllQuotesResponse" name="parameters"/>
@@ -668,6 +734,24 @@
 
    </wsdl:message>
 
+   <wsdl:message name="runDaCapoTradeResponse">
+
+      <wsdl:part element="impl:runDaCapoTradeResponse" name="parameters"/>
+
+   </wsdl:message>
+
+   <wsdl:message name="initializeDaCapoResponse">
+
+      <wsdl:part element="impl:initializeDaCapoResponse" name="parameters"/>
+
+   </wsdl:message>
+
+   <wsdl:message name="resetDaCapoResponse">
+
+      <wsdl:part element="impl:resetDaCapoResponse" name="parameters"/>
+
+   </wsdl:message>
+
    <wsdl:message name="getAllQuotesRequest">
 
       <wsdl:part element="impl:getAllQuotes" name="parameters"/>
@@ -876,6 +960,30 @@
 
       </wsdl:operation>
 
+      <wsdl:operation name="runDaCapoTrade">
+
+         <wsdl:input message="impl:runDaCapoTradeRequest" name="runDaCapoTradeRequest"/>
+
+         <wsdl:output message="impl:runDaCapoTradeResponse" name="runDaCapoTradeResponse"/>
+
+      </wsdl:operation>
+
+      <wsdl:operation name="initializeDaCapo">
+
+         <wsdl:input message="impl:initializeDaCapoRequest" name="initializeDaCapoRequest"/>
+
+         <wsdl:output message="impl:initializeDaCapoResponse" name="initializeDaCapoResponse"/>
+
+      </wsdl:operation>
+
+      <wsdl:operation name="resetDaCapo">
+
+         <wsdl:input message="impl:resetDaCapoRequest" name="resetDaCapoRequest"/>
+
+         <wsdl:output message="impl:resetDaCapoResponse" name="resetDaCapoResponse"/>
+
+      </wsdl:operation>
+
    </wsdl:portType>
 
    <wsdl:binding name="TradeWSServicesSoapBinding" type="impl:TradeWSServices">
@@ -1278,6 +1386,59 @@
 
       </wsdl:operation>
 
+      <wsdl:operation name="runDaCapoTrade">
+
+         <wsdlsoap:operation soapAction=""/>
+
+         <wsdl:input name="runDaCapoTradeRequest">
+
+            <wsdlsoap:body use="literal"/>
+
+         </wsdl:input>
+
+         <wsdl:output name="runDaCapoTradeResponse">
+
+            <wsdlsoap:body use="literal"/>
+
+         </wsdl:output>
+
+      </wsdl:operation>
+
+      <wsdl:operation name="initializeDaCapo">
+
+         <wsdlsoap:operation soapAction=""/>
+
+         <wsdl:input name="initializeDaCapoRequest">
+
+            <wsdlsoap:body use="literal"/>
+
+         </wsdl:input>
+
+         <wsdl:output name="initializeDaCapoResponse">
+
+            <wsdlsoap:body use="literal"/>
+
+         </wsdl:output>
+
+      </wsdl:operation>
+
+      <wsdl:operation name="resetDaCapo">
+
+         <wsdlsoap:operation soapAction=""/>
+
+         <wsdl:input name="resetDaCapoRequest">
+
+            <wsdlsoap:body use="literal"/>
+
+         </wsdl:input>
+
+         <wsdl:output name="resetDaCapoResponse">
+
+            <wsdlsoap:body use="literal"/>
+
+         </wsdl:output>
+
+      </wsdl:operation>
    </wsdl:binding>
 
    <wsdl:service name="Trade">
diff -urNw dt-a/modules/web/pom.xml dt-e/modules/web/pom.xml
--- modules/web/pom.xml	2009-10-13 15:17:48.000000000 +1100
+++ modules/web/pom.xml	2009-10-22 15:20:20.000000000 +1100
@@ -122,7 +122,7 @@
                     </filters>
                     <archive>
                         <manifestEntries>
-                            <Class-Path>dt-ejb.jar streamer.jar wsappclient.jar</Class-Path>
+                            <Class-Path>dt-ejb.jar streamer.jar wsappclient.jar dacapo.jar</Class-Path>
                         </manifestEntries>
                     </archive>
                     <resources>
diff -urNw dt-a/modules/web/src/main/webapp/WEB-INF/TradeServicesClient_mapping.xml dt-e/modules/web/src/main/webapp/WEB-INF/TradeServicesClient_mapping.xml
--- modules/web/src/main/webapp/WEB-INF/TradeServicesClient_mapping.xml	2009-10-13 15:17:48.000000000 +1100
+++ modules/web/src/main/webapp/WEB-INF/TradeServicesClient_mapping.xml	2009-10-22 15:20:20.000000000 +1100
@@ -737,8 +737,9 @@
                 </wsdl-message-mapping>
             </method-param-parts-mapping>
             <wsdl-return-value-mapping>
-                <method-return-value>void</method-return-value>
+                <method-return-value>boolean</method-return-value>
                 <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:logoutResponse</wsdl-message>
+		<wsdl-message-part-name>logoutReturn</wsdl-message-part-name>
             </wsdl-return-value-mapping>
         </service-endpoint-method-mapping>
         <service-endpoint-method-mapping>
@@ -761,6 +762,90 @@
             </wsdl-return-value-mapping>
         </service-endpoint-method-mapping>
         <service-endpoint-method-mapping>
+            <java-method-name>runDaCapoTrade</java-method-name>
+            <wsdl-operation>runDaCapoTrade</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:runDaCapoTradeRequest</wsdl-message>
+                    <wsdl-message-part-name>size</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>1</param-position>
+                <param-type>int</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:runDaCapoTradeRequest</wsdl-message>
+                    <wsdl-message-part-name>threads</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>2</param-position>
+                <param-type>boolean</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:runDaCapoTradeRequest</wsdl-message>
+                    <wsdl-message-part-name>soap</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>boolean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:runDaCapoTradeResponse</wsdl-message>
+		<wsdl-message-part-name>runDaCapoTradeReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>initializeDaCapo</java-method-name>
+            <wsdl-operation>initializeDaCapo</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:initializeDaCapoRequest</wsdl-message>
+                    <wsdl-message-part-name>size</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>boolean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:initializeDaCapoResponse</wsdl-message>
+		<wsdl-message-part-name>initializeDaCapoReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>resetDaCapo</java-method-name>
+            <wsdl-operation>resetDaCapo</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:resetDaCapoRequest</wsdl-message>
+                    <wsdl-message-part-name>size</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>1</param-position>
+                <param-type>int</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:resetDaCapoRequest</wsdl-message>
+                    <wsdl-message-part-name>threads</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>boolean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:resetDaCapoResponse</wsdl-message>
+		<wsdl-message-part-name>resetDaCapoReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
             <java-method-name>createQuote</java-method-name>
             <wsdl-operation>createQuote</wsdl-operation>
             <wrapped-element/>
diff -urNw dt-a/modules/web/src/main/webapp/WEB-INF/TradeServices_mapping.xml dt-e/modules/web/src/main/webapp/WEB-INF/TradeServices_mapping.xml
--- modules/web/src/main/webapp/WEB-INF/TradeServices_mapping.xml	2009-10-13 15:17:48.000000000 +1100
+++ modules/web/src/main/webapp/WEB-INF/TradeServices_mapping.xml	2009-10-22 15:20:20.000000000 +1100
@@ -737,8 +737,9 @@
                 </wsdl-message-mapping>
             </method-param-parts-mapping>
             <wsdl-return-value-mapping>
-                <method-return-value>void</method-return-value>
+                <method-return-value>boolean</method-return-value>
                 <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:logoutResponse</wsdl-message>
+		<wsdl-message-part-name>logoutReturn</wsdl-message-part-name>
             </wsdl-return-value-mapping>
         </service-endpoint-method-mapping>
         <service-endpoint-method-mapping>
@@ -761,6 +762,90 @@
             </wsdl-return-value-mapping>
         </service-endpoint-method-mapping>
         <service-endpoint-method-mapping>
+            <java-method-name>runDaCapoTrade</java-method-name>
+            <wsdl-operation>runDaCapoTrade</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:runDaCapoTradeRequest</wsdl-message>
+                    <wsdl-message-part-name>size</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>1</param-position>
+                <param-type>int</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:runDaCapoTradeRequest</wsdl-message>
+                    <wsdl-message-part-name>threads</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>2</param-position>
+                <param-type>boolean</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:runDaCapoTradeRequest</wsdl-message>
+                    <wsdl-message-part-name>soap</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>boolean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:runDaCapoTradeResponse</wsdl-message>
+		<wsdl-message-part-name>runDaCapoTradeReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>initializeDaCapo</java-method-name>
+            <wsdl-operation>initializeDaCapo</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:initializeDaCapoRequest</wsdl-message>
+                    <wsdl-message-part-name>size</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>boolean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:initializeDaCapoResponse</wsdl-message>
+		<wsdl-message-part-name>initializeDaCapoReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>resetDaCapo</java-method-name>
+            <wsdl-operation>resetDaCapo</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:resetDaCapoRequest</wsdl-message>
+                    <wsdl-message-part-name>size</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>1</param-position>
+                <param-type>int</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:resetDaCapoRequest</wsdl-message>
+                    <wsdl-message-part-name>threads</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>boolean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:resetDaCapoResponse</wsdl-message>
+		<wsdl-message-part-name>resetDaCapoReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
             <java-method-name>createQuote</java-method-name>
             <wsdl-operation>createQuote</wsdl-operation>
             <wrapped-element/>
diff -urNw dt-a/modules/web/src/main/webapp/WEB-INF/wsdl/TradeServices.wsdl dt-e/modules/web/src/main/webapp/WEB-INF/wsdl/TradeServices.wsdl
--- modules/web/src/main/webapp/WEB-INF/wsdl/TradeServices.wsdl	2009-10-13 15:17:48.000000000 +1100
+++ modules/web/src/main/webapp/WEB-INF/wsdl/TradeServices.wsdl	2009-10-22 15:20:20.000000000 +1100
@@ -390,7 +390,10 @@
    </element>
    <element name="logoutResponse">
     <complexType>
-     <sequence/>
+      <sequence>
+	<element name="logoutReturn" nillable="true"
+		 type="xsd:boolean" />
+      </sequence>
     </complexType>
    </element>
    <element name="register">
@@ -443,6 +446,54 @@
      </sequence>
     </complexType>
    </element>
+   <element name="runDaCapoTrade">
+    <complexType>
+     <sequence>
+      <element name="size" nillable="true" type="xsd:string"/>
+      <element name="threads" nillable="true" type="xsd:int"/>
+      <element name="soap" nillable="true" type="xsd:boolean"/>
+     </sequence>
+    </complexType>
+   </element>
+   <element name="runDaCapoTradeResponse">
+    <complexType>
+       <sequence>
+	 <element name="runDaCapoTradeReturn" nillable="true"
+		  type="xsd:boolean" />
+       </sequence>
+    </complexType>
+   </element>
+   <element name="initializeDaCapo">
+    <complexType>
+     <sequence>
+      <element name="size" nillable="true" type="xsd:string"/>
+     </sequence>
+    </complexType>
+   </element>
+   <element name="initializeDaCapoResponse">
+    <complexType>
+       <sequence>
+	 <element name="initializeDaCapoReturn" nillable="true"
+		  type="xsd:boolean" />
+       </sequence>
+    </complexType>
+   </element>
+   <element name="resetDaCapo">
+    <complexType>
+     <sequence>
+      <element name="size" nillable="true" type="xsd:string"/>
+      <element name="threads" nillable="true" type="xsd:int"/>
+     </sequence>
+    </complexType>
+   </element>
+   <element name="resetDaCapoResponse">
+     <complexType>
+       <sequence>
+	 <element name="resetDaCapoReturn" nillable="true"
+		  type="xsd:boolean" />
+       </sequence>
+     </complexType>
+   </element>
   </schema>
  </wsdl:types>
 
@@ -548,6 +599,24 @@
 
    </wsdl:message>
 
+   <wsdl:message name="runDaCapoTradeRequest">
+
+      <wsdl:part element="impl:runDaCapoTrade" name="parameters"/>
+
+   </wsdl:message>
+
+   <wsdl:message name="initializeDaCapoRequest">
+
+      <wsdl:part element="impl:initializeDaCapo" name="parameters"/>
+
+   </wsdl:message>
+
+   <wsdl:message name="resetDaCapoRequest">
+
+      <wsdl:part element="impl:resetDaCapo" name="parameters"/>
+
+   </wsdl:message>
+
    <wsdl:message name="getAllQuotesResponse">
 
       <wsdl:part element="impl:getAllQuotesResponse" name="parameters"/>
@@ -680,6 +749,24 @@
 
    </wsdl:message>
 
+   <wsdl:message name="runDaCapoTradeResponse">
+
+      <wsdl:part element="impl:runDaCapoTradeResponse" name="parameters"/>
+
+   </wsdl:message>
+
+   <wsdl:message name="initializeDaCapoResponse">
+
+      <wsdl:part element="impl:initializeDaCapoResponse" name="parameters"/>
+
+   </wsdl:message>
+
+   <wsdl:message name="resetDaCapoResponse">
+
+     <wsdl:part element="impl:resetDaCapoResponse" name="parameters" />
+     
+   </wsdl:message>
+
    <wsdl:message name="getAllQuotesRequest">
 
       <wsdl:part element="impl:getAllQuotes" name="parameters"/>
@@ -888,6 +975,29 @@
 
       </wsdl:operation>
 
+      <wsdl:operation name="runDaCapoTrade">
+
+         <wsdl:input message="impl:runDaCapoTradeRequest" name="runDaCapoTradeRequest"/>
+
+         <wsdl:output message="impl:runDaCapoTradeResponse" name="runDaCapoTradeResponse"/>
+
+      </wsdl:operation>
+
+      <wsdl:operation name="initializeDaCapo">
+
+         <wsdl:input message="impl:initializeDaCapoRequest" name="initializeDaCapoRequest"/>
+
+         <wsdl:output message="impl:initializeDaCapoResponse" name="initializeDaCapoResponse"/>
+
+      </wsdl:operation>
+
+      <wsdl:operation name="resetDaCapo">
+	
+	<wsdl:input message="impl:resetDaCapoRequest" name="resetDaCapoRequest" />
+
+	<wsdl:output message="impl:resetDaCapoResponse"	name="resetDaCapoResponse" />
+
+      </wsdl:operation>
    </wsdl:portType>
 
    <wsdl:binding name="TradeWSServicesSoapBinding" type="impl:TradeWSServices">
@@ -1290,6 +1400,59 @@
 
       </wsdl:operation>
 
+      <wsdl:operation name="runDaCapoTrade">
+
+         <wsdlsoap:operation soapAction=""/>
+
+         <wsdl:input name="runDaCapoTradeRequest">
+
+            <wsdlsoap:body use="literal"/>
+
+         </wsdl:input>
+
+         <wsdl:output name="runDaCapoTradeResponse">
+
+            <wsdlsoap:body use="literal"/>
+
+         </wsdl:output>
+
+      </wsdl:operation>
+
+      <wsdl:operation name="initializeDaCapo">
+
+         <wsdlsoap:operation soapAction=""/>
+
+         <wsdl:input name="initializeDaCapoRequest">
+
+            <wsdlsoap:body use="literal"/>
+
+         </wsdl:input>
+
+         <wsdl:output name="initializeDaCapoResponse">
+
+            <wsdlsoap:body use="literal"/>
+
+         </wsdl:output>
+
+      </wsdl:operation>
+
+      <wsdl:operation name="resetDaCapo">
+
+	<wsdlsoap:operation soapAction="" />
+
+	<wsdl:input name="resetDaCapoRequest">
+	  
+	  <wsdlsoap:body use="literal" />
+	  
+	</wsdl:input>
+	
+	<wsdl:output name="resetDaCapoResponse">
+	  
+	  <wsdlsoap:body use="literal" />
+	  
+	</wsdl:output>
+	
+      </wsdl:operation>
    </wsdl:binding>
 
    <wsdl:service name="Trade">
diff -urNw dt-a/modules/wsappclient/src/main/java/org/apache/geronimo/samples/daytrader/client/ws/TradeWSServices.java dt-e/modules/wsappclient/src/main/java/org/apache/geronimo/samples/daytrader/client/ws/TradeWSServices.java
--- modules/wsappclient/src/main/java/org/apache/geronimo/samples/daytrader/client/ws/TradeWSServices.java	2009-10-13 15:17:45.000000000 +1100
+++ modules/wsappclient/src/main/java/org/apache/geronimo/samples/daytrader/client/ws/TradeWSServices.java	2009-10-22 15:20:20.000000000 +1100
@@ -36,7 +36,10 @@
     public org.apache.geronimo.samples.daytrader.client.ws.AccountProfileDataBean getAccountProfileData(java.lang.String userID) throws java.rmi.RemoteException;
     public org.apache.geronimo.samples.daytrader.client.ws.AccountProfileDataBean updateAccountProfile(org.apache.geronimo.samples.daytrader.client.ws.AccountProfileDataBean profileData) throws java.rmi.RemoteException;
     public org.apache.geronimo.samples.daytrader.client.ws.AccountDataBean login(java.lang.String userID, java.lang.String password) throws java.rmi.RemoteException;
-    public void logout(java.lang.String userID) throws java.rmi.RemoteException;
+    public boolean logout(java.lang.String userID) throws java.rmi.RemoteException;
     public org.apache.geronimo.samples.daytrader.client.ws.AccountDataBean register(java.lang.String userID, java.lang.String password, java.lang.String fullname, java.lang.String address, java.lang.String email, java.lang.String creditcard, java.math.BigDecimal openBalance) throws java.rmi.RemoteException;
     public org.apache.geronimo.samples.daytrader.client.ws.RunStatsDataBean resetTrade(boolean deleteAll) throws java.rmi.RemoteException;
+    public boolean runDaCapoTrade(java.lang.String size, int threads, boolean soap) throws java.rmi.RemoteException;
+    public boolean initializeDaCapo(java.lang.String size) throws java.rmi.RemoteException;
+    public boolean resetDaCapo(java.lang.String size, int threads) throws java.rmi.RemoteException;
 }
diff -urNw dt-a/modules/wsappclient/src/main/resources/META-INF/TradeServices_mapping.xml dt-e/modules/wsappclient/src/main/resources/META-INF/TradeServices_mapping.xml
--- modules/wsappclient/src/main/resources/META-INF/TradeServices_mapping.xml	2009-10-13 15:17:45.000000000 +1100
+++ modules/wsappclient/src/main/resources/META-INF/TradeServices_mapping.xml	2009-10-22 15:20:20.000000000 +1100
@@ -737,8 +737,9 @@
                 </wsdl-message-mapping>
             </method-param-parts-mapping>
             <wsdl-return-value-mapping>
-                <method-return-value>void</method-return-value>
+                <method-return-value>boolean</method-return-value>
                 <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:logoutResponse</wsdl-message>
+		<wsdl-message-part-name>logoutReturn</wsdl-message-part-name>
             </wsdl-return-value-mapping>
         </service-endpoint-method-mapping>
         <service-endpoint-method-mapping>
@@ -947,5 +948,89 @@
                 <wsdl-message-part-name>completeOrderReturn</wsdl-message-part-name>
             </wsdl-return-value-mapping>
         </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>runDaCapoTrade</java-method-name>
+            <wsdl-operation>runDaCapoTrade</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:runDaCapoTradeRequest</wsdl-message>
+                    <wsdl-message-part-name>size</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>1</param-position>
+                <param-type>int</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:runDaCapoTradeRequest</wsdl-message>
+                    <wsdl-message-part-name>threads</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>2</param-position>
+                <param-type>boolean</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:runDaCapoTradeRequest</wsdl-message>
+                    <wsdl-message-part-name>soap</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+             <wsdl-return-value-mapping>
+                <method-return-value>boolean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:runDaCapoTradeResponse</wsdl-message>
+		<wsdl-message-part-name>runDaCapoTradeReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>initializeDaCapo</java-method-name>
+            <wsdl-operation>initializeDaCapo</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:initializeDaCapoRequest</wsdl-message>
+                    <wsdl-message-part-name>size</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>boolean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:initializeDaCapoResponse</wsdl-message>
+		<wsdl-message-part-name>initializeDaCapoReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
+        <service-endpoint-method-mapping>
+            <java-method-name>resetDaCapo</java-method-name>
+            <wsdl-operation>resetDaCapo</wsdl-operation>
+            <wrapped-element/>
+            <method-param-parts-mapping>
+                <param-position>0</param-position>
+                <param-type>java.lang.String</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:resetDaCapoRequest</wsdl-message>
+                    <wsdl-message-part-name>size</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <method-param-parts-mapping>
+                <param-position>1</param-position>
+                <param-type>int</param-type>
+                <wsdl-message-mapping>
+                    <wsdl-message xmlns:mppm="http://daytrader.samples.geronimo.apache.org">mppm:resetDaCapoRequest</wsdl-message>
+                    <wsdl-message-part-name>threads</wsdl-message-part-name>
+                    <parameter-mode>IN</parameter-mode>
+                </wsdl-message-mapping>
+            </method-param-parts-mapping>
+            <wsdl-return-value-mapping>
+                <method-return-value>boolean</method-return-value>
+                <wsdl-message xmlns:wrvm="http://daytrader.samples.geronimo.apache.org">wrvm:resetDaCapoResponse</wsdl-message>
+		<wsdl-message-part-name>resetDaCapoReturn</wsdl-message-part-name>
+            </wsdl-return-value-mapping>
+        </service-endpoint-method-mapping>
     </service-endpoint-interface-mapping>
 </java-wsdl-mapping>
diff -urNw dt-a/modules/wsappclient/src/main/resources/META-INF/wsdl/TradeServices.wsdl dt-e/modules/wsappclient/src/main/resources/META-INF/wsdl/TradeServices.wsdl
--- modules/wsappclient/src/main/resources/META-INF/wsdl/TradeServices.wsdl	2009-10-13 15:17:45.000000000 +1100
+++ modules/wsappclient/src/main/resources/META-INF/wsdl/TradeServices.wsdl	2009-10-22 15:20:20.000000000 +1100
@@ -472,7 +472,10 @@
 			</element>
 			<element name="logoutResponse">
 				<complexType>
-					<sequence />
+				  <sequence>
+				    <element name="logoutReturn" nillable="true"
+					     type="xsd:boolean" />
+				  </sequence>
 				</complexType>
 			</element>
 			<element name="register">
@@ -534,6 +537,61 @@
 					</sequence>
 				</complexType>
 			</element>
+			<element name="runDaCapoTrade">
+				<complexType>
+					<sequence>
+						<element name="size" nillable="true"
+							type="xsd:string" />
+						<element name="threads" nillable="true"
+							type="xsd:int" />
+						<element name="soap" nillable="true"
+							type="xsd:boolean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="runDaCapoTradeResponse">
+				<complexType>
+					<sequence>
+						<element name="runDaCapoTradeReturn" nillable="true"
+							type="xsd:boolean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="initializeDaCapo">
+				<complexType>
+					<sequence>
+						<element name="size" nillable="true"
+							type="xsd:string" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="initializeDaCapoResponse">
+				<complexType>
+					<sequence>
+						<element name="initializeDaCapoReturn" nillable="true"
+							type="xsd:boolean" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="resetDaCapo">
+				<complexType>
+					<sequence>
+						<element name="size" nillable="true"
+							type="xsd:string" />
+						<element name="threads" nillable="true"
+							type="xsd:int" />
+					</sequence>
+				</complexType>
+			</element>
+			<element name="resetDaCapoResponse">
+				<complexType>
+					<sequence>
+						<element name="resetDaCapoReturn" nillable="true"
+							type="xsd:boolean" />
+					</sequence>
+				</complexType>
+			</element>
+			
 		</schema>
 	</wsdl:types>
 
@@ -642,6 +700,24 @@
 
 	</wsdl:message>
 
+	<wsdl:message name="runDaCapoTradeRequest">
+
+		<wsdl:part element="impl:runDaCapoTrade" name="parameters" />
+
+	</wsdl:message>
+	
+	<wsdl:message name="initializeDaCapoRequest">
+
+		<wsdl:part element="impl:initializeDaCapo" name="parameters" />
+
+	</wsdl:message>
+	
+	<wsdl:message name="resetDaCapoRequest">
+
+		<wsdl:part element="impl:resetDaCapo" name="parameters" />
+
+	</wsdl:message>
+
 	<wsdl:message name="getAllQuotesResponse">
 
 		<wsdl:part element="impl:getAllQuotesResponse"
@@ -781,6 +857,24 @@
 
 	</wsdl:message>
 
+	<wsdl:message name="runDaCapoTradeResponse">
+
+		<wsdl:part element="impl:runDaCapoTradeResponse" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="initializeDaCapoResponse">
+
+		<wsdl:part element="impl:initializeDaCapoResponse" name="parameters" />
+
+	</wsdl:message>
+
+	<wsdl:message name="resetDaCapoResponse">
+
+		<wsdl:part element="impl:resetDaCapoResponse" name="parameters" />
+
+	</wsdl:message>
+
 	<wsdl:message name="getAllQuotesRequest">
 
 		<wsdl:part element="impl:getAllQuotes" name="parameters" />
@@ -1031,6 +1125,36 @@
 
 		</wsdl:operation>
 
+		<wsdl:operation name="runDaCapoTrade">
+
+			<wsdl:input message="impl:runDaCapoTradeRequest"
+				name="runDaCapoTradeRequest" />
+
+			<wsdl:output message="impl:runDaCapoTradeResponse"
+				name="runDaCapoTradeResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="initializeDaCapo">
+
+			<wsdl:input message="impl:initializeDaCapoRequest"
+				name="initializeDaCapoRequest" />
+
+			<wsdl:output message="impl:initializeDaCapoResponse"
+				name="initializeDaCapoResponse" />
+
+		</wsdl:operation>
+
+		<wsdl:operation name="resetDaCapo">
+
+			<wsdl:input message="impl:resetDaCapoRequest"
+				name="resetDaCapoRequest" />
+
+			<wsdl:output message="impl:resetDaCapoResponse"
+				name="resetDaCapoResponse" />
+
+		</wsdl:operation>
+		
 	</wsdl:portType>
 
 	<wsdl:binding name="TradeWSServicesSoapBinding"
@@ -1435,6 +1559,59 @@
 
 		</wsdl:operation>
 
+		<wsdl:operation name="runDaCapoTrade">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="runDaCapoTradeRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="runDaCapoTradeResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="initializeDaCapo">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="initializeDaCapoRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="initializeDaCapoResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
+
+		<wsdl:operation name="resetDaCapo">
+
+			<wsdlsoap:operation soapAction="" />
+
+			<wsdl:input name="resetDaCapoRequest">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:input>
+
+			<wsdl:output name="resetDaCapoResponse">
+
+				<wsdlsoap:body use="literal" />
+
+			</wsdl:output>
+
+		</wsdl:operation>
 	</wsdl:binding>
 
 	<wsdl:service name="Trade">
diff -urNw dt-a/plans/dacapo/geronimo-plugin.xml dt-e/plans/dacapo/geronimo-plugin.xml
--- plans/dacapo/geronimo-plugin.xml	1970-01-01 10:00:00.000000000 +1000
+++ plans/dacapo/geronimo-plugin.xml	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,53 @@
+<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
+<!--
+    Licensed to the Apache Software Foundation (ASF) under one or more
+    contributor license agreements.  See the NOTICE file distributed with
+    this work for additional information regarding copyright ownership.
+    The ASF licenses this file to You under the Apache License, Version 2.0
+    (the "License"); you may not use this file except in compliance with
+    the License.  You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+-->
+
+<!-- $Rev: 722654 $ $Date: 2008-12-03 09:46:33 +1100 (Wed, 03 Dec 2008) $ -->
+
+<geronimo-plugin xmlns="http://geronimo.apache.org/xml/ns/plugins-1.3" xmlns:ns2="http://geronimo.apache.org/xml/ns/attributes-1.2">
+    <name>Daytrader :: DaCapo Workload</name>
+    <category>Daytrader</category>
+    <description>Java EE 5.0 Performance Benchmark Sample Application :: DaCapo-Daytrader-WS-Client</description>
+    <url>http://www.apache.org/</url>
+    <author>Apache Software Foundation</author>
+    <license osi-approved="true">The Apache Software License, Version 2.0</license>
+    <plugin-artifact>
+        <module-id>
+            <groupId>org.apache.geronimo.daytrader</groupId>
+            <artifactId>daytrader-dacapo</artifactId>
+            <version>2.2-SNAPSHOT</version>
+            <type>car</type>
+        </module-id>
+        <geronimo-version>2.1.4</geronimo-version>
+        <jvm-version>1.5</jvm-version>
+        <jvm-version>1.6</jvm-version>
+        <dependency start="true">
+            <groupId>org.apache.geronimo.configs</groupId>
+            <artifactId>client</artifactId>
+            <version>2.2-SNAPSHOT</version>
+            <type>car</type>
+        </dependency>
+        <dependency start="true">
+            <groupId>org.apache.geronimo.configs</groupId>
+            <artifactId>axis</artifactId>
+            <version>2.2-SNAPSHOT</version>
+            <type>car</type>
+        </dependency>
+
+        <config-xml-content load="false"/>
+    </plugin-artifact>
+</geronimo-plugin>
diff -urNw dt-a/plans/dayTrader-derby-plan.xml dt-e/plans/dayTrader-derby-plan.xml
--- plans/dayTrader-derby-plan.xml	2009-10-13 15:17:48.000000000 +1100
+++ plans/dayTrader-derby-plan.xml	2009-10-22 15:20:20.000000000 +1100
@@ -212,6 +212,28 @@
         </application-client>
     </module>
 
+    <module>
+        <java>dacapo.jar</java>
+        <application-client xmlns="http://geronimo.apache.org/xml/ns/j2ee/application-client-2.0">
+            <client-environment xmlns="http://geronimo.apache.org/xml/ns/deployment-1.2">
+                <moduleId>
+                    <groupId>org.apache.geronimo.daytrader</groupId>
+                    <artifactId>daytrader-dacapo</artifactId>
+                    <version>2.2-SNAPSHOT</version>
+                    <type>car</type>
+                </moduleId>
+            </client-environment>
+            <server-environment xmlns="http://geronimo.apache.org/xml/ns/deployment-1.2">
+                <moduleId>
+                    <groupId>org.apache.geronimo.daytrader</groupId>
+                    <artifactId>daytrader-dacapo-server</artifactId>
+                    <version>2.2-SNAPSHOT</version>
+                    <type>car</type>
+                </moduleId>
+            </server-environment>
+        </application-client>
+    </module>
+
     <ext-module>
         <connector>TradeDataSource</connector>
         <external-path xmlns:dep="http://geronimo.apache.org/xml/ns/deployment-1.2">
diff -urNw dt-a/plans/streamerclient/geronimo-plugin.xml dt-e/plans/streamerclient/geronimo-plugin.xml
--- plans/streamerclient/geronimo-plugin.xml	2009-10-13 15:17:48.000000000 +1100
+++ plans/streamerclient/geronimo-plugin.xml	2009-10-22 15:20:20.000000000 +1100
@@ -32,7 +32,7 @@
             <version>2.2-SNAPSHOT</version>
             <type>car</type>
         </module-id>
-        <geronimo-version>2.2-SNAPSHOT</geronimo-version>
+        <geronimo-version>2.1.4</geronimo-version>
         <jvm-version>1.5</jvm-version>
         <jvm-version>1.6</jvm-version>
         <dependency start="false">
diff -urNw dt-a/plans/wsclient/geronimo-plugin.xml dt-e/plans/wsclient/geronimo-plugin.xml
--- plans/wsclient/geronimo-plugin.xml	2009-10-13 15:17:48.000000000 +1100
+++ plans/wsclient/geronimo-plugin.xml	2009-10-22 15:20:20.000000000 +1100
@@ -32,7 +32,7 @@
             <version>2.2-SNAPSHOT</version>
             <type>car</type>
         </module-id>
-        <geronimo-version>2.2-SNAPSHOT</geronimo-version>
+        <geronimo-version>2.1.4</geronimo-version>
         <jvm-version>1.5</jvm-version>
         <jvm-version>1.6</jvm-version>
         <dependency start="true">
diff -urNw dt-a/pom.xml dt-e/pom.xml
--- pom.xml	2009-10-13 15:17:48.000000000 +1100
+++ pom.xml	2009-10-22 15:20:20.000000000 +1100
@@ -34,7 +34,7 @@
 
     <properties>
         <!-- This property is required by the car:package mojo -->
-        <geronimoVersion>2.2-SNAPSHOT</geronimoVersion>
+        <geronimoVersion>2.1.4</geronimoVersion>
 
         <!-- set siteId to artifactId for any "top level" project rooting a website -->
         <siteId>daytrader</siteId>
@@ -146,18 +146,21 @@
         <module>modules/web</module>
         <module>modules/streamer</module>
         <module>modules/wsappclient</module>
+        <module>modules/dacapo</module>
         <module>modules/ear</module>
         <module>modules/json-proxy</module>
         <module>modules/dojo-ui-web</module>
         <module>modules/dojo-ui-ear</module>
         <!-- c-m-p built plugins -->
-        <module>daytrader-derby-datasource</module>
+        <!--<module>daytrader-derby-datasource</module>-->
+        <module>tranql-connector-h2</module>
+        <module>daytrader-h2-datasource</module>
         <!-- see profiles -->
         <!--<module>daytrader-db2-datasource</module>-->
         <!--<module>daytrader-oracle-datasource</module>-->
         <module>daytrader-jms</module>
         <module>daytrader-jetty</module>
-        <module>daytrader-tomcat</module>
+        <!--<module>daytrader-tomcat</module>-->
     </modules>
 
     <dependencyManagement>
diff -urNw dt-a/tranql-connector-h2/pom.xml dt-e/tranql-connector-h2/pom.xml
--- tranql-connector-h2/pom.xml	1970-01-01 10:00:00.000000000 +1000
+++ tranql-connector-h2/pom.xml	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,80 @@
+<!--
+  ~ Copyright (c) 2004 - 2007, Tranql project contributors
+  ~
+  ~ Licensed under the Apache License, Version 2.0 (the "License");
+  ~ you may not use this file except in compliance with the License.
+  ~ You may obtain a copy of the License at
+  ~
+  ~     http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing, software
+  ~ distributed under the License is distributed on an "AS IS" BASIS,
+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  ~ See the License for the specific language governing permissions and
+  ~ limitations under the License.
+  ~
+  -->
+
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+    
+    <modelVersion>4.0.0</modelVersion>
+
+    <parent>
+        <groupId>org.tranql</groupId>
+        <artifactId>tranql-parent</artifactId>
+        <version>1.2</version>
+    </parent>
+    
+    <artifactId>tranql-connector-h2</artifactId>
+    <name>TranQL Vendors :: H2</name>
+    <packaging>pom</packaging>
+
+    <version>1.4</version>
+    
+    <properties>
+        <h2.version>1.2.121</h2.version>
+        <connectorSpec.version>1.1</connectorSpec.version>
+        <jtaSpec.version>1.0</jtaSpec.version>
+        <tranqlConnector.version>1.4</tranqlConnector.version>
+    </properties>
+    
+    <dependencyManagement>
+        <dependencies>
+            <dependency>
+                <groupId>com.h2database</groupId>
+                <artifactId>h2</artifactId>
+                <version>${h2.version}</version>
+            </dependency>
+            
+            <dependency>
+                <groupId>org.apache.geronimo.specs</groupId>
+                <artifactId>geronimo-j2ee-connector_1.5_spec</artifactId>
+                <version>${connectorSpec.version}</version>
+                <scope>provided</scope>
+            </dependency>
+
+            <dependency>
+                <groupId>org.apache.geronimo.specs</groupId>
+                <artifactId>geronimo-jta_1.1_spec</artifactId>
+                <version>${jtaSpec.version}</version>
+                <scope>provided</scope>
+            </dependency>
+
+        </dependencies>
+    </dependencyManagement>
+    
+    <dependencies>
+        <dependency>
+            <groupId>${pom.groupId}</groupId>
+            <artifactId>tranql-connector</artifactId>
+            <version>${tranqlConnector.version}</version>
+        </dependency>
+    </dependencies>
+    
+    <modules>
+        <module>tranql-connector-h2-common</module>
+        <module>tranql-connector-h2-local</module>
+        <module>tranql-connector-h2-xa</module>
+    </modules>
+    
+</project>
diff -urNw dt-a/tranql-connector-h2/tranql-connector-h2-common/pom.xml dt-e/tranql-connector-h2/tranql-connector-h2-common/pom.xml
--- tranql-connector-h2/tranql-connector-h2-common/pom.xml	1970-01-01 10:00:00.000000000 +1000
+++ tranql-connector-h2/tranql-connector-h2-common/pom.xml	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,76 @@
+<!--
+  ~ Copyright (c) 2004 - 2007, Tranql project contributors
+  ~
+  ~ Licensed under the Apache License, Version 2.0 (the "License");
+  ~ you may not use this file except in compliance with the License.
+  ~ You may obtain a copy of the License at
+  ~
+  ~     http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing, software
+  ~ distributed under the License is distributed on an "AS IS" BASIS,
+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  ~ See the License for the specific language governing permissions and
+  ~ limitations under the License.
+  ~
+  -->
+
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+    
+    <modelVersion>4.0.0</modelVersion>
+    
+    <parent>
+        <groupId>org.tranql</groupId>
+        <artifactId>tranql-connector-h2</artifactId>
+        <version>1.4</version>
+        <relativePath>../pom.xml</relativePath>
+    </parent>
+    
+    <artifactId>tranql-connector-h2-common</artifactId>
+    <name>TranQL Vendors, H2 :: Common</name>
+    <packaging>jar</packaging>
+    
+    <dependencies>
+        <dependency>
+            <groupId>com.h2database</groupId>
+            <artifactId>h2</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        
+        <dependency>
+            <groupId>org.apache.geronimo.specs</groupId>
+            <artifactId>geronimo-j2ee-connector_1.5_spec</artifactId>
+            <scope>provided</scope>
+        </dependency>
+
+        <dependency>
+            <groupId>org.apache.geronimo.specs</groupId>
+            <artifactId>geronimo-jta_1.1_spec</artifactId>
+            <scope>provided</scope>
+        </dependency>
+    
+        <dependency>
+            <groupId>junit</groupId>
+            <artifactId>junit</artifactId>
+            <version>3.8.1</version>
+            <scope>test</scope>
+        </dependency>
+    </dependencies>
+
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-surefire-plugin</artifactId>
+                <version>2.1.3</version>
+                <configuration>
+                    <excludes>
+                        <!-- This looks like a test, but has not test methods -->
+                        <exclude>**/CMRTestCase.java</exclude>
+                    </excludes>
+                </configuration>
+            </plugin>
+        </plugins>
+    </build>
+
+</project>
diff -urNw dt-a/tranql-connector-h2/tranql-connector-h2-common/src/main/java/org/tranql/connector/h2/LocalMCF.java dt-e/tranql-connector-h2/tranql-connector-h2-common/src/main/java/org/tranql/connector/h2/LocalMCF.java
--- tranql-connector-h2/tranql-connector-h2-common/src/main/java/org/tranql/connector/h2/LocalMCF.java	1970-01-01 10:00:00.000000000 +1000
+++ tranql-connector-h2/tranql-connector-h2-common/src/main/java/org/tranql/connector/h2/LocalMCF.java	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,97 @@
+/*
+ * Copyright (c) 2004 - 2007, Tranql project contributors
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ */
+
+package org.tranql.connector.h2;
+
+import org.h2.jdbcx.JdbcDataSource;
+import org.tranql.connector.NoExceptionsAreFatalSorter;
+import org.tranql.connector.jdbc.AbstractLocalDataSourceMCF;
+
+/**
+ * ManagedConnectionFactory that wraps a H2 DataSource for use in-VM.
+ *
+ * @version $Revision: 508 $ $Date: 2007-09-21 12:02:45 +1000 (Fri, 21 Sep 2007) $
+ */
+public class LocalMCF extends AbstractLocalDataSourceMCF {
+    private final JdbcDataSource ds;
+
+    /**
+     * Default constructor for a H2 Local DataSource.
+     */
+    public LocalMCF() {
+        super(new JdbcDataSource(), new NoExceptionsAreFatalSorter(), false);
+        ds = (JdbcDataSource) super.dataSource;
+    }
+
+    /**
+     * Return the user name used to establish the connection.
+     *
+     * @return the user name used to establish the connection
+     */
+    public String getUserName() {
+        return ds.getUser();
+    }
+
+    /**
+     * Set the user name used establish the connection.
+     * This value is used if no connection information is supplied by the application
+     * when attempting to create a connection.
+     *
+     * @param user the user name used to establish the connection; may be null
+     */
+    public void setUserName(String user) {
+        ds.setUser(user);
+    }
+
+    /**
+     * Return the password credential used to establish the connection.
+     *
+     * @return the password credential used to establish the connection
+     */
+    public String getPassword() {
+        return ds.getPassword();
+    }
+
+    /**
+     * Set the user password credential establish the connection.
+     * This value is used if no connection information is supplied by the application
+     * when attempting to create a connection.
+     *
+     * @param password the password credential used to establish the connection; may be null
+     */
+    public void setPassword(String password) {
+        ds.setPassword(password);
+    }
+
+    /**
+     * Return the current url for the data source.
+     *
+     * @return the url. 
+     */
+    public String getConnectionURL() {
+        return ds.getURL();
+    }
+
+    /**
+     * Set the url for the data source.
+     *
+     * @param url The url 
+     */
+    public void setConnectionURL(String url) {
+        ds.setURL(url);
+    }
+}
diff -urNw dt-a/tranql-connector-h2/tranql-connector-h2-common/src/main/java/org/tranql/connector/h2/XAMCF.java dt-e/tranql-connector-h2/tranql-connector-h2-common/src/main/java/org/tranql/connector/h2/XAMCF.java
--- tranql-connector-h2/tranql-connector-h2-common/src/main/java/org/tranql/connector/h2/XAMCF.java	1970-01-01 10:00:00.000000000 +1000
+++ tranql-connector-h2/tranql-connector-h2-common/src/main/java/org/tranql/connector/h2/XAMCF.java	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,118 @@
+/*
+ * Copyright (c) 2004 - 2007, Tranql project contributors
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ */
+
+package org.tranql.connector.h2;
+
+import java.sql.SQLException;
+import javax.resource.ResourceException;
+import javax.resource.spi.ConnectionRequestInfo;
+import javax.resource.spi.ManagedConnection;
+import javax.resource.spi.ResourceAdapterInternalException;
+import javax.security.auth.Subject;
+import javax.sql.XAConnection;
+
+import org.h2.jdbcx.JdbcDataSource;
+import org.tranql.connector.CredentialExtractor;
+import org.tranql.connector.NoExceptionsAreFatalSorter;
+import org.tranql.connector.jdbc.AbstractXADataSourceMCF;
+import org.tranql.connector.jdbc.ManagedXAConnection;
+
+/**
+ * ManagedConnectionFactory that wraps a H2 XADataSource for use in-VM.
+ *
+ * @version $Revision: 508 $ $Date: 2007-09-21 12:02:45 +1000 (Fri, 21 Sep 2007) $
+ */
+public class XAMCF extends AbstractXADataSourceMCF {
+    private final JdbcDataSource ds;
+
+    /**
+     * Default constructor for a H2 XA DataSource.
+     */
+    public XAMCF() {
+        super(new JdbcDataSource(), new NoExceptionsAreFatalSorter());
+        ds = (JdbcDataSource) xaDataSource;
+    }
+
+    public ManagedConnection createManagedConnection(Subject subject, ConnectionRequestInfo connectionRequestInfo) throws ResourceException {
+        CredentialExtractor credentialExtractor = new CredentialExtractor(subject, connectionRequestInfo, this);
+
+        XAConnection sqlConnection = getPhysicalConnection(subject, credentialExtractor);
+        try {
+            return new ManagedXAConnection(this, sqlConnection, credentialExtractor, exceptionSorter);
+        } catch (SQLException e) {
+            throw new ResourceAdapterInternalException("Could not set up ManagedXAConnection", e);
+        }
+    }
+
+    /**
+     * Return the user name used to establish the connection.
+     *
+     * @return the user name used to establish the connection
+     */
+    public String getUserName() {
+        return ds.getUser();
+    }
+
+    /**
+     * Set the user name used establish the connection.
+     * This value is used if no connection information is supplied by the application
+     * when attempting to create a connection.
+     *
+     * @param user the user name used to establish the connection; may be null
+     */
+    public void setUserName(String user) {
+        ds.setUser(user);
+    }
+
+    /**
+     * Return the password credential used to establish the connection.
+     *
+     * @return the password credential used to establish the connection
+     */
+    public String getPassword() {
+        return ds.getPassword();
+    }
+
+    /**
+     * Set the user password credential establish the connection.
+     * This value is used if no connection information is supplied by the application
+     * when attempting to create a connection.
+     *
+     * @param password the password credential used to establish the connection; may be null
+     */
+    public void setPassword(String password) {
+        ds.setPassword(password);
+    }
+
+    /**
+     * Return the current url for the data source.
+     *
+     * @return the url. 
+     */
+    public String getConnectionURL() {
+        return ds.getURL();
+    }
+
+    /**
+     * Set the url for the data source.
+     *
+     * @param url The url 
+     */
+    public void setConnectionURL(String url) {
+        ds.setURL(url);
+    }
+}
diff -urNw dt-a/tranql-connector-h2/tranql-connector-h2-local/pom.xml dt-e/tranql-connector-h2/tranql-connector-h2-local/pom.xml
--- tranql-connector-h2/tranql-connector-h2-local/pom.xml	1970-01-01 10:00:00.000000000 +1000
+++ tranql-connector-h2/tranql-connector-h2-local/pom.xml	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,41 @@
+<!--
+  ~ Copyright (c) 2004 - 2007, Tranql project contributors
+  ~
+  ~ Licensed under the Apache License, Version 2.0 (the "License");
+  ~ you may not use this file except in compliance with the License.
+  ~ You may obtain a copy of the License at
+  ~
+  ~     http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing, software
+  ~ distributed under the License is distributed on an "AS IS" BASIS,
+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  ~ See the License for the specific language governing permissions and
+  ~ limitations under the License.
+  ~
+  -->
+
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+    
+    <modelVersion>4.0.0</modelVersion>
+    
+    <parent>
+        <groupId>org.tranql</groupId>
+        <artifactId>tranql-connector-h2</artifactId>
+        <version>1.4</version>
+        <relativePath>../pom.xml</relativePath>
+    </parent>
+    
+    <artifactId>tranql-connector-h2-local</artifactId>
+    <name>TranQL Vendors, H2 :: Local RA</name>
+    <packaging>rar</packaging>
+    
+    <dependencies>
+        <dependency>
+            <groupId>${pom.groupId}</groupId>
+            <artifactId>tranql-connector-h2-common</artifactId>
+            <version>${pom.version}</version>
+        </dependency>
+    </dependencies>
+    
+</project>
diff -urNw dt-a/tranql-connector-h2/tranql-connector-h2-local/src/main/rar/META-INF/ra.xml dt-e/tranql-connector-h2/tranql-connector-h2-local/src/main/rar/META-INF/ra.xml
--- tranql-connector-h2/tranql-connector-h2-local/src/main/rar/META-INF/ra.xml	1970-01-01 10:00:00.000000000 +1000
+++ tranql-connector-h2/tranql-connector-h2-local/src/main/rar/META-INF/ra.xml	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,97 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<!--
+  ~ Copyright (c) 2004 - 2007, Tranql project contributors
+  ~
+  ~ Licensed under the Apache License, Version 2.0 (the "License");
+  ~ you may not use this file except in compliance with the License.
+  ~ You may obtain a copy of the License at
+  ~
+  ~     http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing, software
+  ~ distributed under the License is distributed on an "AS IS" BASIS,
+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  ~ See the License for the specific language governing permissions and
+  ~ limitations under the License.
+  ~
+  -->
+
+<connector xmlns="http://java.sun.com/xml/ns/j2ee"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/connector_1_5.xsd"
+    version="1.5">
+
+    <description>
+        A resource adaptor that provides access to a H2 database with local transaction support.
+    </description>
+    <display-name>TranQL XA Resource Adapter for H2</display-name>
+
+    <vendor-name>tranql.codehaus.org</vendor-name>
+    <eis-type>JDBC</eis-type>
+    <resourceadapter-version>1.0</resourceadapter-version>
+    <license>
+        <description>
+            Licensed under the Apache License, Version 2.0 (the "License");
+            you may not use this file except in compliance with the License.
+            You may obtain a copy of the License at
+
+               http://www.apache.org/licenses/LICENSE-2.0
+
+            Unless required by applicable law or agreed to in writing, software
+            distributed under the License is distributed on an "AS IS" BASIS,
+            WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+            See the License for the specific language governing permissions and
+            limitations under the License.
+        </description>
+        <license-required>true</license-required>
+    </license>
+    <resourceadapter>
+        <outbound-resourceadapter>
+            <connection-definition>
+                <managedconnectionfactory-class>org.tranql.connector.h2.LocalMCF</managedconnectionfactory-class>
+                <config-property>
+                    <description>
+                        Username used to establish the physical connection.
+                        This also establishes the default schema; if omitted the engine defaults to 'APP'.
+                    </description>
+                    <config-property-name>UserName</config-property-name>
+                    <config-property-type>java.lang.String</config-property-type>
+                </config-property>
+                <config-property>
+                    <description>Password credential used to establish the physical connection.</description>
+                    <config-property-name>Password</config-property-name>
+                    <config-property-type>java.lang.String</config-property-type>
+                </config-property>
+                <config-property>
+                    <description>
+                        This config-property is currently ignored by H2.
+                    </description>
+                    <config-property-name>LoginTimeout</config-property-name>
+                    <config-property-type>java.lang.Integer</config-property-type>
+                </config-property>
+                <config-property>
+                    <description>
+                        If set to the string "shutdown", this will cause the database to shutdown when a java.sql.Connection object
+                        is obtained from the data source.
+                    </description>
+                    <config-property-name>ShutdownDatabase</config-property-name>
+                    <config-property-type>java.lang.String</config-property-type>
+                </config-property>
+
+                <connectionfactory-interface>javax.sql.DataSource</connectionfactory-interface>
+                <connectionfactory-impl-class>org.tranql.connector.jdbc.DataSource</connectionfactory-impl-class>
+                <connection-interface>java.sql.Connection</connection-interface>
+                <connection-impl-class>org.tranql.connector.jdbc.ConnectionHandle</connection-impl-class>
+
+            </connection-definition>
+            <transaction-support>LocalTransaction</transaction-support>
+            <authentication-mechanism>
+                <description>Uses JDBC user/password authentication based on properties supplied to connect</description>
+                <authentication-mechanism-type>BasicPassword</authentication-mechanism-type>
+                <credential-interface>javax.resource.spi.security.PasswordCredential</credential-interface>
+            </authentication-mechanism>
+            <reauthentication-support>false</reauthentication-support>
+        </outbound-resourceadapter>
+    </resourceadapter>
+</connector>
diff -urNw dt-a/tranql-connector-h2/tranql-connector-h2-xa/pom.xml dt-e/tranql-connector-h2/tranql-connector-h2-xa/pom.xml
--- tranql-connector-h2/tranql-connector-h2-xa/pom.xml	1970-01-01 10:00:00.000000000 +1000
+++ tranql-connector-h2/tranql-connector-h2-xa/pom.xml	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,41 @@
+<!--
+  ~ Copyright (c) 2004 - 2007, Tranql project contributors
+  ~
+  ~ Licensed under the Apache License, Version 2.0 (the "License");
+  ~ you may not use this file except in compliance with the License.
+  ~ You may obtain a copy of the License at
+  ~
+  ~     http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing, software
+  ~ distributed under the License is distributed on an "AS IS" BASIS,
+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  ~ See the License for the specific language governing permissions and
+  ~ limitations under the License.
+  ~
+  -->
+
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+    
+    <modelVersion>4.0.0</modelVersion>
+    
+    <parent>
+        <groupId>org.tranql</groupId>
+        <artifactId>tranql-connector-h2</artifactId>
+        <version>1.4</version>
+        <relativePath>../pom.xml</relativePath>
+    </parent>
+    
+    <artifactId>tranql-connector-h2-xa</artifactId>
+    <name>TranQL Vendors, H2 :: XA RA</name>
+    <packaging>rar</packaging>
+    
+    <dependencies>
+        <dependency>
+            <groupId>${pom.groupId}</groupId>
+            <artifactId>tranql-connector-h2-common</artifactId>
+            <version>${pom.version}</version>
+        </dependency>
+    </dependencies>
+    
+</project>
diff -urNw dt-a/tranql-connector-h2/tranql-connector-h2-xa/src/main/rar/META-INF/ra.xml dt-e/tranql-connector-h2/tranql-connector-h2-xa/src/main/rar/META-INF/ra.xml
--- tranql-connector-h2/tranql-connector-h2-xa/src/main/rar/META-INF/ra.xml	1970-01-01 10:00:00.000000000 +1000
+++ tranql-connector-h2/tranql-connector-h2-xa/src/main/rar/META-INF/ra.xml	2009-10-22 15:20:20.000000000 +1100
@@ -0,0 +1,89 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<!--
+  ~ Copyright (c) 2004 - 2007, Tranql project contributors
+  ~
+  ~ Licensed under the Apache License, Version 2.0 (the "License");
+  ~ you may not use this file except in compliance with the License.
+  ~ You may obtain a copy of the License at
+  ~
+  ~     http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing, software
+  ~ distributed under the License is distributed on an "AS IS" BASIS,
+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  ~ See the License for the specific language governing permissions and
+  ~ limitations under the License.
+  ~
+  -->
+
+<connector xmlns="http://java.sun.com/xml/ns/j2ee"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/connector_1_5.xsd"
+    version="1.5">
+
+    <description>
+        A resource adaptor that provides access to a H2 database with XA support.
+    </description>
+    <display-name>TranQL XA Resource Adapter for H2</display-name>
+
+    <vendor-name>tranql.codehaus.org</vendor-name>
+    <eis-type>JDBC</eis-type>
+    <resourceadapter-version>1.0</resourceadapter-version>
+    <license>
+        <description>
+            Licensed under the Apache License, Version 2.0 (the "License");
+            you may not use this file except in compliance with the License.
+            You may obtain a copy of the License at
+
+               http://www.apache.org/licenses/LICENSE-2.0
+
+            Unless required by applicable law or agreed to in writing, software
+            distributed under the License is distributed on an "AS IS" BASIS,
+            WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+            See the License for the specific language governing permissions and
+            limitations under the License.
+        </description>
+        <license-required>true</license-required>
+    </license>
+    <resourceadapter>
+        <outbound-resourceadapter>
+            <connection-definition>
+                <managedconnectionfactory-class>org.tranql.connector.h2.XAMCF</managedconnectionfactory-class>
+                <config-property>
+                    <description>
+                        Username used to establish the physical connection.
+                        This also establishes the default schema; if omitted the engine defaults to 'APP'.
+                    </description>
+                    <config-property-name>UserName</config-property-name>
+                    <config-property-type>java.lang.String</config-property-type>
+                </config-property>
+                <config-property>
+                    <description>Password credential used to establish the physical connection.</description>
+                    <config-property-name>Password</config-property-name>
+                    <config-property-type>java.lang.String</config-property-type>
+                </config-property>
+                <config-property>
+                    <description>
+                        This config-property is currently ignored by H2.
+                    </description>
+                    <config-property-name>LoginTimeout</config-property-name>
+                    <config-property-type>java.lang.Integer</config-property-type>
+                </config-property>
+
+                <connectionfactory-interface>javax.sql.DataSource</connectionfactory-interface>
+                <connectionfactory-impl-class>org.tranql.connector.jdbc.DataSource</connectionfactory-impl-class>
+                <connection-interface>java.sql.Connection</connection-interface>
+                <connection-impl-class>org.tranql.connector.jdbc.ConnectionHandle</connection-impl-class>
+
+            </connection-definition>
+            <transaction-support>XATransaction</transaction-support>
+            <authentication-mechanism>
+                <description>Uses JDBC user/password authentication based on properties supplied to connect</description>
+                <authentication-mechanism-type>BasicPassword</authentication-mechanism-type>
+                <credential-interface>javax.resource.spi.security.PasswordCredential</credential-interface>
+            </authentication-mechanism>
+            <reauthentication-support>false</reauthentication-support>
+        </outbound-resourceadapter>
+    </resourceadapter>
+</connector>
